function add_first_spawn()
	local electra_strong = "zone_witches_galantine_strong"
	local sakbuzz_strong = "amk_zone_sakbuzz_strong"
	local mincer_strong  = "amk_zone_mincer_strong"
	local tsa = {
		{ sakbuzz_strong, 8.97,    20.41,   157.24,		95,	  286255 },
		{ sakbuzz_strong, 13.66,   20.36,   157.33,		94,	  290857 },
		{ sakbuzz_strong, 17.82,   20.30,   157.25,		94,	  295485 },
		{ sakbuzz_strong, 32.94,   	4.00,   146.21,		1412,  67411 },
		{ sakbuzz_strong, 116.99,  20.13,   160.00,		240,  419813 },
		{ mincer_strong,  52.93,   	0.11,    32.36,		1240,  29236 },
		{ mincer_strong,  36.84,   	4.00,   146.21,		1412,  67530 },
		{ mincer_strong,  -147.20, 	0.31,  -298.22,		3239, 	6039 },
		{ electra_strong, -156.73, 	5.60, 	155.28, 	1369,  26481 },	-- ДТ Трубы
		{ electra_strong, -161.87, 	5.60, 	155.28, 	1369,  26481 },	-- ДТ Трубы
		{ electra_strong, -167.47, 	5.60, 	155.28, 	1369,  26481 },	-- ДТ Трубы
		{ electra_strong, -197.79, 	4.99, 	135.71, 	1369,  26481 },	-- ДТ Вышка
		{ electra_strong, -200.34, 	6.06, 	118.62, 	1369,  26478 },	-- ДТ Вышка
		{ electra_strong, -240.13, 	3.47, 	96.11,  	1371,  19541 }	-- ДТ Вышка
    }
	local shape = { shtype = 0, radius = 5.0, center = { 0, 0.5, 0 } }

    for i = 1, #tsa do
        amk_anoms.spawn_anomaly( tsa[ i ][ 1 ],
            sak.v3f( tsa[ i ][ 2 ], tsa[  i ][ 3 ], tsa[ i ][ 4 ] ),
            tsa[ i ][ 5 ], tsa[ i ][ 6 ], shape, "static"
        )
    end	

	this.start_randoms()
	doc.zone_mine()	
end

function trade_many_remove()
  	local sum = db.actor:money()
	if sum > 0 then db.actor:give_money(-sum) nlc_vars.trade_me_re = sum end
end

function trade_many_add()
	if nlc_vars.trade_me_re == nil then return end
	local sum = db.actor:money()
	if sum > 0 then db.actor:give_money(-sum) end
  	sum = nlc_vars.trade_me_re or 1
	if sum > 0 then db.actor:give_money(sum) nlc_vars.trade_me_re = nil end
end

function blowout_dialog()
    if 
		db.blowout_active == true 
	then 
		return false 
	else
		return true 
	end
end

function start_randoms()
    for _, v in ipairs({ 
		"sak_dialog.give_random_recipes",
		"treasure_manager.rnd",
		"generic_rnd",
		"sak_dialog.rec_art_info",
		"sak_dialog.rnd_item",
		"sak_dialog.rnd_item_amount"
    }) do
		dsh.get_next_random( v )	
    end
end