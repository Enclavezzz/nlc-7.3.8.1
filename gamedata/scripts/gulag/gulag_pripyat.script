--------------------------------------------------------------------------
-- Stuff
--------------------------------------------------------------------------
function printf() end

--------------------------------------------------------------------------
-- General
--------------------------------------------------------------------------
local t = {}
local gulags = {pri_monolith	= {comm = {"monolith","stranger"}}}

-- Job -------------------------------------------------------------------
function load_job(sj, gname, type, squad, groups)
		local g = gulags[type]
		if g then
				g.job(sj, gname, type, squad, groups)
		end
end

-- State -----------------------------------------------------------------
function check_state_stub(gulag)
		return 0
end

function load_states(gname, type)
		local g = gulags[type]

		if g then
				return g.state or check_state_stub
		end

		return nil
end
				
-- Dynamic ltx -----------------------------------------------------------
function load_ltx(gname, type)
		local g = gulags[type]
		if g then
				return g.ltx
		end

		return nil
end

-- Check communities -----------------------------------------------------
local function checkCommon(npc_community, gulag_type, npc_rank, se_obj, stalker)
		local g = gulags[gulag_type]
		if g then
				if g.comm then
						if type(g.comm)=="function" then
								return g.comm(npc_community, gulag_type, npc_rank, se_obj, stalker)
						end
						if type(g.comm)=="boolean" then
								return g.comm==stalker
						end

						for i, v in pairs(g.comm) do
								if npc_community==v then
										return true
								end
						end
						return false
				end
				return false
		end
		return false
end

function checkStalker(npc_community, gulag_type, npc_rank, se_obj)
		return checkCommon(npc_community, gulag_type, npc_rank, se_obj, true)
end

function checkMonster(npc_community, gulag_type, npc_rank, se_obj)
		return checkCommon(npc_community, gulag_type, npc_rank, se_obj, false)
end

--------------------------------------------------------------------------
-- Gulags
--------------------------------------------------------------------------

--------------------------------------------------------------------------
-- Monolith(главна€ база монолита)
--------------------------------------------------------------------------
-- Predicates ------------------------------------------------------------
function m_predicate_l(npc_info)
	return npc_info.story_id==828
end

function m_predicate_r(npc_info)
		return npc_info.profile_name=="pri_monolith_regular"
end

function m_predicate_all(npc_info)
		return true
end

function m_predicate_s(npc_info)
		return npc_info.profile_name=="pri_monolith_specnaz"
end

function m_predicate_e(npc_info)
		return npc_info.profile_name=="pri_monolith_exo"
end

function m_predicate_s_sniper(npc_info)
		return npc_info.profile_name=="pri_monolith_specnaz" and npc_info.is_sniper_name==true
end

-- Jobs ------------------------------------------------------------------
gulags.pri_monolith.job = function(sj, gname, type, squad, groups)
	local i, j, v = 0, 0, 0
	local prior, pred = 0, 0
	local state1_kamp, state1_restr = 0, 0
	local ltx = ""
	local in_r = ""

	ltx = "[danger@monolith]\n"..
			"ignore_distance = 2\n"..
			"ignore_types = corpse\n"..
			"ignore_distance_sound = 20\n"..
				
			"[death@"..gname.."_member]\n"..
			"on_info = {=killed_by_actor -pri_monolith_fire} %+pri_monolith_fire%\n"..
			
			"[hit@"..gname.."_member]\n"..
			"on_info = {=hit_by_actor -pri_monolith_fire} %+pri_monolith_fire%\n"..

			"[combat_ignore@"..gname.."]\n"..
			"combat_ignore_cond	= {=fighting_actor -pri_monolith_fire}\n"..

			-- кемп в гостиннице при атаке
			"[logic@"..gname.."_fight_in_hotel]\n"..
			"active				= kamp@"..gname.."_fight_in_hotel\n"..
			"combat_ignore		= combat_ignore@"..gname.."\n"..
			"on_death			= death@"..gname.."_member\n"..
			"on_hit = hit@"..gname.."_member\n"..

			"[kamp@"..gname.."_fight_in_hotel]\n"..
			"center_point		= kamp6\n"..
			"def_state_moving	= assault\n"..
			"danger				= danger@monolith\n"..
			"combat_ignore_cond	= {=fighting_actor -pri_monolith_fire}\n"..

			-- кемп в " олосе" при атаке
			"[logic@"..gname.."_fight_in_kolos]\n"..
			"active				= kamp@"..gname.."_fight_in_kolos\n"..
			"combat_ignore		= combat_ignore@"..gname.."\n"..
			"on_death			= death@"..gname.."_member\n"..
			"on_hit = hit@"..gname.."_member\n"..

			"[kamp@"..gname.."_fight_in_kolos]\n"..
			"center_point		= kamp4\n"..
			"def_state_moving	= assault\n"..
			"danger				= danger@monolith\n"..
			"combat_ignore_cond	= {=fighting_actor -pri_monolith_fire}\n"

	t = {section = "logic@"..gname.."_leader", 
		idle = 0,
		prior = 15, state = {0},
		squad = squad, group = groups[1],
		in_rest = in_r, out_rest = gname.."_leader_restr",
		position_threshold = 500,
		predicate = m_predicate_l
		} table.insert(sj, t)

	ltx = ltx.."[logic@"..gname.."_leader]\n"..
				"active			= walker@"..gname.."_leader\n"..
				"combat_ignore	= combat_ignore@"..gname.."\n"..
				"on_death		= death@"..gname.."_leader\n"..
				"on_hit 		= hit@"..gname.."_member\n"..

				"[death@"..gname.."_leader]\n"..
				"on_info		= %+pri_mon_leader_dead%\n"..

				"[walker@"..gname.."_leader]\n"..
				"path_walk		= leader_walk\n"..
				"path_look		= leader_look\n"..
				"meet		 	= meet@"..gname.."_leader\n"..
				"danger			= danger@monolith\n"..
				"combat_ignore_cond	= {=fighting_actor -pri_monolith_fire}\n"..
				
				"[meet@"..gname.."_leader]\n"..
				"meet_state 	= 2| {-pri_monolith_fire} wait\n"..
				"meet_state_wpn = 5| {-pri_monolith_fire} guard\n"..
				"victim 		= 3| actor\n"..
				"victim_wpn 	= 10| actor\n"..
				"use 			= true\n"..
				"use_wpn 		= false\n"..
				"abuse 			= false\n"..
				"meet_dialog	= monolith_leader_start_dialog\n"

		t = {section = "logic@"..gname.."_leader_attack",
			idle = 0,
			prior = 30, state = {1},
			squad = squad, group = groups[1],
			in_rest = in_r, out_rest = gname.."_leader_restr",
			position_threshold = 500,
			predicate = m_predicate_l
		} table.insert(sj, t)

	ltx = ltx.."[logic@"..gname.."_leader_attack]\n"..
				"active				= camper@"..gname.."_leader_attack\n"..
				"combat_ignore		= combat_ignore@"..gname.."\n"..
				"on_death			= death@"..gname.."_leader\n"..

				"[camper@"..gname.."_leader_attack]\n"..
				"path_walk			= leader_attack_walk\n"..
				"path_look			= leader_attack_look\n"..
				"danger				= danger@monolith\n"..
				"combat_ignore_cond	= {=fighting_actor -pri_monolith_fire}\n"
	
	t = {section = "logic@"..gname.."_exit_pribe",
			idle = 0,
			prior = 14, state = {0},
			squad = squad, group = groups[9],
			in_rest = in_r, out_rest = "",
			position_threshold = 500,
			predicate = m_predicate_all
		} table.insert(sj, t)

	ltx = ltx.."[logic@"..gname.."_exit_pribe]\n"..
				"active				= walker@"..gname.."_exit_pribe\n"..
				"combat_ignore		= combat_ignore@"..gname.."\n"..
				"on_death			= death@"..gname.."_member\n"..
				"on_hit 			= hit@"..gname.."_member\n"..

				"[walker@"..gname.."_exit_pribe]\n"..
				"path_walk			= exit_pribe_walk\n"..
				"path_look			= exit_pribe_look\n"..
				"danger				= danger@monolith\n"..
				"meet				= no_meet\n"..
				"combat_ignore_cond	= {=fighting_actor -pri_monolith_fire}\n"
				
	t = {section = "logic@"..gname.."_inroom_pribe",
			idle = 0,
			prior = 13, state = {0},
			squad = squad, group = groups[10],
			in_rest = in_r, out_rest = "",
			position_threshold = 500,
			predicate = m_predicate_all
		} table.insert(sj, t)

	ltx = ltx.."[logic@"..gname.."_inroom_pribe]\n"..
				"active				= walker@"..gname.."_inroom_pribe\n"..
				"combat_ignore		= combat_ignore@"..gname.."\n"..
				"on_death			= death@"..gname.."_member\n"..
				"on_hit = hit@"..gname.."_member\n"..

				"[walker@"..gname.."_inroom_pribe]\n"..
				"path_walk			= inroom_pribe_walk\n"..
				"path_look			= inroom_pribe_look\n"..
				"danger				= danger@monolith\n"..
				"meet				= no_meet\n"..
				"combat_ignore_cond	= {=fighting_actor -pri_monolith_fire}\n"
		-- walkers(одиночные патрули вокруг базы)
	prior = {8, 7, 8, 12, 12, 7}
	state1_restr = {"", "_kolos_restr", "_base_restr", "", "", ""}
	local pred_pl = {m_predicate_s, m_predicate_s, m_predicate_s, m_predicate_s, m_predicate_s, m_predicate_all}

		-- followers(парные патрули перед базой)
		prior = {8, 8, 8, 8}
		state1_kamp	= {"_fight_in_kolos", "_fight_in_hotel"}
		state1_restr = {"_kolos_restr",		""}
		for i, v in pairs({7, 10}) do
				for j = 1, 2 do
						--- state: main
				t = {section = "logic@"..gname.."_group_patrol"..i, 
					idle = 0,
					prior = prior[i + 2*(j - 1)], state = {1},
					squad = squad, group = groups[7],
					in_rest = in_r, out_rest = "",
					position_threshold = 500,
					predicate = m_predicate_s
					} table.insert(sj, t)

				t = {section = "logic@"..gname..state1_kamp[i], 
					idle = 0,
					prior = prior[i + 2*(j - 1)], state = {0},
					position_threshold = 500,
					squad = squad, group = groups[7],
					in_rest = "", out_rest = gname..state1_restr[i],
					predicate = m_predicate_s
					} table.insert(sj, t)
				end
		ltx = ltx.."[logic@"..gname.."_group_patrol"..i.."]\n"..
					"active				= patrol@"..gname.."_group_patrol"..i.."\n"..
					"combat_ignore		= combat_ignore@"..gname.."\n"..
					
					"[patrol@"..gname.."_group_patrol"..i.."]\n"..
					"path_walk			= patrol"..v.."_walk\n"..
					"path_look			= patrol"..v.."_look\n"..
					"formation			= line\n"..
					"danger				= danger@monolith\n"..
					"soundgroup			= "..gname.."_group_patrol"..i.."_sg\n"..
					"combat_ignore_cond	= {=fighting_actor -pri_monolith_fire}\n"
		end

		-- prayers(мол€щиес€ вокруг алтар€)
		for i, v in pairs({14, 14, 14, 13, 8, 8}) do
				local food=lua_random(1, 2)
				local nexter=i*273000+110000
				t = {section = "logic@"..gname.."_prayer"..i, 
					idle = 0,
					prior = v, state = {0,1},
					squad = squad, group = groups[1],
					in_rest = in_r, out_rest = "",
					position_threshold = 500,
					predicate = m_predicate_all
					} table.insert(sj, t)
		ltx = ltx.."[logic@"..gname.."_prayer"..i.."]\n"..
					"active				= walker@"..gname.."_prayer"..i.."\n"..
					"combat_ignore		= combat_ignore@"..gname.."\n"..
					"on_hit				= hit@altar_monolith\n"..
					"on_death			= hit@altar_monolith\n"..

					"[walker@"..gname.."_prayer"..i.."]\n"..
					"path_walk			= prayer"..i.."_walk\n"..
					"path_look			= prayer_look"..lua_random(1, 2).."\n"..
					"danger				= danger@monolith\n"..
					"meet				= no_meet\n"..
					"on_timer = "..nexter.." | walker@"..gname.."_food"..i.."\n"..
					"combat_ignore_cond	= {=fighting_actor -pri_monolith_fire}\n"..
					
					"[walker@"..gname.."_food"..i.."]\n"..
					"path_walk			= food_"..food.."_walk\n"..
					"path_look			= food_"..food.."_look\n"..
					"danger				= danger@monolith\n"..
					"meet				= no_meet\n"..
					"on_signal			= food_end | walker@"..gname.."_food2"..i.."\n"..
					"combat_ignore_cond	= {=fighting_actor -pri_monolith_fire}\n"..
					
					"[walker@"..gname.."_food2"..i.."]\n"..
					"path_walk			= food_"..food.."_walk\n"..
					"path_look			= food_"..food.."_look\n"..
					"danger				= danger@monolith\n"..
					"meet				= no_meet\n"..
					"on_timer = 10000 | walker@"..gname.."_prayer"..i.."\n"..
					"combat_ignore_cond	= {=fighting_actor -pri_monolith_fire}\n"
		end

		-- kamps
		prior = {{11, 11, 11, 7}, {10, 10, 10, 7}, {11, 11, 11}, {9, 9, 9}, {13, 13, 7}}
		pred = {
				{m_predicate_s, m_predicate_s, m_predicate_all, m_predicate_all},
				{m_predicate_s, m_predicate_s, m_predicate_all, m_predicate_all},
				{m_predicate_e, m_predicate_e, m_predicate_e},
				{m_predicate_s, m_predicate_s, m_predicate_s},
				{m_predicate_e, m_predicate_all, m_predicate_all}
				}
		online_cond	= {"{+pri_monolith_spawn2}", "{+pri_monolith_spawn2}", "{+pri_monolith_spawn1}", "{+pri_monolith_spawn1}", "{+pri_monolith_spawn2}"}
		state1_restr = {"_base_restr", "_base_restr", "", "_kolos_restr", "_base_restr"}
		local pr, pd
		for i, v in pairs({4, 4, 3, 3, 3}) do
				pr = prior[i]
				pd = pred[i]
				for j = 1, v do
						--- state: main
					t = {section = "logic@"..gname.."_kamp"..i.."_soldier", 
						idle = 0,
						prior = pr[j], state = {0},
						squad = squad, group = groups[i],
						in_rest = in_r, out_rest = "",
						position_threshold = 500,
						predicate = pd[j]
					} table.insert(sj, t)

					t = {section = "logic@"..gname.."_kamp"..i.."_attack"..j,
						idle = 0,
						prior = pr[j], state = {1},
						squad = squad, group = groups[i],
						in_rest = "", out_rest = gname..state1_restr[i],
						position_threshold = 500,
						predicate = pd[j]
					} table.insert(sj, t)
		ltx = ltx.."[logic@"..gname.."_kamp"..i.."_attack"..j.."]\n"..
					"active	= camper@"..gname.."_kamp"..i.."_attack"..j.."\n"..
					"combat_ignore	= combat_ignore@"..gname.."\n"..
					"on_death			= death@"..gname.."_member\n"..
					"on_hit = hit@"..gname.."_member\n"..

					"[camper@"..gname.."_kamp"..i.."_attack"..j.."]\n"..
					"path_walk	= kamp"..i.."_attack"..j.."_walk\n"..
					"path_look	= kamp"..i.."_attack"..j.."_look\n"..
					"danger		= danger@monolith\n"..
					"combat_ignore_cond	= {=fighting_actor -pri_monolith_fire}\n"
				end
		ltx = ltx.."[logic@"..gname.."_kamp"..i.."_soldier]\n"..
					"active			= kamp@"..gname.."_kamp"..i.."_soldier\n"..
					"combat_ignore	= combat_ignore@"..gname.."\n"..
					"on_death			= death@"..gname.."_member\n"..
					"on_hit = hit@"..gname.."_member\n"..
						
					"[kamp@"..gname.."_kamp"..i.."_soldier]\n"..
					"center_point	= kamp"..i.."\n"..
					"danger			= danger@monolith\n"..
					"def_state_moving= run\n"..
					"soundgroup		= "..gname.."_kamp"..i.."\n"..
					"combat_ignore_cond	= {=fighting_actor -pri_monolith_fire}\n"
		end

		-- snipers(снайперы на большом балконе главной базы)
		for i = 1, 2 do
				t = {section = "logic@"..gname.."_sniper"..i, 
					idle = 0,
					prior = 16, state = {0,1},
					squad = squad, group = groups[9],
					in_rest = in_r, out_rest = "",
					position_threshold = 500,
					predicate = m_predicate_s_sniper
				} table.insert(sj, t)
		ltx = ltx.."[logic@"..gname.."_sniper"..i.."]\n"..
					"active	= camper@"..gname.."_sniper"..i.."_wait\n"..
					"combat_ignore	= combat_ignore@"..gname.."\n"..
					"on_death			= death@"..gname.."_member\n"..
					"on_hit = hit@"..gname.."_member\n"..

					"[camper@"..gname.."_sniper"..i.."_wait]\n"..
					"path_walk	= balcony_sniper"..i.."_walk\n"..
					"path_look	= balcony_sniper"..i.."_look\n"..
					"def_state_moving	= assault\n"..
					"def_state_campering	= threat\n"..
					"def_state_campering_fire	= threat_fire\n"..
					"sniper		= true\n"..
					"shoot		= always\n"..
					--"no_retreat	= true\n"..
					"radius			= 0\n"..
					"on_info = {+"..gname.."_snipers_free} walker@"..gname.."_sniper"..i.."_free\n"..
					"combat_ignore_cond	 = {=fighting_actor -pri_monolith_fire}\n"..

					"[walker@"..gname.."_sniper"..i.."_free]\n"..
					"path_walk	 = balcony_sniper"..i.."_free_walk\n"..
					"path_look	 = balcony_sniper"..i.."_free_look\n"..
					"on_info	 = {-"..gname.."_snipers_free} camper@"..gname.."_sniper"..i.."_wait\n"..
					"combat_ignore_cond	 = {=fighting_actor -pri_monolith_fire}\n"
		end
	gulags.pri_monolith.ltx = ltx
end

-- States ----------------------------------------------------------------
gulags.pri_monolith.state = function(gulag)
	return 0 -- normal state
end

