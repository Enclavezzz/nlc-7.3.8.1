news = {
	escape_fox_quest				= xr_sound.get_safe_sound_object([[characters_voice\scenario\trader\trader_pda_fox]]),
	tips_agr_krot_sos				= xr_sound.get_safe_sound_object([[characters_voice\scenario\agroprom\krot_help_pda_1]]),
	tips_agr_krot_sos1				= xr_sound.get_safe_sound_object([[characters_voice\scenario\agroprom\krot_help_pda_2]]),
	pass_to_1st_door				= xr_sound.get_safe_sound_object([[characters_voice\scenario\val\door1_password]]),
	pass_to_2nd_door				= xr_sound.get_safe_sound_object([[characters_voice\scenario\val\door2_password]]),
	storyline_vasilyev_tip			= xr_sound.get_safe_sound_object([[characters_voice\scenario\yantar\vasiliev_pda]]),
	tips_gar_hellcar_alarm			= xr_sound.get_safe_sound_object([[characters_voice\scenario\garbage\neutrals_commander_pda_1]]),
	gar_direction_fire				= xr_sound.get_safe_sound_object([[characters_voice\scenario\garbage\junkyard_combat_ambush]]),
	gar_hellcar_victory				= xr_sound.get_safe_sound_object([[characters_voice\scenario\garbage\junkyard_combat_end]]),
	val_monolith_trader_pda1		= xr_sound.get_safe_sound_object([[characters_voice\scenario\val\trader_dialog1]])
}

pda_news = xr_sound.get_safe_sound_object([[device\pda\pda_news]])
pda_tips = xr_sound.get_safe_sound_object([[device\pda\pda_tip]])
pda_task = xr_sound.get_safe_sound_object([[device\pda\pda_objective]])

tips_icons = {
	default		= {0, 658},
	trader		= {332, 893},
	dolg		= {0, 658},
	freedom		= {0, 658},
	ecolog		= {498, 0},
	arena		= {332, 141},
	stalker		= {0, 658},
	krot		= {332, 47},
	barman		= {332, 235},
	wolf		= {332, 940},
	o_soznanie  = {498, 893},
	monolith 	= {0, 658},
	saharov		= {332, 470},
	prizrak		= {0, 658},
	killer		= {0, 658}
}

function send_tip(actor, news_id, timeout, sender, showtime, sender_id)
	if news_id==nil or db.actor:has_info("pda_is_broken") then
		return false 
	end
	-- printf("try to send tips for [%s]", tostring(sender_id))
	if sender_id~=nil then
		local sim = alife()
		if sim~=nil then
			local npc = sim:story_object(sender_id)
			if npc~=nil then
				if npc.online then
					--в онлайне проверяем на раненность
					if xr_wounded.is_heavy_wounded_by_id(npc.id) then
						printf("[PDA]Cannot send tips [%s], sender is heavy wounded", tostring(news_id))
						return false
					end
				end
				-- в других случаях только на смерть
				if npc:alive()==1 then
					printf("[PDA]Cannot send tips [%s], sender is dead", tostring(news_id))
					return false
				end
			end
		end
	end

	if timeout==nil then timeout = 0 end
	if showtime==nil then showtime = 5000 end

	--' Играем дефолтный звук
	pda_tips:play(db.actor, timeout, sound_object.s2d)
	if news[news_id]~=nil then
		--' Играем звук забитый
		news[news_id]:play(db.actor, timeout+1, sound_object.s2d)
		--' Необходимо поставить время показа по длине сцены
		local length = news[news_id]:length()
		if length > showtime then
			showtime = length
		end
	end
	if sender==nil then
		sender = "default"
	end
	local x = tips_icons[sender][1]
	local y = tips_icons[sender][2]
	
	local news_text = "%c[255,160,160,160]"..game.translate_string("st_tip").."\\n".."%c[default]"..game.translate_string(news_id)
	actor:give_game_news(news_text, "ui\\ui_iconsTotal", Frect():set(x,y,83,47), timeout*1000, showtime)
	return true
end
local action_descr_by_type = {
	new = "general_new_task",
	update = "general_update_task",
	complete = "general_complete_task",
	refused = "general_cancel_task",
	fail = "general_fail_task"
}
function send_task(actor, type, task, objective)
	if db.actor==nil then
		return false
	end
	--' Берем координаты из текстуры таска
	local task_texture, task_rect = get_texture_info("ui_iconsTotal_"..task:get_id(), "ui_iconsTotal_locations")			
	--' Играем дефолтный звук
	pda_task:play(db.actor, 0, sound_object.s2d)
	local news_text
	if type=="new" or type=="update" then
	news_text = "%c[255,1,255,255]"..game.translate_string(action_descr_by_type[type]).."\\n".."%c[default]"..game.translate_string(task:get_title())
	elseif type=="complete"	then
	news_text = "%c[255,85,255,170]"..game.translate_string(action_descr_by_type[type]).."\\n".."%c[default]"..game.translate_string(task:get_title())
	elseif type=="fail"	then
	news_text = "%c[255,1,1,255]"..game.translate_string(action_descr_by_type[type]).."\\n".."%c[default]"..game.translate_string(task:get_title())
	elseif type=="refused" then
	news_text = "%c[255,255,1,255]"..game.translate_string(action_descr_by_type[type]).."\\n".."%c[default]"..game.translate_string(task:get_title())
	end
	if db.actor:is_talking() then	
		db.actor:give_talk_message(news_text, task_texture, task_rect,"iconed_answer_item")
	else
		db.actor:give_game_news(news_text, task_texture, task_rect, 0, 3000)
	end	
	if type=="new" or type=="update" then
		--' Выдать новое подзадание
		if task:get_objectives_cnt()==objective:get_idx()+1 then
			return
		end
		news_text = game.translate_string(task:get_objective(objective:get_idx() + 1):get_description())
	end

	local hud = get_hud()
	hud:AddCustomStatic("main_task", true)
	hud:GetCustomStatic("main_task"):wnd():SetTextST(news_text)
	hud:GetCustomStatic("main_task").m_endTime = time_global()/1000 + 5
end
function send_task_news(type, task_icon,task_title)
	if db.actor==nil then
		return false
	end
	local task_texture, task_rect = get_texture_info("ui_iconsTotal_"..task_icon, "ui_iconsTotal_locations")
	pda_task:play(db.actor, 0, sound_object.s2d)
	local news_text
	if type=="new" or type=="update" then
		news_text = "%c[255,1,255,255]"..game.translate_string(action_descr_by_type[type]).."\\n".."%c[default]"..game.translate_string(task_title)
	elseif type=="complete"	then
		news_text = "%c[255,85,255,170]"..game.translate_string(action_descr_by_type[type]).."\\n".."%c[default]"..game.translate_string(task_title)
	elseif type=="fail"	then
		news_text = "%c[255,1,1,255]"..game.translate_string(action_descr_by_type[type]).."\\n".."%c[default]"..game.translate_string(task_title)
	elseif type=="refused" then
		news_text = "%c[255,255,1,255]"..game.translate_string(action_descr_by_type[type]).."\\n".."%c[default]"..game.translate_string(task_title)
	end
	if db.actor:is_talking() then	
		db.actor:give_talk_message(news_text, task_texture, task_rect,"iconed_answer_item")
	else
		db.actor:give_game_news(news_text, task_texture, task_rect, 0, 3000)
	end	
end
function send_encyclopedy(type, title)
	if type=="Diary" then
		pda_news:play(db.actor, 0, sound_object.s2d)
		local task_texture, task_rect = get_texture_info("ui_iconsTotal_locations", "ui_iconsTotal_locations")
		local news_text = "%c[255,160,160,160]"..game.translate_string("st_found_new_pda").."\\n".."%c[default]"..game.translate_string(title)
		if db.actor:is_talking() then	
			db.actor:give_talk_message(news_text, task_texture, task_rect,"iconed_answer_item")
		else
			db.actor:give_game_news(news_text, task_texture, task_rect, 0, 3000)
		end	
	end
end
--[[
function get_inv_name(section)
	return system_ini():r_string(section,"inv_name")
end
function relocate_item(actor, type, item)
	if db.actor==nil then return false end
	--' Играем дефолтный звук
	if type=="in" then
		local task_texture, task_rect = get_texture_info("ui_iconsTotal_found_thing")
		local news_text = "%c[255,1,255,1]"..game.translate_string("general_in_item").."\\n".."%c[default]"..game.translate_string(get_inv_name(item))		
		if db.actor:is_talking() then
			db.actor:give_talk_message(news_text, task_texture, task_rect,"iconed_answer_item")
		else
			db.actor:give_game_news(news_text, task_texture, task_rect, 0, 3000)
		end		
	elseif type=="out" then
		local task_texture, task_rect = get_texture_info("ui_iconsTotal_lost_thing")
		local news_text = "%c[255,255,1,1]"..game.translate_string("general_out_item").."\\n".."%c[default]"..game.translate_string(get_inv_name(item))		
		if db.actor:is_talking() then
			db.actor:give_talk_message(news_text, task_texture, task_rect,"iconed_answer_item")
		else
			db.actor:give_game_news(news_text, task_texture, task_rect, 0, 3000)
		end		
	end
end
function relocate_money(actor, type, amount)
	if db.actor==nil then return false end
	if type=="in" then
		local task_texture, task_rect = get_texture_info("ui_iconsTotal_found_money")
		local news_text = "%c[255,1,255,1]"..game.translate_string("general_in_money").."\\n".."%c[default]"..game.translate_string(tostring(amount).." рублей")
		
		if db.actor:is_talking() then
			db.actor:give_talk_message(news_text, task_texture, task_rect, "iconed_answer_item")
		else
			db.actor:give_game_news(news_text, task_texture, task_rect, 0, 3000)
		end		
	elseif type=="out" or type==1 then
		local task_texture, task_rect = get_texture_info("ui_iconsTotal_lost_money")
		local news_text = "%c[255,255,1,1]"..game.translate_string("general_out_money").."\\n".."%c[default]"..game.translate_string(tostring(amount).." рублей")	
		if db.actor:is_talking() then
			db.actor:give_talk_message(news_text, task_texture, task_rect, "iconed_answer_item")
		else
			db.actor:give_game_news(news_text, task_texture, task_rect, 0, 3000)
		end		
	end
end
--]]