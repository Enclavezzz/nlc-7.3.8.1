-- AGROPROM

function proceed()
	local actor = db.actor
	if actor:object("gunslinger_flash") then 
		actor:give_info_portion("agr_find_ghost_start")
		return true
	end
end

function process_info_portion(info_id)
	if info_id=="agr_krot_secret_info" and not has_alife_info("agr_find_gunslinger_cache_start") then
	db.actor:give_info_portion("agr_find_gunslinger_cache_start")
	db.actor:give_info_portion("agr_krot_task_complete")
	db.actor:give_info_portion("agr_krot_band_done")
	end
	if info_id=="agr_krot_dead" then
	db.actor:give_info_portion("agr_krot_band_done")
	end

	return false
end

----------------------------------------------------------------------------------------------

function have_krots_flash(task, objective)
		if db.actor:object("krot_flash")~=nil then
			db.actor:give_info_portion("agr_krot_task_complete")
			return true
		end	
	return false
end

function have_gunslingers_flash(task, objective)
		if db.actor:object("gunslinger_flash")~=nil then
			db.actor:give_info_portion("agr_find_gunslinger_cache_final")
			return true
		end
		return false	
end

function ghost_tips()
	db.actor:give_info_portion("agr_gunslinger_flash_have")
end

function agr_actor_enemy()
		if level_object_by_sid(302)~=nil then
		local actor = db.actor
		local npc = level_object_by_sid(302)
		local t = db.storage[npc:id()].death
		return npc:relation(actor)==game_object.enemy or(t~=nil and t.killer==actor:id())
	end
		return false
end
