---------------------------------------------------------------------
-- Привет от Сяка 
---------------------------------------------------------------------

-- глобальные переменные
af_count				=0
arts_operate			=false
game_began				=false
black_bonus				=1
weap_hide				=false
flag_sah				=false
bad_objs				={}
mass_add				=0
dog_psy					=0
day_shmoney				=1

level_difficulty = {  -- коэффициенты общей сложности игры на каждой локации
	["l01_escape"			]=0.9,
	["l02_garbage"			]=1.0,
	["l03_agroprom"			]=1.5,
	["l03u_agr_underground"	]=1.7,
	["l04_darkvalley"		]=1.2,
	["k01_darkscape"		]=1.1,
	["l04u_labx18"			]=1.8,
	["l05_bar"				]=1.1,
	["l06_rostok"			]=1.4,
	["l07_military"			]=1.4,
	["l08_yantar"			]=1.4,
	["l08u_brainlab"		]=2.0,
	["l10_radar"			]=1.6,
	["limansk"				]=1.5,
	["lost_village"			]=0.9,
	["marsh"				]=0.9,
	["red_forest"			]=1.5,
	["warlab"				]=2.2,
	["labx10"				]=2.0,
	["labx8"				]=2.5,
	["generators"			]=1.6,
	["aver"					]=1.6,
	["hospital"				]=1.0,
	["deadcity"				]=1.7,
	["av_peshera"			]=1.8,
	["l10u_bunker"			]=3.0,
	["l11_pripyat"			]=1.7,
	["l12_stancia_new"		]=1.8,
	["l12_stancia_2_new"	]=1.9,
	["l12u_control_monolith"]=1.9,
	["l12u_sarcofag"		]=1.9
	}

level_trees={
	["l01_escape"			]=1,
	["l02_garbage"			]=3,
	["l03_agroprom"			]=1,
	["l03u_agr_underground"	]=0,
	["l04_darkvalley"		]=3,
	["k01_darkscape"		]=1,
	["l04u_labx18"			]=0,
	["l05_bar"				]=3,
	["l06_rostok"			]=3,
	["l07_military"			]=3,
	["l08_yantar"			]=5,
	["l08u_brainlab"		]=0,
	["l10_radar"			]=5,
	["limansk"				]=3,
	["lost_village"			]=1,
	["marsh"				]=2,
	["red_forest"			]=6,
	["warlab"				]=0,
	["labx10"				]=0,
	["labx8"				]=0,
	["generators"			]=5,
	["aver"					]=4,
	["hospital"				]=1,
	["deadcity"				]=7,
	["av_peshera"			]=0,
	["l10u_bunker"			]=0,
	["l11_pripyat"			]=8,
	["l12_stancia_new"		]=8,
	["l12_stancia_2_new"	]=8,
	["l12u_control_monolith"]=0,
	["l12u_sarcofag"		]=0
	}

level_stons={
	["l01_escape"		]=1,
	["l02_garbage"		]=2,
	["l03_agroprom"		]=2,
	["l03u_agr_underground"	]=0,
	["l04_darkvalley"	]=2,
	["k01_darkscape"	]=4,
	["l04u_labx18"		]=4,
	["l05_bar"		]=2,
	["l06_rostok"		]=3,
	["l07_military"		]=2,
	["l08_yantar"		]=2,
	["l08u_brainlab"	]=4,
	["l10_radar"		]=3,
	["limansk"		]=4,
	["lost_village"		]=1,
	["marsh"		]=0,
	["red_forest"		]=0,
	["warlab"		]=4,
	["labx10"		]=4,
	["labx8"		]=4,
	["generators"		]=3,
	["aver"			]=1,
	["hospital"		]=4,
	["deadcity"		]=3,
	["av_peshera"		]=4,
	["l10u_bunker"		]=0,
	["l11_pripyat"		]=3,
	["l12_stancia_new"	]=3,
	["l12_stancia_2_new"	]=3,
	["l12u_control_monolith"]=0,
	["l12u_sarcofag"	]=0
	}

pain_snd_tbl =  {
				[[characters_voice\human_01\dolg\fight\hit\hit_7]],
				[[characters_voice\human_01\dolg\fight\hit\hit_9]],
				[[characters_voice\human_01\freedom\fight\hit\hit_4]],
				[[characters_voice\human_01\freedom\fight\hit\hit_6]]
				}

local kolb				=false
local snd_volume		=1
local sim 				= alife()
local r_old				=0.45
local self_rep_boxes	={}
local mask_poison		=0
local t_s_1				=300000
local torch_id			=BAD_OBJ_ID
local have_many			=0
local astma				=false

local table_food={
	["bread"]			=true,
	["kolbasa"]			=true,
	["suhpay"]			=true,
	["green_kolbasa"]	=true,
	["vodka"]			=true,
	["energy_drink"]	=true,
	["conserva"]		=true
	}

local table_aart={
	["af_medusa"]		=true,
	["af_vyvert"]		=true,
	["af_blood"]		=true,
	["af_electra_sparkler"]	=true,
	["af_drops"]		=true,
	["af_ameba_slime"]	=true,
	["af_rusty_thorn"]	=true
	}

local trs_sid_sound={
	[88]="3", [89]="3", [90]="3", [2300]="3", [573]="2", [4551]="3", [4552]="3", [4553]="3", [11]="10", [2001]="2", [2002]="3", [2003]="2", [2005]="3", [2006]="2", [2007]="2", [2008]="2", [2010]="2", [2011]="2", [2015]="3", [2016]="2", [2017]="2", [2018]="2", [2019]="3", [2020]="3", [2021]="2", [2025]="2", [2026]="2", [2030]="3", [2031]="3", [2032]="3", [2033]="3", [2034]="2", [2230]="10", [2231]="10", [2232]="10", [2234]="10", [2235]="10", [2236]="10", [2237]="10", [2240]="10", [2241]="10", [2280]="10", [2281]="10", [2282]="10", [2283]="10", [2284]="10", [2285]="10", [2286]="10", [2287]="10", [2288]="10", [2289]="10", [2290]="10", [2291]="10", [2292]="10", [2293]="10", [2294]="10", [2295]="10", [2296]="10", [2297]="10", [2298]="10", [2299]="10", [31]="11", [4001]="2", [5190]="10", [523]="2", [5523]="7", [5549]="3", [5725]="7", [5726]="3", [5727]="3", [5728]="3", [5729]="3", [5730]="3", [5743]="1", [5814]="11", [5862]="11", [5871]="11", [5872]="10", [5873]="10", [5874]="2", [5875]="10", [5876]="10", [5874]="10", [5878]="10", [5879]="10", [5880]="10", [9066]="11", [9067]="5", [9068]="6", [9069]="11", [9071]="4", [9115]="4", [9140]="2", [9141]="2", [9142]="2", [9132]="2", [9143]="2", [9144]="2", [2000]="2", [2118]="0", [9073]="5", [9073]="5", [9072]="11", [9063]="5", [9065]="5", [9062]="0", [9060]="0", [9061]="0", [9074]="0", [5000]="10", [5001]="1", [5002]="9", [5003]="3", [5004]="9", [5005]="1", [5006]="4", [5007]="10", [5008]="5", [5009]="3", [5010]="1", [5011]="3", [5012]="5", [5013]="1", [5014]="3", [5015]="0", [5016]="5", [5017]="10", [5018]="1", [5019]="5", [5020]="1", [5030]="5", [5031]="10", [5032]="1", [5033]="10", [5034]="10", [5035]="10", [5036]="10", [5037]="1", [5038]="9", [5039]="6", [5040]="6", [5041]="8", [5042]="0", [5043]="1", [5044]="5", [5045]="4", [5046]="10", [5047]="3", [5048]="10", [5049]="1", [5050]="2", [5051]="1", [5052]="8", [5053]="1", [5054]="1", [5065]="10", [5066]="6", [5067]="9", [5068]="1", [5069]="1", [5070]="5", [5071]="1", [5072]="9", [5073]="1", [5074]="2", [5075]="2", [5076]="5", [5077]="1", [5078]="5", [5079]="4", [5080]="1", [5081]="10", [5083]="4", [5084]="3", [5085]="8", [5086]="4", [5087]="2", [5088]="4", [5089]="10", [5090]="6", [5091]="3", [5092]="5", [5100]="5", [5101]="1", [5102]="2", [5103]="5", [5104]="1", [5400]="9", [5401]="6", [5402]="1", [5403]="2", [5404]="6", [5405]="3", [5406]="10", [5407]="1", [5408]="3", [5409]="5", [5410]="8", [5411]="1", [5412]="10", [5413]="4", [5414]="2", [5415]="1", [5416]="2", [5417]="1", [5418]="7", [5419]="2", [5420]="1", [5421]="2", [5422]="4", [5423]="2", [5424]="4", [5425]="3", [5426]="2", [5427]="1", [5428]="4", [5429]="1", [5430]="2", [5431]="1", [5432]="0", [5433]="4", [5434]="1", [5435]="1", [5436]="1", [5437]="9", [5438]="1", [5439]="3", [5440]="10", [5441]="9", [5442]="1", [5443]="7", [5444]="5", [5445]="10", [5446]="4", [5447]="10", [5448]="3", [5449]="5", [5450]="9", [5451]="9", [5452]="5", [5453]="10", [5454]="9", [5455]="1", [5456]="9", [5457]="3", [5458]="1", [5459]="4", [5460]="3", [5461]="2", [5462]="1", [5463]="5", [5464]="1", [5465]="4", [5466]="10", [5467]="5", [5468]="9", [5469]="2", [5470]="3", [5471]="1", [5472]="10", [5473]="2", [5474]="2", [5475]="8", [5476]="1", [5477]="5", [5478]="10", [5479]="6", [5480]="1", [5200]="6", [5201]="5", [5202]="5", [5203]="9", [5204]="10", [5205]="2", [5206]="1", [5207]="0", [5208]="1", [5209]="9", [5210]="1", [5211]="0", [5212]="3", [5213]="9", [5214]="6", [5215]="1", [5216]="2", [5217]="6", [5218]="1", [5219]="8", [5220]="6", [5221]="1", [5222]="1", [5223]="2", [5224]="6", [5225]="2", [5226]="8", [5227]="3", [5228]="0", [5229]="9", [5230]="4", [5231]="10", [5232]="1", [5233]="1", [5234]="5", [5235]="1", [5236]="1", [5237]="1", [5238]="1", [5239]="1", [5240]="8", [5241]="6", [5242]="5", [5243]="7", [5244]="1", [5245]="9", [5246]="1", [5247]="4", [5248]="3", [5249]="3", [5250]="1", [5251]="1", [5252]="2", [5253]="3", [5254]="9", [5255]="2", [5508]="4", [5511]="9", [5518]="5", [5501]="8", [5562]="4", [5502]="2", [5519]="10", [5521]="2", [5524]="6", [5510]="1", [5533]="4", [5520]="6", [5525]="7", [5534]="6", [5561]="10", [5544]="6", [5564]="5", [5506]="10", [5505]="1", [5504]="1", [5514]="9", [5516]="1", [5512]="6", [5522]="1", [5530]="5", [5532]="5", [5538]="1", [5563]="5", [5557]="1", [5551]="1", [5553]="1", [5556]="1", [5555]="1", [5541]="1", [5539]="5", [5558]="4", [5554]="1", [5552]="1", [5550]="1", [5560]="2", [5559]="1", [5565]="4", [5566]="2", [5567]="2", [5568]="2", [5569]="2", [5570]="2", [5571]="2", [5572]="2", [5573]="2", [5574]="2", [5543]="1", [5542]="1", [5540]="1", [5537]="8", [5536]="1", [5535]="6", [5531]="2", [5529]="1", [5528]="4", [5527]="6", [5526]="1", [5517]="0", [5515]="4", [5513]="6", [5509]="6", [5507]="1", [5503]="5", [5545]="2", [5546]="1", [5547]="3", [5548]="3", [5290]="2", [5611]="4", [5605]="5", [5613]="6", [5606]="5", [5612]="6", [5609]="1", [5601]="10", [5602]="1", [5603]="10", [5607]="10", [5608]="10", [5610]="1", [5614]="1", [5731]="1", [5732]="5", [5738]="4", [5739]="6", [5736]="0", [5737]="1", [5735]="10", [5734]="5", [5733]="10", [5740]="5", [5713]="1", [5722]="6", [5720]="6", [5718]="1", [5723]="0", [5707]="6", [5705]="6", [5703]="1", [5701]="10", [5711]="1", [5717]="1", [5721]="6", [5706]="6", [5724]="6", [5716]="1", [5704]="6", [5702]="2", [5715]="1", [5714]="1", [5712]="1", [5719]="1", [5710]="1", [5708]="1", [5709]="1", [5741]="1", [5801]="4", [5802]="1", [5803]="7", [5811]="1", [5812]="1", [5813]="1", [2100]="2", [2101]="1", [2102]="2", [2103]="1", [2104]="1", [2105]="2", [2106]="1", [2107]="1", [2108]="1", [2109]="1", [2110]="1", [2111]="2", [2112]="11", [2113]="2", [2114]="10", [2115]="3", [2116]="0", [2117]="1", [5851]="1", [5852]="1", [5853]="1", [5854]="2", [5855]="2", [5856]="1", [5857]="2", [5858]="1", [5859]="5", [5860]="0", [5861]="11", [5863]="5", [5864]="2"
	}

local time_difficulty={
	[0]=0.85,
	[1]=0.8,
	[2]=0.75,
	[3]=0.85,
	[4]=0.95,
	[5]=1,
	[6]=1.05,
	[7]=1.1,
	[8]=1.1,
	[9]=1.2,
	[10]=1.3,
	[11]=1.35,
	[12]=1.3,
	[13]=1.2,
	[14]=1.2,
	[15]=1.2,
	[16]=1.1,
	[17]=1.1,
	[18]=1.1,
	[19]=1.05,
	[20]=1.05,
	[21]=1,
	[22]=0.95,
	[23]=0.9,
	[24]=0.85
	}

local game_difficulty_by_num = {
	[0] = "gd_novice",
	[1] = "gd_stalker",
	[2] = "gd_veteran",
	[3] = "gd_master"
	}

function add_new_escape_100() 		add_new_lc(9100,		"На Забытый хутор",			"info_way100a") end
function add_new_agroprom_101() 	add_new_lc(9101,		"На Забытый хутор",			"info_way101a") end
function add_new_yantar_102() 		add_new_lc(9102,		"На Янтарь",				"info_way102a") end
function add_new_agroprom_103() 	add_new_lc(9103,		"На Агропром",				"info_way103a") end
function add_new_ros_red_104() 		add_new_lc(9104,		"В Рыжий лес",				"info_way104a") end
function add_new_rostok_105() 		add_new_lc(9105,		"В Рыжий лес",				"info_way105a") end
function add_new_radar_106() 		add_new_lc(9106,		"В Рыжий лес",				"info_way106a") misc.release_by_name("red_sak_teleport_yan") end
function add_new_darkvalley_107() 	add_new_lc(9107, 		"В Тёмную долину",			"info_way107a") end
function add_new_yantar_108() 		add_new_lc(9108,		"В зону \"Тесла\"",			"info_way108a") end
function add_new_radar_109() 		add_new_lc(9109,		"В подземную лабораторию",	"info_way109a") end
function add_new_mil_110() 			add_new_lc(9110,		"В Туманную чащу",			"info_way110a") end
function add_new_darkvalley_111() 	add_new_lc(9111,		"В Туманную чащу",			"info_way111a") end
function add_new_esc_dar_112() 		add_new_lc(9112,		"В Кишку",					"info_way112a") end
function add_new_military() 		add_new_lc(592,			"На Склады",				"info_way113a") end
function add_new_rostok() 			add_new_lc(594,			"На Дикую территорию",		"info_way114a") end
function add_new_garbage_116() 		add_new_lc(9116,		"На Свалку",				"info_way116a") end
function add_new_darkvalley_117() 	add_new_lc(9117,		"В Тёмную долину",			"info_way117a") end
function add_new_x18_x16_118() 		add_new_lc(9118,		"В лабораторию Х-16"					  ) end
function add_new_x16_x18_119() 		add_new_lc(9119,		"В лабораторию Х-18"					  ) end
function add_new_x10_130() 			add_new_lc(9130,		"В лабораторию Х-12",		"info_way130a") end
function add_new_x12_sar() 			add_new_lc(9131,		"В Саркофаг",				"info_way131a") end
function add_new_aver_gar_135() 	add_new_lc(9135,		"На свалку",				"info_way135a") end
function add_new_aver_td_136() 		add_new_lc(9136,		"В Тёмную долину",			"info_way136a") end
function add_new_aver_mil_137() 	add_new_lc(9137,		"На Склады",				"info_way137a") end
function add_new_gar_aver_151() 	add_new_lc(9151,		"В туманную чащу",			"info_way151a") end
function add_new_mil_gen_154() 		add_new_lc(9154,		"В зону \"Тесла\"",			"info_way154a") end
function add_new_lim_mil_156() 		add_new_lc(9156,		"На Склады", 				"info_way156a") end  -- lim_zub_tunnel_dialog
function add_new_gen_mil_191() 		add_new_lc(9191,		"На Склады",				"info_way191a") end
function add_new_lim_gen_165() 		add_new_lc(9165,		"В зону \"Тесла\"",			"info_way165a") end
function add_new_gen_lim_190() 		add_new_lc(9190,		"В Лиманск",				"info_way190a") end
function add_new_lost_marsh_166() 	add_new_lc(9166,		"На Болота",				"info_way166a") end
function add_new_dead_bun_167() 	add_new_lc(9167,		"В лабораторию Х-12"				      ) end
function add_new_bun_dead_170() 	add_new_lc(9170,		"В Иванковский райцентр"				  ) end
function add_new_red_ros_172() 		add_new_lc(9172,		"На Дикую территорию",		"info_way172a") end
function add_new_red_yan_173() 		add_new_lc(9173,		"На Янтарь",				"info_way173a") end
function add_new_red_mil_174() 		add_new_lc(9174,		"На Склады",				"info_way174a") end
function add_new_lost_agr_176() 	add_new_lc(9176,		"На Агропром",				"info_way176a") end
function add_new_esc_marsh_178() 	add_new_lc(9178,		"На Болота",				"info_way178a") end
function add_new_marsh_esc_179() 	add_new_lc(9179,		"На Кордон",				"info_way179a") end
function add_new_marsh_lost_180() 	add_new_lc(9180,		"На Забытый хутор",			"info_way180a") end
function add_new_marsh_agr_181() 	add_new_lc(9181,		"На Агропром",				"info_way181b") end
function add_new_lost_esc_182() 	add_new_lc(9182,		"На Кордон",				"info_way182a") end
function add_new_agr_marsh_183() 	add_new_lc(9183,		"На Болота",				"info_way183a") end
function add_new_gar_lv_184() 		add_new_lc(9184,		"На Забытый хутор",			"info_way184a") misc.release_by_name("gar_sak_teleport_los") end
function add_new_lv_gar_185() 		add_new_lc(9185,		"На Свалку",				"info_way185a") end
function add_new_warlab_186() 		add_new_lc(9186,		"В лабораторию Х6",			"info_way186a") end
function add_new_x8_187() 			add_new_lc(9187,		"В лабораторию X8"						  ) end
function add_new_x8_192() 			add_new_lc(9192,		"В лабораторию Х6"						  ) end
function add_new_red_196() 			add_new_lc(9196,		"В Рыжий лес"							  ) end
function add_new_lim_197() 			add_new_lc(9197,		"В Лиманск"								  ) end
function add_new_dsc_199() 			add_new_lc(9199,		"В Тёмную долину",			"info_way199a") mike.add_spots_dv_k() end
function add_new_hos_dsc_256() 		add_new_lc(9256,		"В Кишку"								  ) end
function add_new_dv_x10()			add_new_lc(9260,		"В лабораторию Х-10"					  ) end
function add_new_x10_dv()			add_new_lc(9261,		"В Тёмную долину",	   "prizrak_news_info") end
---Открытые ранее изначально. Стали закрыты с НИ
function add_new_esc_hos_158() 		add_new_lc(9158,		"В Санаторий",				"info_way158a") misc.release_by_name("esc_sak_teleport_hos") end
function add_new_esc_gar_91() 		add_new_lc(91,			"На Свалку",				"info_way91a")  misc.release_by_name("esc_sak_teleport_gar") end
function add_new_dsc_hos_255() 		add_new_lc(9255,		"В Санаторий",				"info_way255a") misc.release_by_name("dsc_sak_teleport_hos") end
function add_new_hos_gar_159() 		add_new_lc(9159,		"На Свалку",				"info_way159a") misc.release_by_name("hos_sak_teleport_gar") misc.release_by_name("gar_sak_teleport_hos") end
function add_new_gar_hos_177() 		add_new_lc(9177,		"В Санаторий",				"info_way177a") misc.release_by_name("hos_sak_teleport_gar") misc.release_by_name("gar_sak_teleport_hos") end
function add_new_gar_agr_191() 		add_new_lc(191,			"На Агропром",				"info_way301a") misc.release_by_name("gar_sak_teleport_agr") end
function add_new_gar_val_196() 		add_new_lc(196,			"В Тёмную долину",			"info_way303a") misc.release_by_name("gar_sak_teleport_val") end

function add_new_lc(sid,text,info)
	local obj= g_sim:story_object(sid)
	if not obj then
		obj=misc.spawn_by_story_id(sid)
	end

	if obj then
		level.map_add_object_spot_ser(obj.id, "level_changer_self", text)
		if info and not has_alife_info(info)  then
			db.actor:give_info_portion(info)
			info_received()
		end
	end
end

function add_doktor_attantion()
	if has_alife_info("esc_find_doctor_done") then
		if not has_alife_info("esc_find_doctor_start3") then
			misc.spawn_by_name("doktor_attantion")
			db.actor:give_info_portion("esc_find_doctor_start3")
			if not has_alife_info("info_way151a") then
				add_new_aver_gar_135()
				add_new_gar_aver_151()
			end
		end
	end
end

function v3f(x,y,z)
	return vector():set(x,y,z)
end
  
function out_new_lc(sid,info)
	if not db.actor:has_info(info) then
		local objt= g_sim:story_object(sid)
		if objt then
			wprintf("[~T].~C0C #WARN:~C07 actor not have info ~C0A %s~C07, level changer~C0D %d~C07 will be destroyed", info, sid) 
			misc.release_obj(objt, 'sak.script:183')
		end
	end
end

function add_scaner_1()
	local objt= g_sim:story_object(story_ids.scaner_01) -- story_object(9145)
	if not objt then
		misc.spawn_by_name("scaner_01")
		misc.spawn_by_name("scaner_02")
	end
end

-- start new game
function add_new_lcitem()
	local rand1 = lua_random( 1, 5 )
	local rand2 = lua_random( 1, 3 )
	local rand3 = lua_random( 1, 9 )
	local rand4 = tonumber( level.get_game_difficulty() )
	sak_minigame.generate_dices_drop()
	marsh_tuzla(rand2)
	amk_vars.r_task_reward 	= rand1
	amk_vars.r_treas_items 	= rand2
	amk_vars.x18_iq_check 	= rand3
	amk_vars.g_diff 		= rand4
	WriteIni(db.stor_ltx, "stor", "r_task_reward", rand1)
	WriteIni(db.stor_ltx, "stor", "r_treas_items", rand2)
	db.actor:give_info_portion("x18_iq_check_info"..rand3)
	amk.spawn_item("zone_zharka_static_weak",v3f(-74.16,1.85,-137.36),804,3132)
	amk.spawn_item("zone_zharka_static_weak",v3f(-19.46,-8.35,36.08),2678,3643)  
	amk.spawn_item("rad_document6",v3f(621.95,-42.64,187.38),1910,224619) -- кунг на Радаре
	amk.spawn_item("matches",v3f(-212.99,-22.45,-126.06),59,40605)
	amk.spawn_item("lab_x16_documents",v3f(-129.70,20.78,-23.21),1529,18)

	local war_docs={
					{9.404203414917,-9.0156745910645,-12.080198287964,7868,2693},
					{6.5841684341431,-7.824432849884,-13.131462097168,7641,2693},
					{6.5393829345703,-7.8233819007874,-14.894571304321,7638,2693},
					{7.6907577514648,-9.0921983718872,-15.435939788818,7638,2693},
					{8.5175218582153,-9.0146331787109,-22.049827575684,7735,2693},
					{6.4462966918945,-8.4674339294434,-18.882566452026,7504,2693}
					}
	for n = 1,#war_docs do
		local rand=lua_random(2,9)
		local obj=amk.spawn_item("bun_document",v3f(war_docs[n][1],war_docs[n][2],war_docs[n][3]),war_docs[n][5],war_docs[n][4])
		if obj then
			local pk = get_netpk(obj,1)
			local data = pk:get()
			data.visual_name="new_item\\documents_"..rand
			pk:set(data)
		end
	end

	war_docs={
				{1.528688788414,1.2459589242935,3.6658480167389,4647,3187},
				{1.1648477315903,1.043750166893,2.4235367774963,4643,3187}
				}
	local war_ammo={
					"ammo_7.62x39_fmj",
					"ammo_5.45x39_fmj",
					"ammo_5.56x45_ss190"
					}
	for n = 1,#war_docs do
		for k = 0,4 do
			local obj=amk.spawn_item("physic_destroyable_object",v3f(war_docs[n][1],((war_docs[n][2])+(k*0.18)),war_docs[n][3]),war_docs[n][5],war_docs[n][4])
			if obj then
				local pk = get_netpk(obj,1)
				local data = pk:get()
				data.visual_name = "new_item\\ammobox_wood.ogf"
				data.custom_data = "[drop_box]\nitems = "..war_ammo[rand2]..", 2"
				data.physic_type=3
				data.mass=20
				pk:set(data)
			end
		end
	end
	war_docs={
				{-63.697429656982,-17.558191299438,102.86915588379,5927,3605},
				{-57.146778106689,-17.553497314453,98.435012817383,6360,3605},
				{-63.91389465332,-13.339869499207,77.108436584473,5820,3589},
				{-82.583526611328,-15.80943107605,78.964790344238,2815,3592},
				{-85.28987121582,-15.811623573303,78.15453338623,2815,3592},
				}
	war_ammo={
				"antirad",
				"medkit",
				"bandage",
				"medkit_army",
				"bandage"
				}
	for n = 1,#war_docs do
		for k = 0,3 do
			local obj=amk.spawn_item("physic_destroyable_object",v3f(war_docs[n][1],((war_docs[n][2])+(k*0.23)),war_docs[n][3]),war_docs[n][5],war_docs[n][4])
			if obj then
				local items=war_ammo[lua_random(1,#war_ammo)]
				local pk = get_netpk(obj,1)
				local data = pk:get()
				data.visual_name = "physics\\box\\box_metall_01.ogf"
				data.custom_data = "[drop_box]\nitems = "..items..", "..lua_random(1,3)
				data.physic_type=3
				data.mass=20
				pk:set(data)
			end
		end
	end
	local war_ballons={
				{-9.7723741531372,-7.0766696929932,-34.262554168701,2325,3170},
				{-11.863079071045,-7.0770502090454,-27.052164077759,2020,3170},
				{-9.3018159866333,-7.3027291297913,-19.914821624756,2483,3167},
				{-16.476686477661,-7.2750220298767,-16.013906478882,1197,3167},
				{-2.566642999649,-7.2307949066162,-16.791730880737,3933,3167},
				{-14.684816360474,-7.2768468856812,-22.831605911255,1538,3167},
				{-4.6294131278992,-7.0795884132385,-31.382890701294,3308,3170},
				{-8.9328680038452,-7.0764698982239,-35.35302734375,2445,3170},
				{-13.937294960022,-7.0767288208008,-26.395378112793,1660,3167},
				{-6.0207672119141,-7.2718482017517,-22.258140563965,2633,3167},
				{-11.876070022583,-7.2515897750854,-17.694429397583,2037,3167},
				{-18.414506912231,-7.2721991539001,-20.928215026855,943,3167},
				{-15.128114700317,-7.2764863967896,-23.350187301636,1419,3167}
				}
	for n = 1,#war_ballons do
		amk.spawn_item("amk_ballon",v3f(war_ballons[n][1],war_ballons[n][2],war_ballons[n][3]),war_ballons[n][5],war_ballons[n][4])
		amk.spawn_item("amk_ballon",v3f(war_ballons[n][1],war_ballons[n][2],war_ballons[n][3]+0.3),war_ballons[n][5],war_ballons[n][4])
	end
	war_ballons={
				{18.499908447266,1.0895416736603,-11.157274246216,7090,3216},
				{18.221921920776,1.0449446439743,-10.208450317383,7091,3216},
				{19.198259353638,1.1009846925735,-9.6385526657104,7146,3216},
				{19.059909820557,1.0360935926437,-8.3838129043579,7148,3216},
				{19.591165542603,1.072851061821,-10.059464454651,7198,3216},
				{19.273807525635,1.174171090126,-11.46522808075,7196,3216},
				{18.757030487061,1.1253744363785,-10.677487373352,7145,3216}
				}
	for n = 1,#war_ballons do
		amk.spawn_item("amk_kanistra",v3f(war_ballons[n][1],war_ballons[n][2],war_ballons[n][3]),war_ballons[n][5],war_ballons[n][4])
		amk.spawn_item("amk_kanistra",v3f(war_ballons[n][1],war_ballons[n][2],war_ballons[n][3]+0.4),war_ballons[n][5],war_ballons[n][4])
	end
	war_ballons={
				{-76.264266967773,-23.85626411438,61.646308898926,4009,3596}
				}
	for n = 1,#war_ballons do
		for k = 0,3 do
			amk.spawn_item("arc_art_box_1basic",v3f(war_ballons[n][1],war_ballons[n][2]+k*0.4,war_ballons[n][3]),war_ballons[n][5],war_ballons[n][4])
			local sobj = amk.spawn_item("arc_art_box_1basic",v3f(war_ballons[n][1],war_ballons[n][2]+k*0.4,war_ballons[n][3]+0.4),war_ballons[n][5],war_ballons[n][4])
			if lua_random()>0.6 then
				local pk = get_netpk(sobj,1)
				local tbl = pk:get()
				local caps=sak_dialog.treasure_any_capsule()
				if not strpos(caps,"af_dummy_",1,true) then
					tbl.custom_data = caps.."_dyn"..tostring(lua_random(2,4)).."d"
				else
					tbl.custom_data = caps
				end
				pk:set(tbl)
			end
		end
	end
	war_docs={
				{24.4,-8.99,-2.5564801692963,10519,3693},
				{25.1,-8.99,-2.5323886871338,10553,3693},
				{25.8,-8.99,-2.534117937088,10632,3693},
				{26.5,-8.99,-2.5558798313141,10668,3693}
				}
	local war_ammo={
				"ammo_7.62x39_fmj",
				"ammo_5.45x39_fmj",
				"ammo_9x39_pab9",
				"ammo_12x70_buck",
				"ammo_5.56x45_ss190"
				}
	for n = 1,#war_docs do
		for k = 0,4 do
			local obj=amk.spawn_item("physic_destroyable_object",v3f(war_docs[n][1]+(k*0.01),((war_docs[n][2])+(k*0.18)),war_docs[n][3]+(k*0.02)),war_docs[n][5],war_docs[n][4])
			if obj then
				local pk = get_netpk(obj,1)
				local data = pk:get()
				data.visual_name = "new_item\\ammobox_wood.ogf"
				data.custom_data = "[drop_box]\nitems = "..war_ammo[rand1]..", 2"
				data.physic_type=3
				data.mass=20
				pk:set(data)
			end
		end
	end
	local hard_item={
				"item_rykzack",
				"nlc_ammobox",
				"shesternya",
				"koncepva_2",
				"krovosos_golova",
				"meshok",
				"taburet_village",
				"taburet_wood_01",
				"skelet_torso",
				"babinnik",
				"batinok_1",
				"batinok_2",
				"helix_1",
				"helix_2",
				"balloon_poison_gas",
				"box_toolkit_1",
				"box_toolkit_2",
				"box_toolkit_3",
				"safe_container",
				"shesternya",
				"shveller_1",
				"shveller_2",
				"knipel",
				"pila"
				}
	war_docs={
				{-89.201072692871,-15.940216064453,91.231483459473,1852,3586},
				{-82.687812805176,-15.940326690674,95.634963989258,2865,3586},
				{-79.217712402344,-15.983874320984,105.04762268066,3472,3599},
				{-100.32470703125,-16.004516601563,90.46875,754,3583},
				{-96.6396484375,-20.165412902832,72.888595581055,1025,3585},
				{-96.111923217773,-20.165752410889,78.566299438477,1110,3584},
				{-77.009246826172,-20.166580200195,81.082885742188,3902,3584},
				{-79.291168212891,-22.519165039063,74.141983032227,3383,3598},
				{-89.732810974121,-24.288505554199,76.582374572754,1689,3587},
				{-78.493347167969,-24.324991226196,83.318817138672,3573,3587},
				{-81.826110839844,-28.513708114624,76.626922607422,2925,3589},
				{-69.52806854248,-28.303907394409,72.621360778809,5293,3589},
				{-63.771236419678,-28.629219055176,77.633583068848,5902,3589},
				{-114.02149963379,-28.483585357666,85.321487426758,106,3582},
				{-107.01930236816,-28.483331680298,70.313705444336,375,3589},
				{-70.608047485352,-28.483938217163,66.803009033203,5130,3601},
				{-70.889930725098,-25.561708450317,68.323394775391,5136,3601},
				{-71.205520629883,-20.164287567139,68.932022094727,5034,3600},
				{-78.995712280273,-20.116710662842,65.223510742188,3360,3600},
				{-80.358337402344,-16.003719329834,71.636856079102,3139,3592},
				{-66.193542480469,-15.949235916138,71.380355834961,5515,3603},
				{-59.926078796387,-16.003347396851,66.678047180176,6169,3603},
				{-50.877601623535,-20.167825698853,69.708984375,6633,3603},
				{1.7557497024536,-9.0164232254028,-18.642652511597,6540,2693},
				{-0.53176891803741,-9.0142440795898,-15.150278091431,5707,2692},
				{-1.749094247818,-8.9894685745239,-6.9125556945801,5532,2691},
				{6.4700198173523,-8.9895763397217,-5.8507232666016,7392,2691},
				{0.57479459047318,-8.9905395507813,7.6314854621887,6163,2689},
				{12.712470054626,-8.990159034729,6.9892230033875,8169,2688},
				{17.161222457886,-8.989725112915,11.812808990479,8440,2781},
				{19.682481765747,-8.9898920059204,15.635511398315,8594,2686},
				{17.346799850464,-8.9936952590942,20.239831924438,8457,2686},
				{5.4808568954468,-9.9836549758911,16.364582061768,7329,2683},
				{0.27464827895164,-9.9741382598877,30.376007080078,5997,2682},
				{0.56489598751068,-9.9775304794312,31.424938201904,6219,2682},
				{-24.084461212158,-8.1950130462646,35.524604797363,2899,2678},
				{-18.666299819946,-8.9925146102905,25.307332992554,3754,2675},
				{-21.974977493286,-8.9890270233154,22.470476150513,3183,2676},
				{-21.454271316528,-8.9907722473145,8.6794939041138,3163,2674},
				{-34.032985687256,-9.4187622070313,18.837387084961,1949,2671},
				{-41.823135375977,-9.4150495529175,17.803371429443,1228,2670},
				{-42.465229034424,-9.413966178894,13.275531768799,1177,2670},
				{-39.371349334717,-9.4200897216797,1.6657198667526,1418,2669},
				{-36.844078063965,-9.4177303314209,0.84304469823837,1663,2669},
				{-22.614561080933,-9.5509595870972,-3.6725430488586,3040,2666},
				{-20.707294464111,-9.5491647720337,-8.6983013153076,3286,2666},
				{-20.362796783447,-9.5548410415649,-24.303426742554,3416,2665},
				{-19.39582824707,-9.5509910583496,-35.480670928955,3554,2665},
				{-17.061985015869,-9.477520942688,-57.008113861084,3853,2664},
				{-19.46675491333,-9.5493650436401,-60.334953308105,3519,2664},
				{-8.168267250061,-7.4721417427063,-57.007160186768,4340,2663},
				{-4.0375785827637,-7.3028349876404,-65.588455200195,4889,2662},
				{-3.0421936511993,-7.451988697052,-75.329658508301,5142,2661},
				{0.87687557935715,-7.4559440612793,-74.743980407715,6039,2661},
				{1.9003393650055,-7.452817440033,-63.088756561279,6485,2662},
				{52.74641418457,-23.621700286865,26.720636367798,12774,3717},
				{49.10164642334,-23.623853683472,31.410266876221,12445,3709},
				{39.246952056885,-23.443378448486,32.298530578613,11566,3702},
				{33.605762481689,-23.442308425903,33.180255889893,11128,3702},
				{27.14839553833,-23.440511703491,1.76469373703,10676,3691},
				{22.938087463379,-23.517450332642,3.8749942779541,10502,3691},
				{17.364568710327,-23.547811508179,0.88216704130173,10002,3683},
				{61.354110717773,-23.514024734497,21.445392608643,13293,3724},
				{20.99609375,-8.9952583312988,8.6655874252319,10359,3685},
				{1.4840217828751,-9.0139665603638,-14.636821746826,7380,3660},
				{3.6975727081299,-9.0125665664673,-22.151664733887,8037,3659},
				{-3.9868278503418,-9.0128707885742,-18.583620071411,5808,3660},
				{-2.7135713100433,-8.989709854126,7.6864109039307,6162,3661},
				{0.82116895914078,-9.9776725769043,16.865049362183,7190,3662},
				{-4.0790100097656,-9.9745311737061,21.411800384521,5869,3662},
				{-15.384702682495,-8.2481098175049,36.673377990723,4369,3642},
				{-23.536798477173,-8.1888198852539,35.431896209717,3269,3631},
				{-24.141555786133,-8.9906454086304,17.637561798096,3241,3629},
				{-29.172290802002,-8.9827756881714,20.13374710083,2590,3629},
				{-40.333686828613,-9.4123058319092,12.191414833069,1384,3620},
				{-37.869480133057,-9.4185485839844,-0.54182380437851,1695,3621},
				{-21.40266418457,-9.5487337112427,-9.8166494369507,3683,3638},
				{-5.9939179420471,-7.4502415657043,-56.313209533691,5301,3649},
				{-3.1541695594788,-7.4545011520386,-63.994297027588,5945,3649},
				{-4.1796503067017,-7.4562835693359,-66.868896484375,5754,3649},
				{2.7845525741577,-7.4543008804321,-62.696655273438,7792,3670},
				{1.2059502601624,-7.4573435783386,-57.245895385742,7309,3670},
				{-3.4892098903656,-7.4544491767883,-75.146156311035,5929,3665},
				{-8.5161113739014,-3.0832915306091,-27.439968109131,2622,3177},
				{-18.540166854858,-3.0828857421875,-14.726800918579,960,3158},
				{-11.432389259338,-3.0855407714844,-7.2409505844116,2164,3168},
				{-14.229963302612,-3.1483864784241,-3.2303438186646,1693,3168},
				{-3.6091701984406,-2.9172093868256,-1.1983016729355,3796,3178},
				{-3.3087167739868,-3.1503505706787,7.5947027206421,3838,3178},
				{6.2989654541016,-3.1550426483154,6.2114901542664,5529,3178},
				{7.1949996948242,-3.1568684577942,3.7552080154419,5663,3196},
				{-0.56050097942352,-5.5701823234558,-0.6079785823822,4312,3196},
				{9.8142948150635,-7.3327932357788,3.6563413143158,6094,3203},
				{12.465996742249,-7.196524143219,-2.9834704399109,6464,3213},
				{16.016387939453,-7.3160157203674,0.19094739854336,6967,3213},
				{13.979384422302,-11.517539024353,-3.0572607517242,6689,3209},
				{15.775999069214,-12.153709411621,3.0922272205353,6912,3209},
				{9.45068359375,-11.387045860291,2.9827873706818,6090,3203},
				{2.7299470901489,-11.473573684692,3.9330558776855,4899,3188},
				{1.8988132476807,-11.436170578003,-1.6313350200653,4758,3191},
				{-3.9933757781982,-11.475992202759,3.8300466537476,3610,3175},
				{-14.077505111694,-15.402435302734,0.97971040010452,1705,3160},
				{-16.569097518921,-15.391633033752,7.8005886077881,1239,3160},
				{-19.709794998169,-11.470121383667,-6.8576369285583,811,3159},
				{-19.709794998169,-11.470121383667,-6.8576369285583,811,3159},
				{-22.887617111206,-11.474084854126,-5.1769938468933,620,3156},
				{11.810108184814,1.0078179836273,0.5598384141922,6359,3210},
				{6.7515187263489,1.0328203439713,-6.1297149658203,5643,3210},
				{12.268186569214,1.0072244405746,-3.0807285308838,6461,3216},
				{31.430355072021,-3.1559855937958,-3.1713984012604,7691,3222},
				{32.193561553955,-3.1532101631165,-9.134090423584,7696,3222},
				{36.818820953369,-2.5038480758667,-9.2179756164551,7729,3222},
				{37.461311340332,-3.5400419235229,-2.012900352478,7756,3223},
				{-12.951454162598,-3.1488878726959,-1.4394742250443,1822,3168},
				{-11.064484596252,-3.0870161056519,-5.601146697998,2168,3168},
				{-17.459287643433,-3.087938785553,-11.63595199585,1088,3158},
				{-12.300958633423,-3.151526927948,6.9746985435486,1969,3163},
				{-14.318199157715,-1.1155160665512,10.8800573349,1740,3163},
				{-6.6968216896057,1.073083281517,8.2564182281494,2962,3171},
				{-6.117039680481,1.073428273201,11.121375083923,3078,3171},
				{-1.8587914705276,1.0752984285355,15.771790504456,4116,3183},
				{2.4055585861206,1.0751203298569,15.775743484497,4806,3198},
				{2.133722782135,1.0738099813461,20.911657333374,4823,3183},
				{-3.9653971195221,5.5175533294678,19.079086303711,3694,3173},
				{-6.7857913970947,5.4070692062378,17.09090423584,2975,3173},
				{-36.914039611816,-34.476013183594,19.984180450439,336,2508},
				{-37.410087585449,-34.493835449219,14.274764060974,327,2483},
				{-32.348449707031,-34.482002258301,11.75594997406,622,2483},
				{-26.202627182007,-34.495178222656,13.390752792358,797,2510},
				{-19.898149490356,-34.482051849365,12.929221153259,972,2511},
				{-13.95947265625,-34.485069274902,13.573064804077,1318,2511},
				{-17.75253868103,-34.475677490234,21.061851501465,1139,2482},
				{-14.677122116089,-34.472621917725,28.145927429199,1294,2482},
				{-19.034620285034,-34.472019195557,28.045017242432,1040,2482},
				{-37.443450927734,-34.484634399414,8.7387790679932,319,2483},
				{-37.478118896484,-34.481773376465,-5.9421319961548,223,2507},
				{-36.822025299072,-34.483592987061,-18.805009841919,280,2505},
				{-40.680709838867,-34.475967407227,-17.105997085571,101,2506},
				{-42.667625427246,-34.479061126709,-19.02458190918,21,2506},
				{-36.393676757813,-34.484691619873,-31.940809249878,348,2502},
				{-39.942489624023,-34.476085662842,-29.88352394104,122,2503},
				{-40.026805877686,-34.482501983643,-25.834938049316,128,2504},
				{-31.665899276733,-34.476341247559,-35.512245178223,629,2477},
				{-11.357807159424,-34.480644226074,-40.944091796875,1428,2499},
				{-6.920615196228,-34.488285064697,-36.011959075928,1560,2499},
				{11.64772605896,-34.494598388672,-36.12438583374,2536,2498},
				{18.032886505127,-34.490272521973,-37.789070129395,2948,2496},
				{18.658803939819,-34.476913452148,-39.746887207031,2998,2497},
				{18.3092212677,-34.477188110352,-42.041561126709,2942,2497},
				{25.758716583252,-34.481822967529,-37.709087371826,3408,2495},
				{31.759860992432,-34.48180770874,-35.917797088623,3594,2475},
				{35.634117126465,-34.49397277832,-37.534103393555,3715,2475},
				{36.551544189453,-34.483619689941,-24.928930282593,3804,2493},
				{36.982799530029,-34.483295440674,-20.319042205811,3884,2493},
				{36.378463745117,-34.486129760742,-13.074193000793,3821,2474},
				{36.434303283691,-34.488304138184,-6.6544003486633,3830,2474},
				{31.72925567627,-34.484802246094,-13.044048309326,3612,2489},
				{29.639863967896,-34.481231689453,-17.760721206665,3532,2488},
				{23.601499557495,-34.489555358887,-17.921115875244,3309,2476},
				{14.181397438049,-34.492301940918,-19.774494171143,2678,2487},
				{10.047339439392,-34.49600982666,-23.253282546997,2429,2487},
				{10.562477111816,-34.483131408691,-13.815304756165,2475,2486},
				{3.5152521133423,-34.481685638428,-12.282588005066,2177,2472},
				{-0.047423824667931,-34.482292175293,-18.510149002075,1956,2472},
				{-0.79183107614517,-34.485298156738,-29.735813140869,1875,2472},
				{0.73271656036377,-34.482780456543,-31.971708297729,2001,2472},
				{-0.99074006080627,-34.572280883789,-7.5735664367676,1906,2485},
				{-5.3035526275635,-34.56787109375,-9.483078956604,1649,2485},
				{-10.721195220947,-34.573417663574,-7.613507270813,1467,2484},
				{-9.2250518798828,-34.484455108643,-12.535385131836,1502,2490},
				{-17.244430541992,-34.480651855469,-13.417877197266,1116,2490},
				{-19.048057556152,-34.494815826416,-17.335582733154,1009,2491},
				{-24.535711288452,-34.494651794434,-23.056558609009,830,2491},
				{-29.177526473999,-34.497447967529,-22.612863540649,706,2479},
				{-31.271865844727,-34.498489379883,-18.151445388794,637,2479},
				{-31.639484405518,-34.482551574707,-13.455473899841,644,2492},
				{-23.422554016113,-34.484443664551,-12.392232894897,886,2490},
				{-1.0414881706238,1.0750775337219,20.991767883301,4395,3183}
				}
	for n = 1,#war_docs do
		local obj=amk.spawn_item("physic_object",v3f(war_docs[n][1],war_docs[n][2],war_docs[n][3]),war_docs[n][5],war_docs[n][4])
		if obj then
			local pk = get_netpk(obj,1)
			local data = pk:get()
			data.visual_name = "new_item\\"..hard_item[lua_random(#hard_item)]
			data.physic_type=3
			data.mass=20
			pk:set(data)
		end
	end
	war_docs={
				{-97.070159912109,-20.165660858154,79.445892333984,971,3584},
				{-84.419059753418,-20.03223991394,71.88468170166,2478,3585},
				{-86.006828308105,-20.147188186646,81.83122253418,2259,3584},
				{-74.804267883301,-24.365037918091,68.171409606934,4325,3598},
				{-85.234504699707,-24.318056106567,69.277206420898,2324,3598},
				{-91.726913452148,-24.327035903931,80.840789794922,1505,3587},
				{-88.300483703613,-24.323774337769,88.010704040527,1978,3587},
				{-76.570465087891,-24.309608459473,85.665710449219,4075,3587},
				{-69.787521362305,-24.20873260498,71.926895141602,5220,3602},
				{-64.128341674805,-24.204383850098,74.286811828613,5809,3602},
				{-70.590850830078,-26.515630722046,77.425163269043,5169,3602},
				{-65.953353881836,-28.483097076416,77.467422485352,5634,3589},
				{-65.493003845215,-28.303819656372,74.891792297363,5730,3589},
				{-87.803565979004,-28.460283279419,96.007186889648,2159,3589},
				{-107.28544616699,-28.485761642456,94.354881286621,404,3582},
				{-102.02824401855,-29.863618850708,73.034225463867,620,3589},
				{-103.33059692383,-29.864755630493,73.03751373291,590,3589},
				{-108.67223358154,-29.998838424683,73.062110900879,307,3589},
				{-79.106384277344,-15.978361129761,68.45873260498,3367,3592},
				{-79.026168823242,-15.978121757507,67.578460693359,3365,3592},
				{-78.944442749023,-15.891574859619,68.991310119629,3369,3592},
				{-78.307800292969,-15.980125427246,68.746032714844,3523,3592},
				{-78.318870544434,-15.981321334839,67.815528869629,3521,3592},
				{-79.052284240723,-15.981273651123,68.119766235352,3365,3592},
				{-63.966178894043,-16.003879547119,57.917198181152,5855,3603},
				{-66.072242736816,-16.003345489502,59.100700378418,5592,3603},
				{-45.497825622559,-20.33642578125,63.714096069336,6823,3603},
				{-44.262783050537,-20.223850250244,63.611282348633,6842,3603},
				{-43.142711639404,-20.034574508667,63.677768707275,6848,3603},
				{-43.17261505127,-20.295009613037,64.581756591797,6849,3603},
				{-43.381370544434,-19.504354476929,66.068466186523,6850,3603},
				{-47.014057159424,-20.562450408936,66.791648864746,6801,3603},
				{-45.425788879395,-19.645092010498,72.251922607422,6832,3603},
				{-44.205238342285,-20.575647354126,72.127639770508,6832,3603}
				}
	for n = 1,#war_docs do
		local obj=amk.spawn_item("physic_destroyable_object",v3f(war_docs[n][1],war_docs[n][2],war_docs[n][3]),war_docs[n][5],war_docs[n][4])
		if obj then
			local pk = get_netpk(obj,1)
			local data = pk:get()
			data.visual_name = "amk\\box_drop.ogf"
			data.custom_data = "[drop_box]\ncommunity = small_box_science"
			data.physic_type=3
			data.mass=10
			pk:set(data)
		end
	end
	war_docs={
				{-320.97613525391,43.031856536865,193.20553588867,33660,2924},
				{-320.41741943359,44.509239196777,192.21612548828,34094,2924},
				{-321.13363647461,44.508979797363,192.23318481445,33657,2924},
				{-315.89227294922,43.841625213623,201.18287658691,36799,2926},
				{-318.27938842773,44.508979797363,203.70770263672,35933,2926},
				{-318.72888183594,44.508979797363,203.72071838379,35493,2926},
				{-324.20812988281,43.167747497559,198.07388305664,32004,2926},
				{-320.00140380859,43.306072235107,207.92727661133,34614,2928},
				{-315.88973999023,43.553977966309,198.01739501953,36775,2926},
				{-318.57998657226,43.299999237060,203.75999450683,35493,2926},
				{113.7,-4.4078016281128,11.763509750366,33756,1239},
				{113.40120697021,-3.2040808200836,17.507947921753,33491,1239},
				{136.3610534668,-3.6055960655212,19.110424041748,36896,1237},
				{8.41,-22.69,6.55,7790,2703},
				{8.42,-22.69,5.9,7790,2703},
				{7.6,-22.62,8.20,7689,2703},
				{-317.31400146484,43.09,207.73554992676,36382,2928}
				}
	for n = 1,#war_docs do
		for a=0,3 do
			local rand=lua_random(2,9)
			local obj=amk.spawn_item("physic_object",v3f(war_docs[n][1],war_docs[n][2]+a*0.07,war_docs[n][3]),war_docs[n][5],war_docs[n][4])
			if obj then
				local pk = get_netpk(obj,1)
				local data = pk:get()
				data.visual_name="new_item\\documents_"..rand
				data.mass=10
				pk:set(data)
			end
		end
	end
	war_docs={
				{39.84789276123,-23.450563430786,40.797706604004,11634,3710},
				{39.92067718505,-23.449800491333,41.658584594727,11636,3710},
				{39.99090957641,-23.449514389038,42.520722198486,11637,3710},
				{39.94826889038,-23.449197769165,44.350453186035,11782,3710},
				{40.00982284545,-23.449495315552,43.415515899658,11638,3710}
				}
	for n = 1,#war_docs do
		for a=0,1 do
			local obj=amk.spawn_item("physic_object",v3f(war_docs[n][1],war_docs[n][2]+a*1.12,war_docs[n][3]+a*0.08),war_docs[n][5],war_docs[n][4])
			if obj then
				local pk = get_netpk(obj,1)
				local data = pk:get()
				data.visual_name="physics\\balon\\bochka_fuel"
				data.physic_type=3
				data.mass=50
				pk:set(data)
			end
		end
	end
	war_docs={
				{41.90,-22.8067684173584,39.6123962402344,34,3710},
				{41.90,-22.2267684173584,39.6123962402344,34,3710}
				}
	for n = 1,#war_docs do
		for a=0,5 do
			local obj=amk.spawn_item("physic_object",v3f(war_docs[n][1]+a*0.9,war_docs[n][2],war_docs[n][3]+a*0.01),war_docs[n][5],war_docs[n][4])
			if obj then
				local rand=lua_random(1,3)
				local alf={"a","b","c"}
				local pk = get_netpk(obj,1)
				local data = pk:get()
				data.visual_name="physics\\box\\box_1"..alf[rand]
				data.physic_type=3
				data.mass=20
				pk:set(data)
			end
		end
	end
	war_docs={
				{-35.45187759399,-34.49,-0.9,393,2507},
				{-35.35605239868,-34.51,-3.4,389,2507},
				{-36.61514205932,-34.48,-3.0,303,2507},
				{-36.72226409912,-34.50,-1.5,225,2507},
				{-36.85368347168,-34.58,0.0,227,2507},
				{-35.06259155273,-34.55,-2.5,390,2507}
				}
	for n = 1,#war_docs do
		for a=0,4 do
			local obj=amk.spawn_item("physic_object",v3f(war_docs[n][1]+(lua_random()-0.5),war_docs[n][2]+a*0.45,war_docs[n][3]+(lua_random()-0.5)),war_docs[n][5],war_docs[n][4])
			if obj then
				local pk = get_netpk(obj,1)
				local data = pk:get()
				data.visual_name="physics\\box\\box_wood_tara"
				data.physic_type=3
				data.mass=20
				pk:set(data)
			end
		end
	end
	war_docs={
				{45.790870666504,-23.449367523193,47.592140197754,12125,3710},
				{47.145401000977,-23.448137283325,47.589977264404,12263,3710},
				{48.624515533447,-23.451324462891,47.562149047852,12393,3710},
				{51.527000427246,-23.449708938599,43.414974212646,12728,3718},
				{51.454212188721,-23.449571609497,42.24486541748,12726,3718}
				}
	for n = 1,#war_docs do
		for a=0,3 do
			local obj=amk.spawn_item("physic_object",v3f(war_docs[n][1]+a*0.03,war_docs[n][2]+a*0.62,war_docs[n][3]+a*0.04),war_docs[n][5],war_docs[n][4])
			if obj then
				local pk = get_netpk(obj,1)
				local data = pk:get()
				data.visual_name="new_item\\mid_box"
				data.physic_type=3
				data.mass=40
				pk:set(data)
			end
		end
	end
	war_docs={
				{45.1,-22.48,51.25,12129,3710},
				{46.0,-22.48,51.25,12194,3710},
				{47.2,-22.31,51.51,12397,3710}
				}
	for n = 1,(#war_docs-1) do
		for a=0,6 do
			local obj=amk.spawn_item("physic_object",v3f(war_docs[n][1]+a*0.1,war_docs[n][2]+a*0.002,war_docs[n][3]),war_docs[n][5],war_docs[n][4])
			if obj then
				local pk = get_netpk(obj,1)
				local data = pk:get()
				data.visual_name="new_item\\memory_module"
				data.physic_type=3
				data.mass=5
				pk:set(data)
			end
		end
	end
	for a=0,3 do
		local obj=amk.spawn_item("physic_object",v3f(war_docs[3][1]+a*0.60,war_docs[3][2],war_docs[3][3]),war_docs[3][5],war_docs[3][4])
		if obj then
			local pk = get_netpk(obj,1)
			local data = pk:get()
			data.visual_name="equipments\\item_mks10"
			data.physic_type=3
			data.mass=15
			pk:set(data)
		end
	end
	for n = 1,3 do
		amk.spawn_item("medkit_scientic",v3f(69.22,-20.3,42.22),3729,13414)
		amk.spawn_item("medkit_scientic",v3f(68.22,-20.3,40.22),3729,13394)
		amk.spawn_item("medkit_scientic",v3f(64.55,-20.3,38.00),3729,13357)
	end
	local ids,cnt = registry.all_objects(true)
	for n = 1,cnt do
		local id = ids[n]
		local obj= g_sim:object(id)
		if obj then 
			local onm = obj:name()
			if (strpos(onm,"doktor_attantion",1,true)
				or strpos(onm,"dv_box_bes_",1,true)
				or strpos(onm,"val_stena_podval",1,true)
				or strpos(onm,"bun_beton_block_",1,true)
				or strpos(onm,"val_dinamit_podval",1,true)
				or strpos(onm,"scaner_0",1,true)
				or strpos(onm,"esc_mogila_0",1,true)
				or strpos(onm,"bun_ognetushitel_2",1,true)
				or strpos(onm,"gar_sign_stop_blokpost",1,true)
				or strpos(onm,"esc_box_015",1,true)
				or strpos(onm,"yan_klyk_body",1,true)
				or strpos(onm,"mil_new_mine_",1,true)
				or strpos(onm,"_surprise_box",1,true)
				or (obj:section_name()=="device_pda" and obj.parent_id~=0)) then
				misc.release_obj(obj, true)
			end
		end
	end
end

function add_outfit_bandit_m1()
	amk.spawn_item("outfit_bandit_m1",v3f(312.85656738281,15.871786117554,270.05169677734),250,571882)
end

function add_kont_leshyi()
	if not has_alife_info("leshyi_umer2") then 
		sak_dialog.added_kont_leshyi()
		send_tip("Напали собаки с тушканами, еле убежал! Пришлось бросить контейнер. Место запомнил - не доходя до свинофермы, справа от дороги, возле приметного пня","Записка Лешего",11,20,"death","sak","red")
		db.actor:give_info_portion("leshyi_umer2")
	end
end
function add_garmonika_letter()
	send_tip("Под кожухом губной гармошки находится листок с непонятным текстом!","Записка в гармошке",5,15,"g_g","sak","yellow")
	local a=lua_random(1,10)
	db.actor:give_info_portion("garmonika_letter"..a)
end
function info_gen_mil_group()
	send_tip("Так-с... Вояки, скелеты, один в ботанском скафандре... Наверно та самая группа, что вышла с Кордона с Призраком...","Группа военных и учёных",5,15,"g_g","sak","yellow")
	db.actor:give_info_portion("gen_mil_group_info")
	add_gen_mil_items()
end
function info_gen_mil_group2()
	send_tip("Техника покорёжена... Похоже колонна, про которую говорил Михалыч. Они или что-то искали... или хотели вывезти?","Колонна военной техники",5,15,"g_g","sak","yellow")
	db.actor:give_info_portion("gen_mil_group2_info")
end
function info_korovan()
	send_tip("Так так... Ящички военные, видимо с оружием... Посмотрим...","Ящики каравана",5,15,"g_g","sak","yellow")
end
function info_val_zaval()
	send_tip("Так! Тут же не пролезть! Хотя... Если пару, а ещё лучше, четырех, мужиков попросить подсобить. Вроде раскидать можно.","Вход завален!",5,15,"g_g","sak","yellow")
	db.actor:give_info_portion("val_dram_begin_zaval")
	mike.add_spots_x18()	
end
function add_box_bes()
	local objt= g_sim:story_object(story_ids.dv_box_bes_02)
	if not objt then
		misc.spawn_by_name("dv_box_bes_01")
		misc.spawn_by_name("dv_box_bes_02")
	end 
end -- story_object(9114)
function add_klyk_body()
	local objt= g_sim:story_object(story_ids.yan_klyk_body)
	if not objt then
		misc.spawn_by_name("yan_klyk_body")
	end
end -- story_object(9559)
function krazy_mil_body()
	local objt= g_sim:story_object(story_ids.yan_klyk_body)
	if not objt then
		local klyk = misc.spawn_by_name("yan_klyk_body")
		if klyk then
			local pk = get_netpk(klyk,1)
			local data = pk:get()
			data.visual_name="actors\\stalker_zombi\\stalker_zombie5"			
			pk:set(data)
		end
	end
end
function add_sanek_tomb()
	misc.spawn_by_name("esc_mogila_05")
end
function add_bun_ognetushitel()
	misc.spawn_by_name("bun_ognetushitel_2")
end
function out_bun_ognetushitel() 
	misc.release_by_name("bun_ognetushitel_2") 
	misc.release_by_name("bun_space_restrictor_ognetushitel_2") 
end
function add_ammo_bes() 
	local obj= g_sim:story_object(story_ids.dv_box_bes_02)  -- story_object(9114)
	if obj then 
		misc.spawn_multi("ammo_5.45x39_ap", obj.position, obj.id, 10)
		misc.spawn_multi("grenade_f1", obj.position, obj.id, 5)		
	end  
	if obj.online then
		sim:set_switch_online(obj.id, false)
		sim:set_switch_offline(obj.id, true)
		amk.convert_npc[obj.id]=1
	end 
end
function add_document_wolf() 
	amk.spawn_item("sak_document2",v3f(-80,-1.28,153),163,187916)
end
function add_document_wolf_new()  
	if db.actor:has_info("esc_lamp_1_off") then
		amk.spawn_item("sak_document2",v3f(-80,-1.28,153),163,187916) 
		amk.spawn_item("wpn_pb",v3f(-80,-1.20,153),163,187916)
	else
		amk.spawn_item("sak_document2",v3f(-80,-1.28,153),163,187916)
	end	  
end
function add_kolbasa_prohod()  
	local obj1 = g_sim:object("esc_inventory_box_0010")
	for a=1,2 do
		local sobj= g_sim:create("green_kolbasa",obj1.position, obj1.m_level_vertex_id, obj1.m_game_vertex_id, obj1.id)
		misc.process_spawn()
		local new_cond=0.3*a
		local pk = get_netpk(sobj,1)
		local data = pk:get()
		data.condition = new_cond
		pk:set(data)
		if is_object_online(sobj.id) then
			local obj = client_obj(sobj.id)
			obj:set_condition(new_cond)
		end
	end

	if obj1.online then
		g_sim:set_switch_online(obj1.id, false)
		g_sim:set_switch_offline(obj1.id, true)
		amk.convert_npc[obj1.id]=1
	end 
end

function add_postmens_bag() 
	amk.spawn_item("postmens_bag",v3f(269.293823,-7.944348,0.794339),390,376745) 
end
function add_dsc_gigant() 
	local obj=amk.spawn_item("marsh_gigant",v3f(239.132904,-2.481397,655.872864),4084,680450)
    if obj then
		local pk = get_netpk(obj)
		local data = pk:get()
		data.health     = 0
		data.upd.health = 0
		pk:set(data)
		misc.spawn_to("mutant_psevdogigant_hand", obj)
		timers.start_timer("dsc_gigant_remove",0,23,55,"sak.dsc_gigant_remove("..obj.id..")")
	end
end
function dsc_gigant_remove(id)
	if id ~= nil then
		local gig = g_sim:object(id)
		if gig and is_object_online(gig.id)~=true then
			misc.release_obj(gig)
		end
	end		
end
function add_scarman_pda() 
	local points = {
				62.94,  11.36,  52.87,  3336,  32520,  "на Забытом хуторе, сарай там ещё какой-то прямо над оврагом.",
				-94.02, -2.18, -230.80,  271, 115646,  "где-то на свалке заброшенной техники.",
				-12.10,  0.63,  297.45,  187, 265404,  "на Кордоне, где-то на фермах."
				}
	local rand=(amk_vars.r_treas_items or 1)
	amk.spawn_item("scarman_pda",v3f(points[rand*6-5],points[rand*6-4],points[rand*6-3]),points[rand*6-2],points[rand*6-1])
	db.actor:give_talk_message(points[rand*6],"ui\\ui_iconsTotal",Frect():set(0,0,0,0), "simple_answer_item") 
end
function add_instrument_box()
	amk.spawn_item("instrument_box",v3f(108.5,7.74,-9.07),987,304788) 
end
function add_notebook_labx8()
	local obj= g_sim:object("war_inventory_box_0008")
	if obj then
		misc.spawn_to("notebook_labx8", obj)
	end
end							 
function add_notebook()
	amk.spawn_item("note-book",v3f(41.8,-6.194,-33.82),1166,7395)
	sak_spawn.add_x18_monsters()
end
function add_krot_pda()
	amk.spawn_item("agroprom_pda",v3f(-133.49,-3.08,-139.18),810,0)
end
function add_und_pda()
	amk.spawn_item("und_pda",v3f(-45.12,-4.01,-30.08),718,4466)
end
function add_decoder() 
	local rand=(amk_vars.r_task_reward or 1)*5
	local points={
				-120.773430,21.564411,-22.930630,68,1529,
				-99.493599,21.564243,-20.232609,511,1529,
				-108.488991,21.564507,-37.621181,309,1529,
				-127.128922,18.912310,-21.667521,54,1529,
				-126.292847,21.564272,-25.582495,79,1529
				}
	amk.spawn_item("decoder1",v3f(points[rand-4],points[rand-3],points[rand-2]),points[rand],points[rand-1])
end
function add_same_case()
	amk.spawn_item("same_quest_case",v3f(127.5,-4.55,21.7),1238,35659)
end
function add_yan_matveev2()
	local obj= g_sim:story_object(story_ids.assistant2)
	if not obj then
		obj=misc.spawn_by_name("assistant2")
	end 
	misc.spawn_objects("wpn_ump45,ammo_11.43x23_fmj,ammo_11.43x23_fmj,medkit_army", obj.position, obj.id)
	db.actor:give_info_portion("matveev_vasilev_start")
end
function create_vasilev_suit()
	local robjd
	local vas_suit={
				{-54.131851196289,-11.90,-257.36654663086,20591,1454},
				{-84.549049377441,-12.25,-279.95080566406,10053,1449},
				{-85.072196960449,-12.20,-225.26371765137,9840,1485},
				{-73.494361877441,-9.70,-205.46318054199,13208,1488},
				{-44.27661895752,-12.00,-212.60238647461,23896,1447},
				{-73.885437011719,-7.50,-318.84692382813,12859,1449},
				{-107.64751434326,-9.45,-277.06719970703,54980,1480}
				}
	local coord=lua_random(1,#vas_suit)
	local spawn=vas_suit[coord]
	robjd = amk.spawn_item("vasilev_suit", v3f(spawn[1],spawn[2],spawn[3]), spawn[5],spawn[4])
	if robjd then
		local pk = get_netpk(robjd,1)
		local data = pk:get()
		data.visual_name = "new_item\\skaf"
		data.custom_data = "[logic]\ncfg = scripts\\self_inv_box.ltx"
		pk:set(data)
		local pos=robjd.position
		misc.spawn_objects("yan_pda", pos, robjd.id)
		misc.spawn_objects("vasiljev_letter", pos, robjd.id)
		nlc_vars.vas_suit_id = robjd.id
	end
	if robjd.online then
		g_sim:set_switch_online(robjd.id, false)
		g_sim:set_switch_offline(robjd.id, true)
		amk.convert_npc[robjd.id]=1
	end  
end
function vasilev_suit_closed()
	local objid=nlc_vars.vas_suit_id or 0 
	if objid==0 then return end
		local robjd= g_sim:object(objid)
		local pos=robjd.position
		local lvid=robjd.level_vertex_id
		local gvid=robjd.game_vertex_id
		if robjd then
			misc.release_obj(objid, 'vasilev_suit_closed')
		end
	close_window()
	set_inactivate_input_time(5)
	robjd=amk.spawn_item("bandage",pos,gvid,lvid)  
	level.add_pp_effector("red_teleport.ppe", 1525, false)  
	nlc_vars.vas_suit_id = nil
end
function yan_ghost_pda()
	db.actor:give_info_portion("yan_provodnik_spawn")
	db.actor:give_info_portion("pseudo_ghost")
	sak.send_tip("Это не Призрак!","Воспоминание",0,20,"g_g","rememb","yellow")
	close_window()
end

function create_corpse(section, pos, gvid, lvid, story_id, custom_data) -- создает объект с нулевым здоровьем
	local obj = amk.spawn_item(section, pos, gvid, lvid)
	local pk = get_netpk(obj)
	local data = pk:get()
	data.story_id   = story_id
	data.health     = 0
	data.upd.health = 0
	if custom_data then data.custom_data = custom_data end
	pk:set(data)   
	return obj
end

function add_mil_kurjer_corps()
	local mil_kurjer={
				{-280.74,-18.14,191.41,58761,1789},
				{-281.75,-18.14,191.76,58763,1789},
				{-305.80,-27.60,206.82,39931,1788},
				{-301.95,-27.60,208.68,41050,1788},
				{-332.10,-22.04,214.78,18407,1839},
				{-331.03,-22.04,213.81,18898,1839},
				{-275.62,-22.50,270.98,63474,1832},
				{-271.56,-22.50,264.35,66964,1832},
				{-270.70,-22.13,298.72,67591,1832},
				{-275.18,-22.13,291.84,64057,1832}
				}
	local item1, item2
	local coord=(lua_random(1,table.getn(mil_kurjer)/2)*2-1)
	local spawn=mil_kurjer[coord]
	local spawn2=mil_kurjer[coord+1]
	local obj=create_corpse ("mil_stalker_respawn_2",
                           v3f(spawn[1],spawn[2],spawn[3]),spawn[5],spawn[4], 
                           9492,
                           "[known_info]\nmil_kurjer_dead")
	g_sim:create("mil_kurjer_pda",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
	g_sim:create("belt_2_art",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)	
	amk.spawn_item("quest_manycase_01_mil_kurjer",v3f(spawn2[1],spawn2[2],spawn2[3]),spawn2[5],spawn2[4])
	item1 = g_sim:create("af_full_akkum",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)--misc.spawn_to("af_full_akkum", obj)
	item2 = g_sim:create("af_baloon_dyn3d",obj.position, obj.m_level_vertex_id, obj.m_game_vertex_id, obj.id)
	if obj and obj.online then
		g_sim:set_switch_online(obj.id, false)
		g_sim:set_switch_offline(obj.id, true)
		amk.convert_npc[obj.id]=1
	end
	local pk = get_netpk(item1)
	local data = pk:get()
	data.condition = 0.05
	pk:set(data)
	pk,data = nil,nil 
	pk = get_netpk(item2)
	data = pk:get()
	data.condition = 0.80
	pk:set(data)
end
function add_two_corpses()
    local obj=create_corpse ("yan_ecolog_respawn_2",
							v3f(181.03,6.6,-375.92),938,381590,
							9497)                             
    misc.spawn_to("scaintist_docs", obj)    
    obj=create_corpse       ("yan_ecolog_respawn_2",
							v3f(184.60,6.0,-378.50),938,384388,
							9496) -- (9496)                
    sak_dialog.borov_kont()
end
function add_scaintist_body()
	local obj=create_corpse("yan_ecolog_respawn_2",
							v3f(-46.53,-2.2,-98.36),2258,53082,
							9498) -- 9498    
	misc.spawn_to("scaintist_pda",obj)
end
local point_dsc_mon={
				{405.60488891602,-1.8460313081741,-371.45739746094,908704,4153,"boar_sishi","bar_lucky_pda"},
				{427.96447753906,-2.0680828094482,-340.39221191406,950425,4152,"boar_sishi","bar_lucky_pda"},
				{440.80981445313,-1.5117417573929,-377.07540893555,970844,4151,"boar_sishi","bar_lucky_pda"},
				{445.06329345703,-1.0903329849243,-352.94735717773,977239,4160,"boar_sishi","bar_lucky_pda"},
				{424.95922851563,-1.5664627552032,-378.98260498047,945823,4151,"boar_sishi","bar_lucky_pda"}
				}
function add_monster_body()
	local point=(amk_vars.r_task_reward or 2)
	local obj=amk.spawn_item("physic_object",v3f(point_dsc_mon[point][1],point_dsc_mon[point][2],point_dsc_mon[point][3]),point_dsc_mon[point][5],point_dsc_mon[point][4])
    if obj then
		local pk = get_netpk(obj,1)
		local data = pk:get()
		data.visual_name="new_item\\sushi_boar"
		data.custom_data = "[collide]\nignore_static"
		data.physic_type=3
		data.mass=45
		data.fixed_bones="link"
		pk:set(data)
    end
	obj=amk.spawn_item("boar_body",v3f(point_dsc_mon[point][1],point_dsc_mon[point][2],point_dsc_mon[point][3]),point_dsc_mon[point][5],point_dsc_mon[point][4])
	if obj then
		local pk = get_netpk(obj,1)
		local data = pk:get()
		data.custom_data = "[logic]\nactive = ph_idle@enable\n[ph_idle@enable]\nnonscript_usable = true\ntips = st_search_body"
		pk:set(data)
	end
	misc.spawn_to(point_dsc_mon[point][7], obj)
	timers.start_timer("save_shustr",0,8,28,"sak.time_shustr("..obj.id..")")
end
function time_shustr(id)
	if not has_alife_info("atp_bandit_pda_done") then 
		db.actor:give_info_portion("atp_bandits_open_fire")
		db.actor:give_info_portion("esc_assault_start")
	end
	local obj1 = g_sim:object(id)
	if obj1 then
		misc.release_obj(obj1, 'sak.script:592')
	end
end
function docent_x10docs_time_start()
	timers.start_timer("docent_x10docs",0,2,28,"sak.time_docent_x10docs()")
end
function time_docent_x10docs()
	send_tip("Меченный, подходи, есть мысли.","Сообщение от Доцента",11,20,"ecolog","sak", "green")
	db.actor:give_info_portion("docent_x10docs_1_1faze")
end
function docent_x10harddisc_time_start()
	timers.start_timer("docent_x10harddisc",0,1,28,"sak.time_docent_x10harddisc()")
end
function time_docent_x10harddisc()
	send_tip("Меченный, подходи, есть мысли.","Сообщение от Доцента",11,20,"ecolog","sak", "green")
	db.actor:give_info_portion("docent_x10docs_4faze")
end
function muller_time_start()
	timers.start_timer("save_muller",3,12,28,"sak.time_muller()")
end
function time_muller()
	if not has_alife_info("bar_korovan_done") then 
		if level.name()~="marsh" then
			local obj= g_sim:story_object(story_ids.agr_muller)
			if obj then
				local pk = get_netpk(obj)
				local data = pk:get()
				data.health     = 0
				data.upd.health = 0
				pk:set(data)
			end
		else
			local obj = level_object_by_sid(9517)
			if obj and obj:alive() then
				obj:kill(obj)
			end
		end
	end
end
function agr_vint()
	treasure_manager.get_treasure_manager():give_treasure("agr_secret_sewers")
	local obj= g_sim:object("agr_inventory_box_0019")
	if obj then 
		misc.spawn_to("wpn_vintorez_m1", obj)
	end
end
function add_books()
	amk.spawn_item("sak_book1",v3f(28.11,-12.07,38.93),1161,6530) 
	amk.spawn_item("sak_book2",v3f(-120.27,21.56,-32.65),1529,165) 
	amk.spawn_item("sak_book3",v3f(0.77,-19.45,24.89),2768,6203) 
end
function add_new_111item()
	amk.spawn_item("dynamite",v3f(-213.57,-23.19,-127.39),59,39928)
end
function add_new_109item()
	local point_val_case={
				{150.60958862305,5.8319563865662,-252.73635864258,347570,966},
				{161.28861999512,5.7852087020874,-274.28143310547,361192,964},
				{159.63629150391,6.7704277038574,-268.4911499023,360453,964},
				{160.55030822754,5.8298053741455,-252.44580078125,360471,963},
				{141.8815612793,5.9694418907166,-241.07000732422,340306,966}
				}
	local point=(amk_vars.r_task_reward or 2)
	local obj=amk.spawn_item("quest_case_05",v3f(point_val_case[point][1],point_val_case[point][2],point_val_case[point][3]),point_val_case[point][5],point_val_case[point][4])
	timers.start_timer("val_case",0,8,28,"sak.val_case_out("..obj.id..")")
end
function val_case_out(id)
	local obj1 = g_sim:object(id)
	if obj1 and (obj1.parent_id==nil or obj1.parent_id==BAD_OBJ_ID) then
		misc.release_obj(obj1, 'sak.script:592')
	end
end
function info_received()
	send_tip("Найдена информация о новом пути!","Новый путь",2,10,"nlc","pda_news", "sky_blue")
end
function info_amk_received()
	send_tip("Найден новый рецепт!","Найдена информация",2,10,"artmod","pda_news", "sky_blue")
end
function add_resiver()
	amk.spawn_item("sak_resiver",v3f(-185.57,-3.58,94.89),338,39411)
end
function info_artmod()
	send_tip("Найден рецепт преобразования артефакта!","Новый артмод",5,10,"artmod","pda_news", "pink")
end
function info_code()
	send_tip("Обнаружена кодовая комбинация блокированной двери!","Получен код",2,10,"code","pda_news", "pink")
end

function info_klava()
	if db.actor:has_info("global_dialogs") and not has_alife_info("klava_feik_found1") then
		send_tip("Странная вещица. Похожа на ПДА, только не работает, сзади на корпусе гравировка - {Вергас-08}","Сломанная клавиатура",2,10,"g_g","pda_news", "sky_blue")
		db.actor:give_info_portion("klava_feik_found1")
		db.actor:disable_info_portion("klava_feik_found")
	end
end
function mar_zone_tips()
	send_tip("Сталкер! Стой и не двигайся! Сейчас к тебе подойдут...","Внимание!",0,10,"default","sak", "red")
end
function gar_zone_tips()
	send_tip("Э! Подойди к знаку и не махай стволом, побазарим...","Внимание!",0,10,"default","sak", "red")
end
function gar_zone_2tips()
	send_tip("Ну ты чё! Не вкурил?! К знаку иди и стой! Завалим, в натуре...","Внимание!",0,10,"default","sak", "red")
end
function info_no_matches()
	send_tip("Спичек-то нет! Развести огонь не удалось","Пламя",0,5,"g_g","pda_news", "red")
end
function info_no_battery()
	send_tip("Прибор не работат. Нет питания. Нужен заряженный аккумулятор.","Измеритель",0,5,"g_g","pda_news", "red")
end
function info_no_module()
	send_tip("Что менять-то? Ломать не стоит, мало ли...","Гармонизатор излучателя",0,5,"g_g","pda_news", "red")
end
function rad_outfit_in_tip()
	send_tip("Зафиксировано аномальное воздействие...","Датчик костюма",3,5,"pribor","pda_news", "red")
end
function rad_outfit_out_tip()
	send_tip("Защитное покрытие нормализовано...","Датчик костюма",3,5,"pribor","pda_news", "green")
end
function info_not_ready()
	send_tip("Идёт обработка данных, ждите...","Измеритель",0,5,"pribor","pda_news", "red")
end
function info_rep_box()
	send_tip("Нечем ремонтировать! Нет подготовленных ремкомплектов","Ремонт",0,5,"g_g","pda_news", "red")
end

function calc_items_count(section, flt)
	if flt == nil then 
		flt = function () return true end
	end
	local result = 0  
	for sect,ids in pairs(sak_inventory.rucksack) do
		if strposx(sect, section) and flt(sect) then
			result = result + #ids
		end 
	end
	for sect,ids in pairs(sak_inventory.eatable) do
		if strposx(sect, section) and flt(sect) then
			result = result + #ids
		end 
	end
	return result
end

local flt_tbl = { ["razgruzka"] = {"_new"},
				  ["af_compass_"] = {"dyn6d"},
				  ["bandit_master_outfit"] = {"_m1","_gas"},
				  ["bandit_veteran_outfit"] = {"_gas"},
				  ["sak_resiver"] = {"yantar"}
				}
function have_items_count(itm, items_count, new_flag, capsule_flag)
	if type(itm) == "table" then -- для проверки группы элементов, используется синтаксис: have_items_count({ bread = 3, conserva = 3}) 
     
		for sect, count in pairs(itm) do
			if not have_items_count (sect, count) then
				return false
			end
		end
		return true
	end

	-- wprintf(" check have~C0A %s~C0B x~C0D %d~C07", itm, items_count)
	if strpos(itm, "grenade_") then
		return amk_utils.inventory_search(itm, items_count)
	end
		
	local flt = nil
	
	if new_flag then
		flt = function (section) return not strposx(section, "_new") and not strposx(section, "_capsule") end
	elseif capsule_flag then
		flt = function (section) return not strposx(section, "_capsule") end
	else
		if flt_tbl[itm] then
			flt = function (section)
				for _,v in pairs(flt_tbl[itm]) do
					if strposx(section,v) then
						return false
					end
				end
				return true
			end
		end
	end
	
	local have = calc_items_count(itm, flt)
	if have < items_count then
		--wprintf("[~T]. #DBG: в наличии ~C0D %d~C07 предметов~C0A %-35s~C07 из~C0A %d~C07 требуемых", have, itm, items_count)
		return false
	else
		return true
	end
end

sak.have_item_namber = have_items_count

function spawn_items (npc, section, number)
	if type(npc.id) ~= "function" then
		npc = client_obj( misc.get_object_id(npc) )
	end
	if npc == nil then return end

	if npc:id() == db.actor:id() then
		if razgruzka.test_item_type(section, "ammo,medical,grenade") then  
			razgruzka.spawn_to_inv(section, number)
			relocate_item(npc, "in", section, number)
		return
		end
	end
	misc.spawn_multi(section, npc:position(), npc:id(), number)    
	relocate_item(npc, "in", section, number)
end

function create_items(npc, sect_list, number)
	local ts = type(sect_list)
	if ts == "string" then
			spawn_items(npc, sect_list, number)
		elseif ts == "table" then
		for k, v in pairs(sect_list) do
			if type(v) == "number" then -- { bandage = 1, medkit = 3 }
				spawn_items(npc, k, v)   
			elseif type(v) == "string" then -- { "bandage", "medkit" }
				spawn_items(npc, v, number)
			end       
		end
	end
end

function artmodscheck(anom,af,anom_sect)
	local af_sect=af:section()
	local aid="artmod_"
	local at=sak_artmods.artmod_resiepts
	if strpos(anom_sect,"_zharka",1,true) then 
		for i=1,6 do
			artmod(anom,af,at[aid..i.."5"][1],at[aid..i.."5"][2],at[aid..i.."5"][3],at[aid..i.."5"][4],at[aid..i.."5"][5],at[aid..i.."5"][6])
		end
	end
	if strpos(anom_sect,"_galant",1,true) then 
		if af_sect=="af_red_dummy_battery" then af_zone_off(af)  end
		for i=1,7 do
			artmod(anom,af,at[aid..i.."6"][1],at[aid..i.."6"][2],at[aid..i.."6"][3],at[aid..i.."6"][4],at[aid..i.."6"][5],at[aid..i.."6"][6])
		end
		if level.name()~="generators" then return end
		artmod01(af,"af_dummy_dummy_new","af_dummy_buliz","akk_is_ready",0,1,10) 
	end
	if strpos(anom_sect,"_buzz",1,true) then 
		for i=1,8 do
			artmod(anom,af,at[aid..i.."4"][1],at[aid..i.."4"][2],at[aid..i.."4"][3],at[aid..i.."4"][4],at[aid..i.."4"][5],at[aid..i.."4"][6])
		end
		if level.name()~="aver" then return end
		artmod01(af,"af_blood_dyn5d","af_dummy_green_blood","info_green_blood",0,1,10)
		artmod01(af,"af_medusa_dyn5d","af_dummy_green_medusa","info_green_medusa",0,1,10)
		artmod01(af,"af_vyvert_dyn5d","af_dummy_green_vyvert","info_green_vyvert",0,1,10)
	end 
	if strpos(anom_sect,"_mincer",1,true) then 
		for i=1,6 do
			artmod(anom,af,at[aid..i.."3"][1],at[aid..i.."3"][2],at[aid..i.."3"][3],at[aid..i.."3"][4],at[aid..i.."3"][5],at[aid..i.."3"][6])
		end
		if af_sect=="af_red_dummy_spring" then af_zone_off(af) end
	end
	if strpos(anom_sect,"_mosquito_bald",1,true) then 
		for i=1,6 do
			artmod(anom,af,at[aid..i.."1"][1],at[aid..i.."1"][2],at[aid..i.."1"][3],at[aid..i.."1"][4],at[aid..i.."1"][5],at[aid..i.."1"][6])
		end
		artmod01(af,"af_dummy_battery","af_battery","actor_jump_info",1,1,50)
		if af_sect=="af_red_dummy_pellicle" then af_zone_off(af) end
	end
	if strpos(anom_sect,"_gravi_zone",1,true) then
		if af_sect=="af_red_dummy_battery" and db.actor:has_info("red_forest_lesnik_x16_info") -- test
			then af_zone_off(af)
		end
		for i=1,6 do
			artmod(anom,af,at[aid..i.."2"][1],at[aid..i.."2"][2],at[aid..i.."2"][3],at[aid..i.."2"][4],at[aid..i.."2"][5],at[aid..i.."2"][6])
		end
	end
	if strpos(anom_sect,"_ice",1,true) then
		for i=1,8 do
			artmod(anom,af,at[aid.."7"..i][1],at[aid.."7"..i][2],at[aid.."7"..i][3],at[aid.."7"..i][4],at[aid.."7"..i][5],at[aid.."7"..i][6],at[aid.."7"..i][7])
		end
		artmod01(af,"af_dummy_battery","af_red_dummy_battery","info_red_battery",0,2,0)
		artmod01(af,"af_dummy_spring","af_red_dummy_spring","info_red_spring",0,2,0)
		artmod01(af,"af_dummy_pellicle","af_red_dummy_pellicle","info_red_pellicle",0,2,0)
		artmod01(af,"af_electra_sparkler_dyn5d","af_dummy_sparkler","info_artmod_activ_anom",0,0,20)
		artmod01(af,"af_dummy_dummy","af_dummy_dummy_new","info_dummy_dummy_new",0,2,0)
	end 
	if strpos(anom_sect,"_sakbuzz",1,true) then 
		artmod(anom,af,at[aid.."81"][1],at[aid.."81"][2],at[aid.."81"][3],at[aid.."81"][4],at[aid.."81"][5],at[aid.."81"][6])
	end 
end

function artmod(nearest_anomaly,af,item1,item2,item3,item4,info_artmod,item_targ)
	local af_sect=af:section()
	local pos=af:position()
	local startflag=false
	local zombieflag=false
	if not db.actor:has_info(info_artmod) then return end
	if g_sim:object(af:id())==nil then return end
	if (strpos(af_sect,item1,1,true) or strpos(af_sect,item2,1,true) or strpos(af_sect,item3,1,true) or strpos(af_sect,item4,1,true)) and db.actor:has_info(info_artmod) then
		local s={}
		s.i0t=-1 
		s.i1t=-1 
		s.i2t=-1 
		s.i3t=-1 
		s.i4t=-1
		s.ams=0
		s.ami=-1
		s=nlc_vars["artmod_activation_"..info_artmod] or s
		if s.i0t~=nearest_anomaly then 
			s.i0t=nearest_anomaly
			s.i1t=-1 
			s.i2t=-1 
			s.i3t=-1 
			s.i4t=-1
			s.ams=0
			s.ami=-1
		end
	if s.ams==1 and s.ami~=info_artmod then return
	end
	if strpos(af_sect,item1,1,true) and s.i1t==-1 then s.i1t=af:id()
		level.add_pp_effector("blink.ppe", 234, false)
		if s.ams==0 then startflag=true
		end
	end
	if strpos(af_sect,item2,1,true) and s.i2t==-1 then s.i2t=af:id()
		level.add_pp_effector("blink.ppe", 235, false)
		if s.ams==0 then startflag=true
		end
	end
	if strpos(af_sect,item3,1,true) and s.i3t==-1 then s.i3t=af:id()
		level.add_pp_effector("blink.ppe", 236, false)
		if s.ams==0 then startflag=true
		end
	end
	if strpos(af_sect,item4,1,true) and s.i4t==-1 then s.i4t=af:id()
		level.add_pp_effector("blink.ppe", 237, false)
		if s.ams==0 then startflag=true
		end
	end
	if startflag then
		s.ams=1
		s.ami=info_artmod
		startflag=false
	end        
	if ((s.i1t~=-1) and(sim:object(s.i1t)==nil)) then s.i1t=-1 zombieflag=true end
	if ((s.i2t~=-1) and(sim:object(s.i2t)==nil)) then s.i2t=-1 zombieflag=true end
	if ((s.i3t~=-1) and(sim:object(s.i3t)==nil)) then s.i3t=-1 zombieflag=true end
	if ((s.i4t~=-1) and(sim:object(s.i4t)==nil)) then s.i4t=-1 zombieflag=true end
	if zombieflag then
		if (s.i1t==-1 and s.i2t==-1 and s.i3t==-1 and s.i4t==-1) then
			s.i0t=-1 
			s.ams=0
			s.ami=-1
			zombieflag=false
		end 
	end
		nlc_vars["artmod_activation_"..info_artmod] = s
		if (s.i1t~=-1 and s.i2t~=-1 and s.i3t~=-1 and s.i4t~=-1) then
			misc.release_obj(s.i1t)
			misc.release_obj(s.i2t)
			misc.release_obj(s.i3t)
			misc.release_obj(s.i4t)
			level.add_pp_effector("teleport.ppe", 1530, false)
			
			-- Варим арт определенного дана, в зависимости от сложности игры и опыта гг
			local dgc = 1+(3-level.get_game_difficulty())/5 -- коэффиценты от новиса к мастеру -> 1.6, 1.4, 1.2, 1

			local goods= nlc_vars.artmod_goods or 1 -- "опыт", т.е. кол-во варок
			if strpos(item_targ,"af_dummy_",1,true)==nil and strpos(item_targ,"af_dummy_simbion",1,true)==nil then
				local rand_goods=math.floor(math.log(goods*dgc))+1 -- 35 варок на новичке и 55 на мастере до достижения потолка, т.е. вероятности сварить "зелень"
				if rand_goods>5 then rand_goods=5 end		
				local min_dyn = 1 -- минимально возможный дан
				if ( rand_goods > 3 ) and ( math.floor(goods*dgc) < 100 ) then -- если уже можем варить выше 3-го дана, но ещё нет 100 варок то минимально возможный дан = максимум - 2
					min_dyn = rand_goods - 2
				elseif ( rand_goods > 3 ) and ( math.floor(goods*dgc) >= 100 ) then -- если кол-во варок с учётом коэффицента >= 100, то минимально возможный дан = 4
					min_dyn = rand_goods - 1
				end
				local rand_dyn = dsh.get_next_random( "sak.artmod", min_dyn, rand_goods )
	
				--ODS("Уровень арта: "..rand_dyn.." потолок: "..rand_goods.." количество варок: "..goods,'g')
				xr_statistic.addCookingPoints(item_targ)
				item_targ=(item_targ.."_dyn"..rand_dyn.."d")
			end
			amk_mod.af_start_transform_timer(amk_mod.af_start_transform(100,0,"af_dummy_buliz",item_targ) , pos ,0,0,7+lua_random(0,6)) -- варим 7-13 минут      
			nlc_vars.artmod_goods = goods + 1       
			nlc_vars["artmod_activation_"..info_artmod] = nil
			return
		end    
	end
end

function artmod01(af,item,item_targ,info_zone_off,d,h,m)
	local af_sect=af:section()
	local pos=af:position()
	local m=lua_random(5,m)
	if af_sect==item and db.actor:has_info(info_zone_off) then
		amk_mod.af_flash(af)
		amk_mod.af_start_transform_timer(amk_mod.af_start_transform(100,0,af_sect,item_targ),pos,d,h,m)
	end
end
function make_kill_task_failed(actor,npc,p1,p2) 
	local nid=npc:id()
	if nid==db.actor:id() then
		nid=db.actor:id()
	end
	local targets=task_manager.amk_kill_targets()
	for n,v in pairs(targets) do
		if v.id==nid then
			task_manager.make_task_failed(v.task_id)
		end
	end  
end
local checks_items_do={

}
local statys_psy=0
local esc_mil_food={
	[6501]=true,
	[6502]=true,
	[6503]=true,
	[6504]=true,
	[6505]=true,
	[6506]=true,
	[6507]=true,
	[6508]=true,
	[6509]=true,
	[6510]=true,
	[6511]=true,
	[6512]=true,
	[6513]=true,
	[6514]=true,
	[6515]=true,
	[6516]=true,
	[6517]=true,
	[6518]=true,
	[6519]=true,
	[6520]=true
	}
	
function t_v(obj,force)
	if ( obj~=nil and isOutfit(obj) ) or force then
		local a = db.actor
		local armor = a:item_in_slot(6)
		if armor then
			local vis = vergas_lib.set_pr_from_config_str(armor:section(),"actor_visual")
			local cur_vis = tostring(a:get_visual_name())
			if cur_vis ~= vis then
				a:set_visual_name(vis)
				--sak.send_tip(vis,cur_vis,0,15,"g_g","sak","yellow")
			end
		end
	end
end

function check_used_item(obj)
	
	gps_habar.on_item_take(obj)  
  
	local info=nil
	local sect=obj:section()
	local lvl=level.name()
	local act=db.actor
	t_v(obj,false)
	-- wprintf(" check_used_item~C0A %s~C07 ", sect) 
  
	local rand=(amk_vars.x18_iq_check or 2)
	if strpos(sect, "ammo_") then return end
	if sect=="dollars1" then add_money(1) misc.release_obj(obj)
	elseif sect=="dollars3" then add_money(3) misc.release_obj(obj)
	elseif sect=="dollars5" then add_money(5) misc.release_obj(obj)
	elseif sect=="dollars10" then add_money(10) misc.release_obj(obj)
	elseif sect=="dollars25" then add_money(25) misc.release_obj(obj)
	elseif sect=="dollars50" then add_money(50) misc.release_obj(obj)
	elseif strpos(sect, "mfake") then add_mfake_af(sect) misc.release_obj(obj)
	elseif sect=="ara_pda" and not act:has_info("info_way154a") then add_new_mil_gen_154() add_new_gen_mil_191()
	elseif sect=="ammo_5.45x39_merc" or sect=="ammo_5.56x45_merc" then misc.release_obj(obj)
	elseif sect=="resiept_activ_anom" then info="info_artmod_activ_anom"
	elseif sect=="drunk_dolg_letter" then info="info_amk_recipt_tears_electra" info_amk_received()
	elseif sect=="sak_document2" then send_tip("Похоже, эту бумажку Волк искал","Вернуться к Волку",5,15,"g_g","sak","yellow")	
	elseif sect=="klava_feik" then info="klava_feik_found"
	elseif sect=="sak_document3" and not act:has_info("info_amk_recipt_souls_drops") then info="info_amk_recipt_souls_drops" info_amk_received()
	elseif sect=="sak_document4" and not act:has_info("info_amk_recipt_giant_small_brother") then info="info_amk_recipt_giant_small_brother" info_amk_received()  
	elseif sect=="aver_bandit_letter" then info="info_artmod_ameba_slug_mincer"
	elseif sect=="volkodav_pda" then info="info_artmod_fireball_buzz"							   
	elseif sect=="soldier_letter_bandit" then info="bandit_pda_trading"
	elseif sect=="x18_botan_book" and not act:has_info("info_amk_recipt_simbion") then info="info_amk_recipt_simbion" info_amk_received()
	elseif sect=="x8_botan_book" and not act:has_info("add_new_warlab_info") then info="add_new_warlab_info" info_code()
	elseif sect=="x18_door3_code" and not act:has_info("x18_codelock3_info") then info="x18_codelock3_info" info_code()
	elseif sect=="inventory_sakbox_gar_flame" then info="gar_flame_1have"
	elseif sect=="yan_pda" then info="yan_find_vasilyev_end" vasilev_suit_closed() 
	if not act:has_info("vasiljev_letter_have") then 
		act:give_info_portion("vasiljev_letter_have") 
		misc.spawn_to ("vasiljev_letter", act) 
	end
	elseif sect=="leshyi_letter" then misc.release_obj(obj) add_kont_leshyi()
	elseif sect=="zapiska_volk" then misc.release_obj(obj) oxyr.spn_cont_with_arts_in_invent_box()
	elseif sect=="zapiska_volk2" then info="info_volk_treasure_yes" nlc_vars.protected_box = nil
	elseif sect=="zapiska_petruha" and not act:has_info("info_zapiska_petruha") then info="info_zapiska_petruha" zapiska_petruha_msg()   
	elseif sect=="svoboda_letter" and not act:has_info("mil_freedom_commander_pkm") then doc.info_radar_kep() 
	elseif sect=="vasiljev_letter" and not act:has_info("vasiljev_letter_have") then info="vasiljev_letter_have"
	elseif sect=="noghost_letter" and not act:has_info("pseudo_ghost") then info="pseudo_ghost" yan_ghost_pda()
	elseif sect=="outfit_bandit_m1" then info="esc_shustryi_outfit"
	elseif sect=="strelok_book1" and not act:has_info("strelok_book") then info="strelok_book" mike.info_strelok1()
	elseif sect=="strelok_book2" and not act:has_info("last_message") then info="last_message" mike.info_strelok2()
	elseif sect=="amk_zapiska" then misc.release_obj(obj) info="info_amk_recipt_dummy_puding" info_amk_received()
	elseif sect=="letter_for_borov" then
		misc.release_obj(obj)
		send_tip("Мой заместитель, Иванцов, что-то пронюхал","Письмо Борову",1,10,"dolg","pda_news", "sky_blue")
		info="info_letter_for_borov"
	elseif sect=="gunslinger_flash" and not act:has_info("agr_find_gunslinger_cache_final") then info="agr_find_gunslinger_cache_final" agroprom_tasks.ghost_tips()
	elseif sect=="dead_novice_letter" then misc.release_obj(obj) info="esc_tutorial_dead_novice"
	elseif sect=="rad_document6" then misc.release_obj(obj) add_spots_pripyat()
	elseif sect=="yantar_docs" then misc.release_obj(obj) info="info_artmod_dummy_dummy_mosquito_bald"
	elseif sect=="red_forest_docs" then misc.release_obj(obj) info="info_artmod_dummy_spring_galant"
	elseif sect=="rad_docs" then misc.release_obj(obj) info="info_artmod_dummy_pellicle_gravi_zone"
	elseif sect=="gen_docs" then misc.release_obj(obj) info="info_artmod_dummy_glassbeads_mincer"  
	elseif sect=="repair_itemoutfit" or sect=="repair_item_weapon" then repair_box_repair(obj)
	elseif sect=="closer_box" then repair_box_close(obj)
	elseif sect=="closer_inv" then sak_box_move.treasurebox_close(obj)
	elseif sect=="harmonica_b" and not act:has_info("borov_31_have") then info="borov_31_have" add_garmonika_letter()
		if not act:has_info("info_way184a") then
			add_new_gar_lv_184()
			add_new_lv_gar_185()
		end
	elseif sect=="quest_case_02" and not act:has_info("agroprom_military_case_have") then info="agroprom_military_case_have" doc.military_case_msg()
	elseif sect=="redcatcher_albom" then info="redcatcher_albom_have"
	elseif sect=="dar_document4" and not act:has_info("dar_document5") then info="bar_darklab_document_gain" act:give_info_portion("dar_document5") act:give_info_portion("val_raid_start") x18_dor_open_spawn()
	elseif sect=="lab_x16_documents" then info="yan_x16_documents_gain"
		act:give_info_portion("bandit_pda_trading")
		act:give_info_portion("yantar_find_ghost_task_end")
	elseif sect=="wpn_gauss_auto" or sect=="wpn_gauss_auto_model" or sect=="wpn_gauss_model" or sect=="wpn_gauss" then
		if act:has_info("have_tools_out") then
			if sect=="wpn_gauss_auto_model" or sect=="wpn_gauss_model" then
				misc.release_obj (obj:id())
				sim:create("wpn_gauss_auto",act:position(),act:level_vertex_id(),act:game_vertex_id())
			end
			if nlc_vars.tools_in==nil or nlc_vars.tools_in~=1 then
				sak.send_tip("У меня же нет инструмента... \\nНо почему я могу взять оружие без него?! \\nЗначит, что-то всё-таки не так со мной. И не нужен мне никакой инструмент...","Как же так?!",8,15,"g_g","sak","yellow")
				nlc_vars.tools_in=1
			end
			return
		else
			local particle=particles_object("anomaly2\\group_items\\anomaly_greedy_dust")
			local sound=sound_object("anomaly\\greedy_idle_1")
			particle:play_at_pos(act:position())
			sound:play_at_pos(act, act:position(), 0)
			local hit_type={
				"fire_wound",
				"wound",
				"strike",
				"telepatic",
				"radiation",
				"chemical_burn",
				"explosion",
				"shock"
				}
			for a=1,lua_random(4) do
				vergas_art.drawing_hits(hit_type[lua_random(#hit_type)])
				vergas_lib.s_play("characters_voice\\human_01\\dolg\\fight\\hit\\hit_6",1)
			end
			if sect=="wpn_gauss_auto" or sect=="wpn_gauss" then
				misc.release_obj (obj:id())
				sim:create(sect.."_model",act:position(),act:level_vertex_id(),act:game_vertex_id())
			else
				amk.drop_item(act,obj)
			end
			if act:has_info("have_tools_in") and (nlc_vars.tools==nil or nlc_vars.tools~=1) then
				sak.send_tip("Значит инструмент не работает... \\nИли дело вовсе не в этом? \\nОшиблись наёмники, не для оружия он предназначен. Я теперь знаю для чего...","Как же так?!",5,15,"g_g","sak","yellow")
				nlc_vars.tools=1
			end
		end
	elseif sect=="garbage_pda" and not act:has_info("info_way184a") then add_new_gar_lv_184() add_new_lv_gar_185()
	elseif sect=="marsh_tuzla_document" and not act:has_info("marsh_tuzla_document_info") then add_mar_ecolog_corpse_2()
	elseif sect=="gar_bandit_letter" then info="info_artmod_drops_mincer"
	elseif sect=="esc_bandit_letter" and not act:has_info("info_esc_bandit_letter") then info="info_esc_bandit_letter"
	elseif sect=="marsh_document" then misc.release_obj(obj) marsh_zapiska()
	elseif sect=="amk_zapiska_sak" and not act:has_info("provodnik_senks_have") then info="provodnik_senks_have"
--- lvl check start	
	elseif (lvl=="l03_agroprom" or lvl=="l08_yantar") then
		if sect=="decoder2" and statys_psy==1 then
			statys_psy=0 
			send_tip("Цикл измерения прерван! Повторите измерение!","Статус измерителя",1,10,"pribor","pda_news", "red")
		end
	elseif lvl=="l03u_agr_underground" then
		if sect=="agroprom_pda" and not act:has_info("agr_mil_dumenko_start") then
			sak_spawn.agr_und_rats()
		end
	elseif lvl=="aver" and sect=="sak_resiver" then
		info="mil_trader_aver_have" 
		send_tip("Ага, вот и радиостанция нашлась...","Отнести находку Шинкарю",1,15,"g_g","sak","yellow")
	elseif lvl=="k01_darkscape" then
		if sect=="bar_lucky_pda" and act:has_info("volk_prisoner_start") then
			info="volk_prisoner_pda"
			send_tip("Надо бы узнать, кто такой Боров","Вернуться на Кордон",5,15,"g_g","sak","yellow")
			vergas_lib.s_play("monsters\\bloodsucker\\sucker_growl_1",1) -- рёв кровососа		
		end
	elseif lvl=="l01_escape" then
		if act:has_info("mil_find_prizrak_today") and esc_mil_food[obj:story_id()] then
			act:disable_info_portion("mil_find_prizrak_today")
		end
	elseif lvl=="generators" and sect=="item_kamaz_accum" and act:has_info("petrenko_tesla_job_info") then info="petrenko_tesla_job_done"
	elseif lvl=="labx10" and sect=="x10_document1" and not act:has_info("labx10_docs1"..rand.."_info") then 
		info="labx10_docs1"..rand.."_info" 
		send_tip("Приказы, хм... Какие-то коды... Посмотрим.","Документы",2,10,"g_g","no", "sky_blue")
	elseif lvl=="l07_military" then
		if sect=="quest_manycase_01_mil_kurjer" then 
			info="mil_kurjer_dead" 
		end
		-- спавним кровов при поднятии бромовского СПАСа
		if sect=="wpn_spas12_m1" and act:has_info("drunk_dolg_story_start") and not act:has_info("drunk_dolg_story_spawn") then
			sak_dialog.spawn_drunk_dolg_spas_bs()
			info="drunk_dolg_story_spawn"
		end
--- end of lvl check
	end
	
	if act==nil or info==nil or act:has_info(info) then
		return
	end
	act:give_info_portion(info)
	if strpos(info,"info_artmod_",1,true) then
		info_artmod() 
	end
end

sak.check_used_item = check_used_item

function marsh_zapiska()
	local f={}
	local c=0
	for i=1, 7 do
	f[i]=has_alife_info("marsh_zapiska_"..i)
		if not f[i] then
			c=c + 1
		end
	end
	if c<1 then
		return false
	end
	local r=lua_random(c)
	for i=1, 7 do
		if not f[i] then
			r=r - 1
			if r==0 then
				send_tip("Клочки бумаги, исписанные листочки, может, что-то интересное?","Записки",2,10,"g_g","no", "sky_blue")
				db.actor:give_info_portion("marsh_zapiska_"..i)
			end
		end
	end
	mike.add_strelok_spots_info()  
end

local point_off_drop={
l01_escape={
	{pos={-248.73620605469,-24.800107955933,-134.52714538574},info={"esc_open_door"}}
	},
l04u_labx18={
	{pos={17.242607116699,-6.6206974983215,-14.744860649109},info={"x18_conrol_room_unlock"}},
	{pos={28.111618041992,-10.586278915405,-10.397898674011},info={"dar_door3_free"}},
	{pos={40.722270965576,-6.3106088638306,-17.550640106201},info={"x18_codelock3_unlock"}},
	{pos={23.996559143066,-10.585022926331,-3.3550779819489},info={"dar_codelock2_unlock"}}
	},
labx10={
	{pos={54.036945343018,-23.621263504028,33.938083648682},info={"x18_conrol_room_unlock"}},
	{pos={23.637405395508,-8.8965682983398,6.898777961731},info={"dar_door3_free"}}
	},
labx8={
	{pos={-77.0005416870117,-13.7705745697021,74.5281372070313},info={"lx8_door_unlocked"}}
	},
l10u_bunker={
	{pos={7.5520853996277,-23.698171615601,4.1600284576416},info={"x18_conrol_room_unlock"}},
	{pos={5.306640625,-22.3789196014404,4.59079790115356},info={"bun_opendoor0"}},
	{pos={-20.064796447754,-9.5500717163086,-7.6225309371948},info={"x18_conrol_room_unlock"}},
	{pos={-19.818859100342,-8.9907369613647,7.0361905097961},info={"x18_conrol_room_unlock"}},
	{pos={-21.4997100830078,-8.06367588043213,-6.91176414489746},info={"x18_conrol_room_unlock"}},
	{pos={9.23587989807129,-22.2210559844971,15.1414794921875},info={"bun_opendoor3"}},
	{pos={6.09000015258789,-8.875,-22.6900005340576},info={"bun_opendoor1"}},
	{pos={6.3168258666992,-19.362554550171,35.182750701904},info={"bun_opendoor5"}}
	}
}

local point_drop={
				{x=-240, y=-7, z=300}, --1
				{x=-250, y=-5, z=294}, --2
				{x=55, y=35, z=160}, --3
				{x=67, y=25, z=140}, --4
				{x=7, y=-1, z=115}, --5
				{x=12, y=1, z=125}, --6
				{x=35, y=60, z=30}, --7
				{x=17, y=50, z=35}, --8
				{x=376, y=-1, z=15}, --9
				{x=393, y=2, z=65}, --10
				{x=-74, y=-6, z=-75}, --11
				{x=-75, y=-7, z=-76}, --12
				{x=-11, y=15, z=192}, --13
				{x=-14, y=20, z=196}, --14
				{x=-138, y=10, z=44}, --15
				{x=-142, y=15, z=49}, --16
				{x=-2, y=-5, z=-72}, --17
				{x=2, y=5, z=-77}, --18
				{x=92, y=0, z=-67}, --19
				{x=93, y=5, z=-69}, --20
				{x=-10, y=3, z=12}, --21
				{x=-8, y=5, z=8}, --22
				{x=-252, y=-25, z=-157}, --23
				{x=-160, y=-15, z=-116}, --24
				{x=227, y=-8, z=62}, --25
				{x=231, y=0, z=65}, --26
				{x=-188, y=0, z=-400}, --27
				{x=-194, y=50, z=-405}, --28
				{x=530, y=-45, z=-143}, --29
				{x=534, y=-50, z=-147}, --30
				{x=-96, y=-12, z=-224}, --31
				{x=-102, y=-11, z=-230}, --32
				{x=182, y=-7, z=-94}, --33
				{x=188, y=-8, z=-100}, --34
				{x=141, y=-1, z=52}, --35
				{x=147, y=-2, z=57}, --36
				{x=-96, y=-12, z=-224}, --37
				{x=-102, y=-11, z=-230}, --38
				{x=182, y=-7, z=-94}, --39
				{x=188, y=-8, z=-100}, --40
				{x=141, y=-1, z=52}, --41
				{x=147, y=-2, z=57}, --42
				{x=414.0, y=-1.0, z=-360.0}, --43
				{x=418.0, y=-3.0, z=-364.0}, --44
				{x=30.0, y=-1.0, z=-40.0}, --45
				{x=40.0, y=3.0, z=-50.0}, --46
				{x=215, y=-12, z=-99}, --47
				{x=223, y=-7, z=-106}, --48
				{x=349, y=-7, z=-19}, --49
				{x=352, y=-4, z=-23}, --50
				{x=-352, y=-27, z=159}, --51
				{x=332, y=-22, z=179}, --52
				{x=20, y=1, z=365}, --53
				{x=40, y=3, z=345} --54  
				} 
function check_droped_items(obj_id)
	local lvl=level.name()
	local obj=client_obj(obj_id)
	local actr=db.actor
	local act_pos=actr:position()
	if obj==nil or obj:parent()~=nil then return end
	for i=1,#point_off_drop[lvl] do
		local info=point_off_drop[lvl][i].info[1]
		local point=v3f(point_off_drop[lvl][i].pos[1],point_off_drop[lvl][i].pos[2],point_off_drop[lvl][i].pos[3])
		if not actr:has_info(info) and act_pos:distance_to(point)<2 then 
			return misc.release_obj(obj)
		end
	end
end
function check_droped_item(obj)
	sak_inventory.inventory_control()
	local info=nil 
	local window=0
	local lvl=level.name()
	local actr=db.actor
	local act_pos=actr:position()
	if point_off_drop[lvl] and (not bind_stalker.self_weapon_hide) and get_clsid(obj)<=CLID_WPN_WALTHER and get_clsid(obj)>=CLID_WPN_AK74 then
		schedule.add("check_drop", "sak.check_droped_items("..obj:id()..")", 250) 
	end
	local self=level.main_input_receiver()
	if self then
	--ODS("[~T]. #DBG: вот ~C0A~C07")
		if lvl=="l03_agroprom" and obj:section()=="decoder2" then
			if amk.check_npc_in_box(actr, point_drop[13],point_drop[14])~=false then 
				klyk_med_psy1(obj:id()) 
				window=1
			elseif amk.check_npc_in_box(actr, point_drop[15],point_drop[16])~=false then 
				klyk_med_psy2(obj:id()) 
				window=1
			elseif amk.check_npc_in_box(actr, point_drop[17],point_drop[18])~=false then 
				klyk_med_psy3(obj:id()) 
				window=1
		end
		elseif lvl=="l08_yantar" and obj:section()=="decoder2" then
			if amk.check_npc_in_box(actr, point_drop[31],point_drop[32])~=false then 
				yan_izm_psy1(obj:id()) 
				window=1
			elseif amk.check_npc_in_box(actr, point_drop[33],point_drop[34])~=false then 
				yan_izm_psy2(obj:id()) 
				window=1
			elseif amk.check_npc_in_box(actr, point_drop[35],point_drop[36])~=false then 
				yan_izm_psy3(obj:id()) 
				window=1
			end
		elseif lvl=="red_forest" and obj:section()=="marsh_pribor" then
			if amk.check_npc_in_box(actr, point_drop[47],point_drop[48])~=false then 
				mike.marsh_pribor_on(obj:id()) 
				window=1
			end
		elseif lvl=="red_forest" and strpos(obj:section(),"af_compass",1,true) and nlc_vars.mike_compass ~= true then
			if amk.check_npc_in_box(actr, point_drop[47],point_drop[48])~=false and has_alife_info("doktor_artteleport_info") then 
				mike.compass(obj:id()) 
				window=1
			end
		elseif lvl=="aver" and obj:section()=="marsh_pribor" then
			if amk.check_npc_in_box(actr, point_drop[49],point_drop[50])~=false and not has_alife_info("marsh_pribor_aver_done") then 
				mike.marsh_pribor_aver_on(obj:id()) 
				window=1
			end
		elseif lvl=="aver" and (strpos(obj:section(),"af_unknown_",1,true) or strpos(obj:section(),"af_dummy_buliz",1,true)) then
			if amk.check_npc_in_box(actr, point_drop[49],point_drop[50])~=false and has_alife_info("mdata_yes_resept_info") and not has_alife_info("mayatnik_aver_ready_info") then 
				mike.mayatnik_aver_will_be(obj:id()) 
				window=1
			end	  
		elseif lvl=="aver" and obj:section()=="item_kamaz_accum" then
			if amk.check_npc_in_box(actr, point_drop[51],point_drop[52])~=false and not has_alife_info("akk_aver_done") then 
				mike.akk_aver_on(obj:id())
				mike.remove_aver_akk_spot()
				window=1
			end 	
		elseif lvl=="l11_pripyat" and (strpos(obj:section(),"af_unknown_",1,true) or strpos(obj:section(),"af_dummy_buliz",1,true)) then
			if amk.check_npc_in_box(actr, point_drop[53],point_drop[54])~=false and has_alife_info("mdata_yes_resept_info") and not has_alife_info("mayatnik_prip_ready_info") then 
				mike.mayatnik_prip_will_be(obj:id()) 
				window=1
			end
		elseif lvl=="red_forest" and obj:section()=="scanner_anomaly" and amk.check_npc_in_box(actr, point_drop[25],point_drop[26])~=false then 
			out_point_1_scaner() info="serafim_scaner_1_done" schedule.add("check_drop", "misc.release_obj("..obj:id()..")", 50) 
			window=1
		elseif lvl=="generators" and obj:section()=="scanner_anomaly" and amk.check_npc_in_box(actr, point_drop[27],point_drop[28])~=false then 
			out_point_2_scaner() info="serafim_scaner_2_done" schedule.add("check_drop", "misc.release_obj("..obj:id()..")", 50)
			window=1
		elseif lvl=="l10_radar" and obj:section()=="scanner_anomaly" and amk.check_npc_in_box(actr, point_drop[29],point_drop[30])~=false then 
			out_point_3_scaner() info="serafim_scaner_3_done" schedule.add("check_drop", "misc.release_obj("..obj:id()..")", 50) serafim_out() 
			window=1
		elseif lvl=="l04_darkvalley" and actr:has_info("val_dolg_commander_dinamit_info") and obj:section()=="dynamite" and amk.check_npc_in_box(actr, point_drop[45],point_drop[46])~=false then 
		local objx= g_sim:story_object(story_ids.val_stena_podval) -- story_object(440)
		local objt= g_sim:story_object(story_ids.val_dinamit_podval) -- story_object(441)
		if objx and not objt then
			schedule.add("check_drop", "misc.release_obj("..obj:id()..")", 50) 
			misc.spawn_by_name("val_dinamit_podval")
			info="val_dinamit_podval_ok"
			window=1
		end  
		elseif black_tip.check_dropped(obj) then
			window=0
		end
		if window==1 then 
			local self=level.main_input_receiver()
			if self then
				-- self:GetHolder():start_stop_menu(self,true) 
				schedule.add( "close_window", "sak.close_window()", 100 )
			end
			window=0
		end
	end
	if actr==nil or info==nil or actr:has_info(info) then return end
	actr:give_info_portion(info)
end
function add_skaner_1_saharoff()
	add_skaner_saharoff(1)
end
function add_skaner_2_saharoff()
	add_skaner_saharoff(2)
end
function add_skaner_saharoff(tip)
	local tip_scan={
	"[logic]\nactive = ph_button@stop\n[ph_button@start]\ntooltip = \nanim = skaner_n1\non_timer = 10000|ph_button@work %=sak.info_pribor1() +yan_scientist_teleport_01_done%\n[ph_button@work]\nanim = skaner_n1_rotate\ntooltip = off_pribor\non_info = {+yan_scientist_teleport_01_time_start} ph_button@idle\non_press = ph_button@close %-yan_scientist_teleport_01_done%\n[ph_button@close]\nanim = skaner_n1_close\ntooltip = \non_timer = 6000| %=sak.retake_pribor1()%\n[ph_button@stop]\nanim = skaner_n1_stop\ntooltip = on_pribor\non_press = ph_button@start\n[ph_button@idle]\nanim = skaner_n1_rotate\ntooltip =",
	"[logic]\nactive = ph_button@stop\n[ph_button@start]\ntooltip = \nanim = skaner_n2_open\non_timer = 9000| ph_button@work %=sak.info_pribor2() +yan_scientist_teleport_02_done%\n[ph_button@work]\nanim = skaner_n2_work\ntooltip = off_pribor\non_info = {+yan_scientist_teleport_02_time_start} ph_button@idle\non_press = ph_button@close %-yan_scientist_teleport_02_done%\n[ph_button@close]\nanim = skaner_n2_close\ntooltip = \non_timer = 6000| %=sak.retake_pribor2()%\n[ph_button@stop]\nanim = skaner_n2_stop\ntooltip = on_pribor\non_press = ph_button@start\n[ph_button@idle]\nanim = skaner_n2_work\ntooltip ="
	}
	local actr=db.actor
	local dir=device().cam_dir
	local a=math.atan2(dir.x,dir.z)
	local xdelta=math.sin(a)
	local zdelta=math.cos(a)
	local pos=actr:position()
	local lvid=actr:level_vertex_id()
	local gvid=actr:game_vertex_id()
	local obj=amk.spawn_item("physic_object",v3f((pos.x+xdelta), pos.y, (pos.z+zdelta)), gvid, lvid)
	if obj then
		local pk = get_netpk(obj,1)
		local data = pk:get()
		data.visual_name = "new_item\\skaner_n"..tip
		data.custom_data = tip_scan[tip]
		data.skeleton_name = "skaner_n"..tip.."_stop"
		data.mass=20
		data.fixed_bones="link"
		pk:set(data)
		obj.set_direction=v3f(0,math.atan2(-dir.x,dir.z),0)
		nlc_vars.telepribor = obj.id
	end
	close_window()
end

function retake_pribor1()
	local id = nlc_vars.telepribor
	local obj = g_sim:object(id)
	if obj then
		misc.release_obj(obj)
	end
	sak_dialog.give_yan_scientist_teleport_01()
end

function retake_pribor2()
	local id = nlc_vars.telepribor
	local obj = g_sim:object(id)
	if obj then
		misc.release_obj(obj)
	end
	sak_dialog.give_yan_scientist_teleport_02()
end

function add_scanner_artefact()
	local actr=db.actor
	local dir=device().cam_dir
	local a=vector() a.y=math.atan2(dir.x,dir.z)
	local xdelta=math.sin(a.y)
	local zdelta=math.cos(a.y)
	local pos=actr:position()
	local lvid=actr:level_vertex_id()
	local gvid=actr:game_vertex_id()
	if has_alife_info("mar_military_post_ecolog_have") then
		if gvid==3003 then
			sak.send_tip("Начато сканирование по программе","Прибор установлен правильно",3,20,"ecolog","sak", "green")
			mike.timer_lim_scaner()
			sak_spawn.add_lim_burers()		  
		end
	end
	local obj=amk.spawn_item("physic_object",v3f((pos.x+xdelta), pos.y, (pos.z+zdelta)), gvid, lvid)
	if obj then
		local pk = get_netpk(obj,1)
		local data = pk:get()
		data.visual_name = "new_item\\scanner_artefact"
		data.skeleton_name = "idle"
		data.mass=20
		data.fixed_bones="link"
		pk:set(data)
		obj.set_direction=v3f(0,math.atan2(-dir.x,dir.z),0)
		nlc_vars.telepribor_lim = obj.id
	end
	close_window()
end
function info_pribor1()
	if sak_dialog.skaner_1_in_place() then
		send_tip("Блок мониторинга установлен и функционирует","Прибор",2,10,"g_g","no", "sky_blue")
	end
end
function info_pribor2()
	if sak_dialog.skaner_2_in_place() then
		send_tip("Блок мониторинга установлен и функционирует","Прибор",2,10,"g_g","no", "sky_blue")
	end
end
function val_stena_podval_explode()
	local actr=db.actor
	local act_pos=actr:position()
	local stena = level_object_by_sid(440)
	local st_pos = stena:position()
	local dist=st_pos:distance_to(act_pos)
	local h = hit()
	if dist<25 then
		h.draftsman=actr
		h:bone("bip01_spine")
		h.type=hit.explosion
		h.power=50/dist
		h.impulse=1.0
		actr:hit(h)
	end
	local ids, cnt = registry.clsid_objects(CLID_STALKER, CLID_STALKER, true, nil, 7)
	for n=1,cnt do
		local id = ids[n]
		local obj=client_obj(id)
		if obj:alive() then 
		local pos=obj:position()
			if pos.y<0 and pos.x<48 and pos.x>32 and pos.z<-24 and pos.z>-60 then
				misc.release_obj (obj)
			end
		end
	end
	misc.release_obj(stena)
    local se_obj = g_sim:story_object(story_ids.val_dinamit_podval)   -- story_object(441)
    if se_obj then source = client_obj(se_obj.id) end
    if source==nil then return end
		h.power = 1000000
		h.direction = vector():set(1, 0, 0)
		h.impulse = 1
		h.draftsman = source
		h.type = hit.chemical_burn
		source:hit(h)
		source:explode(0)
	for a=0,9 do
		local rand=lua_random(1,7)
		local obj=misc.spawn_obj("physic_object",st_pos)
		if obj then
			local pk = get_netpk(obj,1)
			local data = pk:get()
			data.visual_name = "new_item\\oblomok_betona_"..rand
			data.physic_type=3
			data.mass=25
			pk:set(data)
		end
	end
end

function x12_beton_add()
	if has_alife_info("x12_beton_add_info") then return end
	db.actor:give_info_portion("x12_beton_add_info")
	for n=1,4 do
		misc.spawn_by_name("bun_beton_block_"..n)
	end
	local war_docs={
				{-19.90,-7.4,-44.65,3538,2664},
				{-20.05,-7.4,-49.85,3380,2664}
				}
	for a=0,15 do
		local rand=lua_random(5,7)
		for n=1,2 do
			local obj=amk.spawn_item("physic_object",v3f(war_docs[n][1],war_docs[n][2]+a*0.06,war_docs[n][3]),war_docs[n][5],war_docs[n][4])
			if obj then
				local pk = get_netpk(obj,1)
				local data = pk:get()
				data.visual_name = "new_item\\oblomok_betona_"..rand
				data.physic_type=3
				data.mass=25
				pk:set(data)
				schedule.add("hit_bet"..a..n, "sak.hit_bet("..obj.id..")", 500) 
			end
		end
	end
end
function hit_bet(id)
	local obj=client_obj(id)
	local h=hit()
	h.power = 0.5
	h.direction = db.actor:direction()
	h.draftsman = db.actor
	h.impulse = 10
	h.type = hit.wound
	obj:hit(h)
end
function timer_upgrade_start()
	timers.start_timer("t_upgrade_start",0,2,13,"sak.upgrade_start_end()")
end
function upgrade_start_end()
	send_tip("Меченный, подходи, вроде получилось.","Сообщение от Демьяна",11,20,"ecolog","sak", "green")
	db.actor:give_info_portion("upgrade_start_done")
end

function serafim_out()
	timers.start_timer("serafim_out",1,1,5,"sak.serafim_out_end()")
end					  
function serafim_out_end()
	db.actor:give_info_portion("serafim_red_out")
end
function serafim_bar_out()
	timers.start_timer("serafim_bar_out",2,1,12,"sak.serafim_bar_out_end()")
end
function serafim_bar_out_end()
	if not has_alife_info("serafim_scaner_1_start") then
		db.actor:give_info_portion("serafim_bar_out")
	end
end						  
function yan_izm_psy1(obj_id)
	schedule.add("check_drop", "sak.yan_izm_psy1_start("..obj_id..")", 200) 
end
function yan_izm_psy1_start(obj_id)
	local obj=client_obj(obj_id)
	if obj==nil or obj:parent()~=nil then
		return 
	end
	timers.start_timer("yan_izm_psy1",lua_random(60,120),"sak.yan_izm_psy1_end()")
	send_tip("Начато измерение напряженности пси-поля, до завершения цикла прибор не поднимать!","Статус измерителя",2,10,"pribor","pda_news", "green")
	statys_psy=1
	sak_spawn.add_yan_izm1_monsters()
end
function yan_izm_psy1_end()
	if statys_psy==1 then
		send_tip("Цикл измерения завершён","Статус измерителя",2,10,"pribor","pda_news", "green")
		db.actor:give_info_portion("yan_izm_1faze")
		db.actor:give_info_portion("remove_yan_izm_spot1")
		statys_psy=0
	end
end
function yan_izm_psy2(obj_id)
	schedule.add("check_drop", "sak.yan_izm_psy2_start("..obj_id..")", 250) 
end
function yan_izm_psy2_start(obj_id)
	local obj=client_obj(obj_id)
	if obj==nil or obj:parent()~=nil then
		return
	end
	timers.start_timer("yan_izm_psy2",lua_random(60,120),"sak.yan_izm_psy2_end()")
	send_tip("Начато измерение напряжённости пси-поля, до завершения цикла прибор не поднимать!","Статус измерителя",2,10,"pribor","pda_news", "green")
	statys_psy=1
	sak_spawn.add_yan_izm2_monsters()
end
function yan_izm_psy2_end()
	if statys_psy==1 then
		send_tip("Цикл измерения завершён","Статус измерителя",2,10,"pribor","pda_news", "green")
		db.actor:give_info_portion("yan_izm_2faze")
		db.actor:give_info_portion("remove_yan_izm_spot2")
		statys_psy=0
	end  
end
function yan_izm_psy3(obj_id)
	schedule.add("check_drop", "sak.yan_izm_psy3_start("..obj_id..")", 250) 
end
function yan_izm_psy3_start(obj_id)
	local obj=client_obj(obj_id)
	if obj==nil or obj:parent()~=nil then
		return
	end
	timers.start_timer("yan_izm_psy3",lua_random(60,120),"sak.yan_izm_psy3_end()")
	send_tip("Начато измерение напряжённости пси-поля, до завершения цикла прибор не поднимать!","Статус измерителя",2,10,"pribor","pda_news", "green")
	statys_psy=1
	--add_yan_izm3_monsters()
end
function yan_izm_psy3_end()
	if statys_psy==1 then
		send_tip("Цикл измерения завершён","Статус измерителя",2,10,"pribor","pda_news", "green")
		db.actor:give_info_portion("yan_izm_3faze")
		db.actor:give_info_portion("remove_yan_izm_spot3")
		statys_psy=0
	end
end
function out_point_1_scaner()
	local obj= g_sim:story_object(story_ids.scaner_1_space_restrictor)
	if obj then
		amk.remove_spot_from_map(obj.id, "crlc_small")
		misc.release_obj(obj)
		sak_spawn.red_near_tank_monsters()
	end
	local objt= g_sim:story_object(story_ids.scaner_03) -- story_object(9147)
	if not objt then
		misc.spawn_by_name("scaner_03")
	end
end
function out_point_2_scaner()
	local obj= g_sim:story_object(story_ids.scaner_2_space_restrictor)
	if obj then
		amk.remove_spot_from_map(obj.id, "crlc_small")
		misc.release_obj(obj)
		sak_spawn.gen_near_marsh_monsters()
	end
	local objt= g_sim:story_object(story_ids.scaner_04) -- story_object(9148)
	if not objt then
		misc.spawn_by_name("scaner_04")
	end
end
function out_point_3_scaner()
	local obj= g_sim:story_object(story_ids.scaner_3_space_restrictor)
	if obj then
		amk.remove_spot_from_map(obj.id, "crlc_small")
		misc.release_obj(obj)
		sak_spawn.rad_near_scaner_monsters()
	end
	local objt= g_sim:story_object(story_ids.scaner_05) -- story_object(9149)
	if not objt then
		misc.spawn_by_name("scaner_05")
	end
end
local many_for_rep=true
function consum_artefact(hour)
	local borov= g_sim:story_object(story_ids.val_lager_borov)
	local npc=db.actor
	if borov and IsStalker(borov) and borov:alive() and npc:has_info("borov_info_rep_up_ok") then
		out_many_for_rep_up()
		if many_for_rep==true then
			if npc:character_reputation()<0 then
				sak_dialog.up_repa(100)
			end
		end
	end
	local hangr=-0.065
	if arts_operate~=false and (sak_inventory.belt_items["af_flower_new"] or sak_inventory.belt_items["af_armor_4"] or 	sak_inventory.belt_items["af_kol_4"]) then
		hangr=hangr+0.033
	end
	params.satiety_add(hangr)
end
local nv_on=0
local loka_on=1

local tmr_discharge_akb = misc.game_timer()

function get_accum()
	return db.actor:item_in_slot(11) 
end

function sak.discharge_accum(flag, quiet)
	local obj = get_accum()
	if obj == nil then
		tmr_discharge_akb:elapsed(true) -- чтобы время разряда не копилось
		nvd_params.disable_NVD()
		arts_operate = false
		return
	end 
	local accum_id = obj:id()
	local accum    = g_sim:object(accum_id)
	local ctime = game.get_game_time()  
	if accum then
		local diff_t = tmr_discharge_akb:elapsed(true)
		local coef = loka_on * balance.devices.accum_discharge / 100.0 or 0.001    
		diff_t = math.abs ( diff_t ) / 60.0   -- сколько прошло времени в игровых минутах       
		nv_on = 0 -- потребление ПНВ
			if nvd_params.get_NVD_powered () then
				nv_on = 1
			end    
		-- если одна минута прошла (diff_t = 1.0), потребление составит coef * число потребителей    
		-- ПНВ эквивалентен одному артефакту по потреблению
		local consumption = (af_count + nv_on) * coef      
		consumption = consumption * diff_t                           -- с учетом текущей скорости времени    
			if level.name() == "generators" then
				consumption = consumption * 0.5                           -- CHEAT: наэлектризованная локация, там разряд меньше
			end    
		consumption = consumption + coef * diff_t * 0.01             -- плюс разряд светодиодами пояса    
		local cond = params.get_condition(accum_id, 0.9999) + (0.5 - lua_random()) * coef * diff_t -- погрешность измерения заряда 
		-- wprintf("[~T].C0F #DBG: accum power =~C0D %.5f~C07, consumption =~C0D %.5f~C0F, diff_t =~C0D %.3f~C0F, nvd power =~C0F %d~C07~C07", cond, consumption, diff_t, nv_on)
		-- wprintf("~C0A %s~C07", lua_traceback('    '));   
			if (cond <= 0.13) and (diff_t >= 1.0) then
				local act = db.actor
				local sound=sound_object("ambient\\special\\marsh_beep_1")      
				sound:play_at_pos(act, act:position(),0)    
			end    
			if cond >= 0.07 then
				arts_operate = true
				local new_cond = cond - consumption                       -- разряд батареи текущим током
				params.upd_condition (accum_id, new_cond)
				arts_operate=true
				nvd_params.enable_NVD() -- есть заряд, можно включать    
			else
			if arts_operate==true then
				send_tip("Аккумуляторная батарея разряжена", "Аккумулятор", 2, 10, "pribor", "pda_news", "red")          
				nvd_params.disable_NVD()
				arts_operate = false
				razgruzka.open_inv_raz_pod = false
			end
		end -- if cond 
		sak_inventory.update_accum_leds()
	else  
	wprintf("[~T].~C0C #FATAL:~C07 bad object in slot 11 = %d ", accum_id)
	nvd_params.disable_NVD() 
	end -- если есть аккумулятор
end

sak.empted_akkum = sak.discharge_accum -- alias
sak.empted_accum = sak.discharge_accum -- alias

local tmr_art_discharge = misc.game_timer()

function discharge_tasks()
	if db.init_stage < 500 then
		return
	end 
	discharge_accum()
	local coef = balance.artefacts.time_damage_coef * tmr_art_discharge:elapsed(true) / 60.0 -- коэффициент зависимости от времени
	if coef < 0.00001 then
		return
	end -- не зачем и ЦП мучать  
	if get_accum() then    
			arc_arts.discharge_artefacts(coef)
		else  
			arts_operate=false   
	end  
	if sleep_manager.sleeping then
		return
	end   
	black_tip.discharge(coef)
end

function sleep_discharge_accum(hour)
	sleep_discharge_torch(hour)  
end

function info_days(hour)
	local info=""
	if hour>=21 or hour<6 then info="time_night"
		elseif hour>=6 and hour<11 then info="time_morning"
		elseif hour>=11 and hour<17 then info="time_day" 
		elseif hour>=17 and hour<21 then info="time_evening"
	end
	if not has_alife_info(info) then db.actor:give_info_portion(info) vodka_stas_new(info) lysyi_art_new(info) hellcar_attack(info) mil_find_prizrak(info)
		sleep_manager.clear_need_sleep_nrg(info)
	end
	local lname=level.name()
	params.hit_probability_add(level_difficulty[lname]*time_difficulty[hour])
	db.actor:disable_info_portion("botans_dialog_done")
end
function hellcar_attack(info)
	local act=db.actor
	if info=="time_evening" and has_alife_info("gar_start_quest") and has_alife_info("hellcar_today") and not has_alife_info("hellcar_raid_start") then
		act:give_info_portion("hellcar_raid_start_soon")
		timers.start_timer("hellcar_raid",0,0,8,"sak.add_hellcar_raid()")
	elseif info=="time_morning" and has_alife_info("gar_start_quest") and not has_alife_info("hellcar_raid_start") then
		act:give_info_portion("hellcar_today")
	end
end
function add_hellcar_raid()
	local lname=level.name()
	local act = db.actor
	act:give_info_portion("hellcar_raid_start")
	act:give_info_portion("gar_bandits_raid")
	if not has_alife_info("gar_direction") then
		act:give_info_portion("gar_direction")
	end
	if lname~="l02_garbage" then
		local obj= g_sim:story_object(story_ids.gar_hellcar)
		if obj then
			local pk = get_netpk(obj)
			local data = pk:get()
			data.health     = 0
			data.upd.health = 0
			pk:set(data)
		end
		act:give_info_portion("gar_hellcar_death")
	else
		local gulag = xr_gulag.get_gulag_by_name("gar_bandit_agr")
		if gulag then
			gulag.smrttrn:update()
		end
	end
end
function mil_find_prizrak(info)
	local act=db.actor
	if info~="time_night" then  
		if has_alife_info("mil_find_prizrak_start") and not has_alife_info("gen_mil_group_info") then
			if not has_alife_info("mil_find_prizrak_today") and not has_alife_info("esc_blockpost_commander_gg_know") then
				act:give_info_portion("mil_find_prizrak_today")
			end
		elseif has_alife_info("gen_mil_group_info") and has_alife_info("info_escape_trader_tesla_done") and not has_alife_info("esc_blockpost_commander_info_know") then
			if not has_alife_info("mil_find_prizrak_today") then
				act:give_info_portion("mil_find_prizrak_today")
			end
		end
	elseif info=="time_night" then
		act:disable_info_portion("mil_find_prizrak_today")
		act:disable_info_portion("esc_mil_nagrad_info")
	end
end
function mil_abuse()
	params.hit_probability_add(10)
end
function vodka_stas_new(info)
	if info=="time_day" then
		nlc_vars.vodka_win = 0
		db.actor:disable_info_portion("gen_hermit_change_done")
		local name, delay = timers.check_timer("kolb")
		if not name then
			timers.start_timer("kolb",0,1,lua_random(15,45),"sak.kolb_baded()")
			kolb = false
		end
	elseif info=="time_night" then
		local name, delay = timers.check_timer("kolb")
		if not name then
			timers.start_timer("kolb",0,1,lua_random(15,45),"sak.kolb_baded()")
			kolb = false
		end
	end
end
function lysyi_art_new(info)
	if info=="time_morning" then
		nlc_vars.art_win = 0
		nlc_vars.vergas_rem = 0
		sak_minigame.gg_wined()
		nlc_vars.greens_kolbasa = 0
		nlc_vars.dan_ammo = 0
		esc_no_charge()
		bar_no_charge()
		new_quests.generate_ignat_mutants()
	end
end

function mayatnik()
	local mayat_rand=lua_random(-1,1)
	amk_vars.mayat_koeff = mayat_rand
end

function actor_pickup(id, on_fail)
	local obj = client_obj(tonumber(id)) 
 
	if obj and not arc_arts.is_actor_item(id) then
		local parent = obj:parent() 
		if parent then
				parent:transfer_item(obj, db.actor)
			else
				obj:transfer_item(obj, db.actor)
		end   
		sak_inventory.need_update_inventory()
	elseif obj == nil then
		wprintf("[~T].~C0C #WARN:~C07 actor cannot pickup non existent~C0D %d~C07", DumpVar(id))
		if on_fail then on_fail() end     
	end
end

function anim_actor()
	level.add_cam_effector("camera_effects\\scenario_cam\\jupiter\\jup_b15_wake_up.anm", 2000, true, "")
end
function add_cat_eyes()
	level.add_pp_effector("sak.ppe", 2200, true)
	vergas_medical_elastic.snd_eat_med(3)
	timers.start_timer("cat_eyes_time",lua_random(150,300),"sak.end_cat_eyes()")
end
function end_cat_eyes()
	level.add_pp_effector("sak.ppe", 2200, false)
end

function klyk_med_psy1(obj_id)
	schedule.add("check_drop", "sak.klyk_med_psy1_start("..obj_id..")", 200) 
end
function klyk_med_psy1_start(obj_id)
	local obj=client_obj(obj_id)
	if obj==nil or obj:parent()~=nil then
		return
	end
	timers.start_timer("klyk_med_psy1",lua_random(60,120),"sak.klyk_med_psy1_end()")
	send_tip("Начато измерение напряжённости пси-поля, до завершения цикла прибор не поднимать!","Статус измерителя",2,10,"pribor","pda_news", "green")
	statys_psy=1
	sak_spawn.add_klyk_med1_monsters()
end
function klyk_med_psy1_end()
	if statys_psy==1 then
		send_tip("Цикл измерения завершён","Статус измерителя",2,10,"pribor","pda_news", "green")
		db.actor:give_info_portion("agr_klyk_1faze")
		db.actor:give_info_portion("agr_remove_klyk_med_spot1")
		statys_psy=0
	end
end
function klyk_med_psy2(obj_id)
	schedule.add("check_drop", "sak.klyk_med_psy2_start("..obj_id..")", 200) 
end
function klyk_med_psy2_start(obj_id)
	local obj=client_obj(obj_id)
	if obj==nil or obj:parent()~=nil then
		return
	end
	timers.start_timer("klyk_med_psy2",lua_random(60,120),"sak.klyk_med_psy2_end()")
	send_tip("Начато измерение напряжённости пси-поля, до завершения цикла прибор не поднимать!","Статус измерителя",2,10,"pribor","pda_news", "green")
	statys_psy=1
	sak_spawn.add_klyk_med2_monsters()
end
function klyk_med_psy2_end()
	if statys_psy==1 then
		send_tip("Цикл измерения завершён","Статус измерителя",2,10,"pribor","pda_news", "green")
		db.actor:give_info_portion("agr_klyk_2faze")
		db.actor:give_info_portion("agr_remove_klyk_med_spot2")
		statys_psy=0
	end  
end
function klyk_med_psy3(obj_id)
	schedule.add("check_drop", "sak.klyk_med_psy3_start("..obj_id..")", 200) 
end
function klyk_med_psy3_start(obj_id)
	local obj=client_obj(obj_id)
	if obj==nil or obj:parent()~=nil then
		return
	end
	timers.start_timer("klyk_med_psy3",lua_random(60,120),"sak.klyk_med_psy3_end()")
	send_tip("Начато измерение напряжённости пси-поля, до завершения цикла прибор не поднимать!","Статус измерителя",2,10,"pribor","pda_news", "green")
	statys_psy=1
	sak_spawn.add_klyk_med3_monsters()
end
function klyk_med_psy3_end()
	if statys_psy==1 then
		send_tip("Цикл измерения завершён","Статус измерителя",2,10,"pribor","pda_news", "green")
		db.actor:give_info_portion("agr_klyk_3faze")
		db.actor:give_info_portion("agr_remove_klyk_med_spot3")
		statys_psy=0
	end
end
function agr_klyk_out()
	level.add_pp_effector("teleport.ppe", 1526, false)
	misc.release_obj(sim:story_object(story_ids.klyk), 'sak.script:1569')
	db.actor:give_info_portion("klyk_out")
end
function dezombified(art)
	local objg
	for a,i in pairs(db.storage) do
		objg=client_obj(a)
		if objg then
			if objg and IsStalker(objg) and objg:alive() and objg:position():distance_to(db.actor:position())<2 then
				break
			end 
		end 
	end
	if objg then
		local pk = get_netpk(objg)
		local data = pk:get()
		data.character_profile=string.gsub(data.character_profile,"(.*)_zombi","%1")
		pk:set(data)
		amk_mod.af_flash(art)
	end    
end
function esc_shustryi_stalker()
	local npc=level_object_by_sid(4)
	if npc and npc:alive() and npc.online then
			npc:set_character_community("stalker",0,0)
	else 
		local obj= g_sim:story_object(story_ids.esc_shustryi)
		if obj then
			local pk = get_netpk(obj)
			local data = pk:get()
			data.community_index=3
			pk:set(data)
		end
	end
end
function trup1_sanek_near()
	local obj1= g_sim:story_object(story_ids.trup_sanek)
	if (obj1 and IsStalker(obj1) and not obj1:alive()) then
		local posobj1=obj1.position
		local actorpos=db.actor:position()
		if (posobj1:distance_to(actorpos)<2) then 
			return true
		else 
			return false
		end
	else 
		return false
	end
end
function trup1_sanek_level_changer()
	level.add_pp_effector("teleport.ppe", 1527, false)
	misc.release_obj(sim:story_object(story_ids.trup_sanek), 'sak.script:1619')
	db.actor:give_info_portion("trup_sanek_out")
	local act_pos=db.actor:position()
	local lvid=db.actor:level_vertex_id()
	local gvid=db.actor:game_vertex_id()
	obj1= g_sim:create("level_changer",v3f(act_pos.x,act_pos.y,act_pos.z), lvid, gvid)
	if obj1 then 
		local obj2= g_sim:story_object(story_ids.lost_village_level_changer)  -- story_object(9166)
		local pk = get_netpk(obj2)
		local data2 = pk:get()
		pk = get_netpk(obj1)
		local data1 = pk:get()
		data1 = data2
		data1.story_id = (9481)
		data1.silent_mode = 1
		pk:set(data1)
	end
end
function trup2_sanek_near()
	local obj2= g_sim:story_object(story_ids.trup_sanek2)
	if (obj2 and IsStalker(obj2) and not obj2:alive()) then
		local posobj2=obj2.position
		local actorpos=db.actor:position()
		if (posobj2:distance_to(actorpos)<3) then 
			return true
		else 
			return false
		end
	else 
		return false  
	end
end
function trup2_sanek_has()
	local obj2= g_sim:story_object(story_ids.trup_sanek2)
	if obj2 then
		return true
	else 
		return false
	end
end
function trup2_sanek_not()
	return not trup2_sanek_has()
end
function gg_go_down()
	level.add_pp_effector("teleport.ppe", 1527, false)
	local pos = device().cam_pos
	db.actor:set_actor_position(v3f(pos.x,pos.y-5,pos.z))
end
function af_zone_off(af)
	local anom = amk_anoms.get_nearest_anomaly(db.actor)
	local sid = g_sim:object(anom)
	if sid then
		amk_mod.af_flash(af)
		misc.release_obj(sid, 'sak.script:1673')
	end
end
function inv_item_cond(item,val)
	local obj=db.actor:object(item)
	if obj~=nil then
		obj:set_condition(val)
	end
end

local time_sub=time_global()
local time_sound=time_global()

local act_breath={
    ["wht"]={{"actor\\without_mask_1_",2,1.2},
    {"actor\\without_mask_2_",2,1.1},
    {"actor\\without_mask_3_",6,1}},
    ["gas"]={{"actor\\gas_mask_1_",6,1.0},
    {"actor\\gas_mask_2_",10,0.9},
    {"actor\\gas_mask_3_",10,0.8}},
    ["mil"]={{"actor\\exo_mask_1_",9,1.5},
    {"actor\\exo_mask_2_",9,1.3},
    {"actor\\exo_mask_3_",8,1.1}},
    ["scn"]={{"actor\\scient_mask_1_",2,1.6},
    {"actor\\scient_mask_2_",2,1.4},
    {"actor\\scient_mask_3_",6,1.2}}
    }
local breath_sound={
    "actor\\gas_mask_breath_in_0",
    "actor\\gas_mask_breath_in_1",
    "actor\\gas_mask_breath_in_2"
    }
local delt=0
local delt_h=0
function actor_heart()
	local npc = db.actor
	if npc == nil then return end
	local hb = npc.health
	if (hb <= 0) or (not npc:alive()) then return end
	local time_curr = time_global()
	local time_delt = 0
	local step = 1
	if hb < 0.3 then
		time_delt = time_curr - delt_h
		if time_delt >= (math.log(hb * 200)) * 200 then
			if hb<0.05 then step = 3 elseif hb < 0.15 then step = 2 else step = 1 end
			vergas_lib.s_play("actor\\heartbeat_"..step.."_"..lua_random(4),(1.5-5*hb))
			delt_h=time_curr
		end
	end
	local r_h = npc.power
	if r_h < 0.79 then
		time_delt = time_curr - delt
		local tip = vergas_masks.tip_breath or "wht"
		if time_delt >= (r_h * 1500 + 800) then
			if r_h < 0.25 then step = 3 elseif r_h < 0.5 then step = 2 else step = 1 end
			if astma==true then
				vergas_lib.s_play(breath_sound[lua_random(1,3)],1)
				astma=false
			else
				local zv = 2.5 - act_breath[tip][step][3] - r_h
				vergas_lib.s_play(act_breath[tip][step][1]..lua_random(act_breath[tip][step][2]),zv)
			end
		delt = time_curr
		end
	end
end
function health_handle()
	local npc=db.actor
	if not npc then return end
	local lname=level.name()
	local time_current=time_global()
	local time_delta=time_current - time_sub
	local time_delta_sound=time_current - time_sound
	if time_delta_sound >= 1113 and lname~="l05_bar" and lname~="l01_escape" then
		fear_sounds()
		time_sound=time_current + lua_random(t_s_1, t_s_1*2)
	end
	
	local n_healh = npc.health
	local r_healh = npc.power
	local p_healh = params.actor_psy_health()
	local s_healh = params.actor_satiety_health() 
	local b_healh = params.actor_bleeding()
	local x_healh = npc.radiation
	
	if time_delta >= 8538 then
		time_sub=time_current
		local s_nd = level.get_snd_volume()
		if s_nd<snd_volume then
			s_nd=s_nd+0.1
			level.set_snd_volume(s_nd)
		end
		local grena=npc:item_in_slot(3)
		if grena then
			local zapal=lua_random(500,6000)
			params.zapal_add(grena,zapal)
		end
		if s_healh<0.15 then
			local add=-(0.16-s_healh)^2
			params.health_add(add)
		end
		if x_healh>0.05 then
			if params.actor_alcohol_health()>0.01 then npc.radiation = -0.05 end
		end
    
		if p_healh < 0.95 then
			-- восстановление пси-здоровья рядом с костром
			if params.actor_alcohol_health()>0.05 then params.psy_health_add(0.12) end
			local npos = device().cam_pos
			local cdir = get_actor_obj().orientation
			local vd   = device().cam_dir --  cdir:get_dir() -- actor direction as vector
			local objs, cnt = registry.sc_objects("zone_flame_*", true, 7, client_obj)      
			for n, objg in ipairs(objs) do
				local op = objg:position()
				if op:distance_to(npos) < 3   then
					local diff = vector():sub(op, npos):normalize()                         
					local cp = vector():crossproduct(vd, diff)
					local dp = vd:dotproduct(diff)      
					local angle = math.atan2( cp:magnitude(), dp )           
					if math.abs(angle) < 0.75 then
						params.psy_health_add(0.05)
				else	
			
				end

					wprintf("[~T].~C0F #DBG(camp_heal_psy): angle =~C0D %.3f~C0F, dp =~C0F %.3f~C07 ", angle, dp)
				end -- if distance
			end -- for

		end -- if psy_health

		black_tip.health_handle()    
	end
end

function breath_poison() -- реализация астмы с учетом противогаза
	if mask_poison >= 0 then return end
	local npc=db.actor
	local act_pos=npc:position()
	local cond = vergas_masks.mask_condition() 
	
	if level.name() == "warlab" and sleep_manager.sleeping and sleep_manager.magic_sleep then -- вырубаем обработку на время сна в бункере "Тесла"
		schedule.add("after_warlab_sleep", "sak.after_warlab_sleep()", 6000)
		return
	end
	
	if amk_anoms.check_coordinates(act_pos) and
		(vergas_masks.get_flag_mask() == false or cond < 0.85 or 
		vergas_masks.mask_definition() == "?") then
      
		local r_h = npc.power
		if r_h >= 0.79 then
			vergas_lib.s_play(breath_sound[lua_random(1,3)],1)
		else
			astma = true
		end
		local add = mask_poison * 1.5
		params.health_add(add)
    
		if npc:item_in_slot(6) == nil then
			local h = hit()
			h.draftsman = npc
			h:bone("bip01_spine")
			h.type = hit.chemical_burn
			h.power = -mask_poison * 4
			h.impulse=0
			npc:hit(h)
		end
	end
	local t_add = 160
	if vergas_masks.get_flag_mask() == true then
			if cond < 0.66 then t_add = 100
				elseif cond < 0.73 then t_add = 120
				elseif cond < 0.81 then t_add = 140
			end
		else
		t_add = 80
	end
	local t_m = math.floor((0.04 - mask_poison) * t_add)
	timers.start_timer ("time_breath",t_m,"sak.breath_poison()")
end

function after_warlab_sleep()
	if vergas_masks.allcore_mask_is_on() == false then
		vergas_masks.on_off_mask()
	end
	schedule.add("after_warlab_sleep2", "sak.breath_poison()", 6000)
end

function out_many_pda_broken()
	local many=nlc_vars.many_cash or 450
	local bablo=db.actor:money()
	if bablo>many then
		db.actor:give_money(-(bablo-many))
		nlc_vars.gg_money = bablo-many
	else
		nlc_vars.many_cash = bablo
	end
end

function end_power(end_power)
	db.actor.power=end_power
end
function s_play_rem_open()
	vergas_lib.s_play("script_sound\\treasure_sounds\\treasure_2_open",1)
end
function s_play_rem_close()
	vergas_lib.s_play("script_sound\\treasure_sounds\\treasure_2_close",1)
end

local rep_percent=0.1
local rep_percent_tiski=0.15
function repair_boxoutfit(repiout,repiweap)
	local actr=db.actor
	local dir=device().cam_dir
	local a=math.atan2(dir.x,dir.z)
	local xdelta=math.sin(a)
	local zdelta=math.cos(a)
	local pos=actr:position()
	local lvid=actr:level_vertex_id()
	local gvid=actr:game_vertex_id()
	local obj= g_sim:create("physic_object",v3f((pos.x+xdelta), pos.y+0.1, (pos.z+zdelta)), lvid, gvid)
	if obj then
		local open="[logic]\nactive = ph_button@closed\n[ph_button@closed]\ntooltip = search_self_rep\nanim = rembox_close_static\non_press = %=sak.actor_hide_weapon() =sak.s_play_rem_open()% ph_button@open\n[ph_button@open]\ntooltip = \nanim = rembox_open\non_timer = 1900| %=sak.restore_weap() +rem_open% ph_button@opened\n[ph_button@opened]\ntooltip = \nanim = rembox_open_static\non_info = {+rem_close} ph_button@close %=sak.actor_hide_weapon() =sak.s_play_rem_close() -rem_close -rem_open%\n[ph_button@close]\ntooltip = \nanim = rembox_close\non_timer = 1900| ph_button@close_end\n[ph_button@close_end]\ntooltip = \nanim = rembox_close_static"
		local dirs=math.atan2(-dir.x,dir.z)-1.57
		obj.direction = vector():set(0,dirs,0)
		local pk = get_netpk(obj,1)
		local data = pk:get()
			data.visual_name = "new_item\\rembox"
			data.custom_data = open
			data.skeleton_name = "rembox_close_static"
			data.mass=20
			data.fixed_bones="link"
			pk:set(data)
		local robjd= g_sim:create("m_repair_boxoutfit",v3f((pos.x+xdelta), pos.y+0.3, (pos.z+zdelta)), lvid, gvid)
		local c_box= misc.spawn_obj("closer_box", robjd.position, robjd.id, 1)
		if repiout~=0 then
			se_respawn.create_ammo ("repair_itemoutfit", robjd.position, robjd.level_vertex_id, robjd.game_vertex_id, robjd.id, repiout)
		end
		if repiweap~=0 then
			se_respawn.create_ammo ("repair_item_weapon", robjd.position, robjd.level_vertex_id, robjd.game_vertex_id, robjd.id, repiweap)
		end
		robjd.direction = vector():set(0,dirs,0)
		local pk = get_netpk(robjd,1)
		local data = pk:get()
		data.custom_data = "[logic]\ncfg = scripts\\self_rep_box.ltx"
		pk:set(data)
		self_rep_boxes[c_box.id] = {}
		self_rep_boxes[c_box.id]["treas"]=robjd.id
		self_rep_boxes[c_box.id]["phis"]=obj.id
		self_rep_boxes[c_box.id]["direct"]=dirs
		nlc_vars.self_rep_boxes = self_rep_boxes
	end
	close_window()
end

function repair_box_close(obj, attempt)
	close_window() 
	misc.process_spawn() 
	-- UpdateRegistry(false)
	sak.self_rep_boxes = xray_vars.load_table(nlc_vars, "self_rep_boxes", {})
	local c_box_id=obj:id()
	local rbox = sak.self_rep_boxes[c_box_id]
  
	local objd_id,objr_id,dirs = rbox["treas"], rbox["phis"], rbox["direct"]
	local out_object,outr_object = client_obj(objd_id),client_obj(objr_id)
	local repiout=0
	local repiweap=0
	if out_object then
		local o_id=out_object:id()
		-- registry.inv_objects(0, true)
		local ids,cnt = registry.inv_objects(o_id, false)
		for n = 1,cnt do
			local id = ids[n]
			local item = client_obj(id)
			if item then 
				local sect=item:section()
				if     strposx(sect, "repair_itemoutfit")  then repiout  = repiout  + 1
				elseif strposx(sect, "repair_item_weapon") then repiweap = repiweap + 1
			else   
			--wprintf(" non expected item %s in repair box", item:name())     
			out_object:transfer_item(item, db.actor) 
			end
		end 
    end -- for
		--send_tip("В ремонтном ящике:\\nОружейных ремкомплектов - "..repiweap.." шт.\\nКомплектов для брони - "..repiout.." шт.",nil,2,5,"g_g","no", "green")
		misc.release_obj(obj)
		misc.release_obj(out_object)
		nlc_vars.self_rep_boxes[c_box_id]=nil
		db.actor:give_info_portion("rem_close")
		schedule.add("cl_rep", "sak.repair_box_closed("..objr_id..","..repiout..","..repiweap..","..dirs..")", 2500)
	end--]] 
end

function repair_box_closed(obj_id,repiout,repiweap,dirs)
	local robjd=client_obj(tonumber(obj_id))
	local pos=robjd:position()
	local dir=tonumber(dirs)
	if robjd then
		misc.release_obj(obj_id)
	end
	local r_box=misc.spawn_obj("repair_boxoutfit", pos)
	if r_box then
		r_box.direction = vector():set(0,dir,0)
		local pk = get_netpk(r_box,1)
		local data = pk:get()
		data.custom_data = repiout..","..repiweap
		pk:set(data)
	end
	restore_weap()
end

local repair_sound={
  "device\\tiski_pistol_",
  "device\\tiski_avto_",
  "device\\tiski_bronik_"
}
local outfit_proc={
["novice_outfit"]=0.1,
["novice_q_outfit"]=0.05,
["outfit_novice_m1"]=0.1,
["outfit_q_novice_q_m1"]=0.05,
["neytral_novice_outfit_m1"]=0.1,
["neytral_q_novice_q_outfit_q_m1"]=0.05,
["neytral_novice_gaz_outfit_m1"]=0.1,
["neytral_q_novice_q_gaz_q_outfit_q_m1"]=0.05,
["stalker_outfit"]=0.1,
["stalker_q_outfit"]=0.05,
["neytral_gaz_outfit_m1"]=0.1,
["neytral_q_gaz_q_outfit_q_m1"]=0.05,
["neytral_gaz_outfit_m2"]=0.1,
["neytral_q_gaz_q_outfit_q_m2"]=0.05,
["outfit_stalker_m1"]=0.1,
["outfit_q_stalker_q_m1"]=0.05,
["outfit_stalker_m2"]=0.1,
["outfit_q_stalker_q_m2"]=0.05,
["stalker_outfit_m3"]=0.1,
["stalker_q_outfit_q_m3"]=0.05,
["scientific_outfit"]=0.1,
["scientific_q_outfit"]=0.05,
["exo_outfit"]=0.08,
["exo_q_outfit"]=0.04,
["exo_outfit_m1"]=0.08,
["exo_q_outfit_q_m1"]=0.04,
["outfit_exo_m1"]=0.08,
["outfit_q_exo_q_m1"]=0.04,
["neytral_exo_antigas_outfit"]=0.08,
["neytral_q_exo_q_antigas_q_outfit"]=0.04,
["bandit_outfit"]=0.1,
["bandit_q_outfit"]=0.05,
["outfit_bandit_m1"]=0.1,
["outfit_q_bandit_q_m1"]=0.05,
["bandit_gaz_outfit_m1"]=0.1,
["bandit_q_gaz_q_outfit_q_m1"]=0.05,
["bandit_veteran_outfit"]=0.1,
["bandit_q_veteran_q_outfit"]=0.05,
["bandit_veteran_outfit_gas"]=0.1,
["bandit_q_veteran_q_outfit_q_gas"]=0.05,
["bandit_veteran_outfit_m1"]=0.1,
["bandit_q_veteran_q_outfit_q_m1"]=0.05,
["bandit_master_outfit"]=0.1,
["bandit_q_master_q_outfit"]=0.05,
["bandit_master_outfit_gas"]=0.1,
["bandit_q_master_q_outfit_q_gas"]=0.05,
["bandit_master_outfit_m1"]=0.1,
["bandit_q_master_q_outfit_q_m1"]=0.05,
["exo_bandit_outfit"]=0.08,
["exo_q_bandit_q_outfit"]=0.04,
["killer_outfit"]=0.1,
["killer_q_outfit"]=0.05,
["killer_gaz_outfit_m1"]=0.1,
["killer_q_gaz_q_outfit_q_m1"]=0.05,
["outfit_killer_m1"]=0.1,
["outfit_q_killer_q_m1"]=0.05,
["merc_scientific_outfit"]=0.1,
["merc_q_scientific_q_outfit"]=0.05,
["killer_blue_exoskeleton"]=0.08,
["killer_q_blue_q_exoskeleton"]=0.04,
["monolit_outfit"]=0.1,
["monolit_q_outfit"]=0.05,
["monolit_gaz_outfit_m1"]=0.1,
["monolit_q_gaz_q_outfit_q_m1"]=0.05,
["monolit_scientific_outfit"]=0.1,
["monolit_q_scientific_q_outfit"]=0.05,
["monolit_exoskeleton"]=0.08,
["monolit_q_exoskeleton"]=0.04,
["specops_outfit"]=0.1,
["specops_q_outfit"]=0.05,
["outfit_specnaz_m1"]=0.08,
["outfit_q_specnaz_q_m1"]=0.04,
["military_outfit"]=0.1,
["military_q_outfit"]=0.05,
["militaryspec_outfit"]=0.1,
["militaryspec_q_outfit"]=0.05,
["stalker_guard_outfit"]=0.1,
["stalker_q_guard_q_outfit"]=0.05,
["svoboda_light_outfit"]=0.1,
["svoboda_q_light_q_outfit"]=0.05,
["outfit_svoboda_m1"]=0.1,
["outfit_q_svoboda_q_m1"]=0.05,
["svoboda_gaz_outfit_m1"]=0.1,
["svoboda_q_gaz_q_outfit_q_m1"]=0.05,
["svoboda_heavy_outfit"]=0.1,
["svoboda_q_heavy_q_outfit"]=0.05,
["svoboda_heavy_gaz_outfit_m1"]=0.1,
["svoboda_q_heavy_q_gaz_q_outfit_q_m1"]=0.05,
["freedom_scientific_outfit"]=0.1,
["freedom_q_scientific_q_outfit"]=0.05,
["svoboda_yellow_exo_outfit_m1"]=0.08,
["svoboda_q_yellow_q_exo_q_outfit_q_m1"]=0.04,
["svoboda_exoskeleton"]=0.08,
["svoboda_q_exoskeleton"]=0.04,
["dolg_outfit"]=0.1,
["dolg_q_outfit"]=0.05,
["outfit_dolg_m1"]=0.1,
["outfit_q_dolg_q_m1"]=0.05,
["dolg_gaz_outfit_m1"]=0.1,
["dolg_q_gaz_q_outfit_q_m1"]=0.05,
["dolg_scientific_outfit"]=0.1,
["dolg_q_scientific_q_outfit"]=0.05,
["dolg_black_exoskeleton"]=0.08,
["dolg_q_black_q_exoskeleton"]=0.04,
["ecolog_outfit"]=0.08,
["ecolog_q_outfit"]=0.04,
["ecolog_outfit_m1"]=0.06,
["ecolog_q_outfit_q_m1"]=0.03,
["protection_outfit"]=0.06,
["protection_q_outfit"]=0.03,
["broken_exoskeleton"]=0.05,
["broken_q_exoskeleton"]=0.025,
["outfit_soldier_m1"]=0.1,
["outfit_q_soldier_q_m1"]=0.05,
["soldier_outfit"]=0.1,
["soldier_q_outfit"]=0.05,
["cs_light_outfit"]=0.1,
["cs_q_light_q_outfit"]=0.05,
["cs_heavy_outfit"]=0.08,
["cs_q_heavy_q_outfit"]=0.04,
["military_stalker_outfit"]=0.1,
["military_commander_outfit"]=0.1,
["super_scientific_outfit"]=0.08,
["super_q_scientific_q_outfit"]=0.04
}
local wpn_proc = {
["wpn_pm"]=0.1,

["wpn_pb"]=0.1,

["wpn_fort"]=0.1,

["wpn_fort_m1"]=0.1,

["wpn_glock"]=0.1,

["wpn_beretta"]=0.1,

["wpn_colt1911"]=0.1,

["wpn_desert_eagle"]=0.1,

["wpn_eagle_m1"]=0.1,

["wpn_walther"]=0.1,

["wpn_gungauss"]=0.02,

["wpn_sig220"]=0.1,

["wpn_usp"]=0.1,

["wpn_beretta93"]=0.1,

["wpn_aps"]=0.1,

["wpn_ak74u"]=0.1,

["wpn_ak74u_old"]=0.1,

["wpn_ak74"]=0.1,

["wpn_ak74_old"]=0.1,

["wpn_ak47"]=0.1,

["wpn_ak47_old"]=0.1,

["wpn_aks47"]=0.1,

["wpn_akm"]=0.1,

["wpn_ak74pbn"]=0.1,
["wpn_ak74pbn_1pso"]=0.1,
["wpn_ak74pbn_cobra"]=0.1,
["wpn_ak74pbn_1p78"]=0.1,

["wpn_ak74m"]=0.1,
["wpn_ak74m_1pso"]=0.1,
["wpn_ak74m_cobra"]=0.1,
["wpn_ak74m_1p78"]=0.1,

["wpn_ak104"]=0.1,
["wpn_ak104_eotech"]=0.1,
["wpn_ak104_acog"]=0.1,
["wpn_ak104_mt"]=0.1,

["wpn_aek971"]=0.1,
["wpn_aek971_cobra"]=0.1,
["wpn_aek971_1p78"]=0.1,
["wpn_aek971_1pso"]=0.1,

["wpn_ak108"]=0.1,
["wpn_ak108_cobra"]=0.1,
["wpn_ak108_1p78"]=0.1,
["wpn_ak108_1pso"]=0.1,

["wpn_saiga12c_m2"]=0.1,
["wpn_saiga12c_m2_1pso"]=0.1,
["wpn_saiga12c_m2_1p78"]=0.1,
["wpn_saiga12c_m2_cobra"]=0.1,

["wpn_soc308"]=0.1,
["wpn_soc308_1pso"]=0.1,
["wpn_soc308_1p78"]=0.1,
["wpn_soc308_cobra"]=0.1,				   

["wpn_rpk74"]=0.1,
["wpn_rpk74_1p78"]=0.1,
["wpn_rpk74_cobra"]=0.1,
["wpn_rpk74_1pso"]=0.1,

["wpn_abakan"]=0.1,
["wpn_abakan_1pso"]=0.1,
["wpn_abakan_cobra"]=0.1,
["wpn_abakan_1p78"]=0.1,

["wpn_saiga12c"]=0.1,
["wpn_saiga12c_1p78"]=0.1,
["wpn_saiga12c_1pso"]=0.1,
["wpn_saiga12c_cobra"]=0.1,

["wpn_saiga12c_m1"]=0.1,
["wpn_saiga12c_m1_acog"]=0.1,
["wpn_saiga12c_m1_eotech"]=0.1,
["wpn_saiga12c_m1_mt"]=0.1,

["wpn_vintorez"]=0.08,
["wpn_vintorez_1pso"]=0.08,
["wpn_vintorez_cobra"]=0.08,
["wpn_vintorez_1p78"]=0.08,

["wpn_vintorez_m1"]=0.08,
["wpn_vintorez_m1_1pso"]=0.08,
["wpn_vintorez_m1_cobra"]=0.08,
["wpn_vintorez_m1_1p78"]=0.08,

["wpn_val"]=0.08,
["wpn_val_1pso"]=0.08,
["wpn_val_cobra"]=0.08,
["wpn_val_1p78"]=0.08,

["wpn_ak74_m1"]=0.1,
["wpn_ak74_m1_eotech"]=0.1,

["wpn_ak74_m2"]=0.1,
["wpn_ak74_m2_eotech"]=0.1,

["wpn_ak74_m3"]=0.1,
["wpn_ak74_m3_acog"]=0.1,
["wpn_ak74_m3_eotech"]=0.1,
["wpn_ak74_m3_mt"]=0.1,				   

["wpn_groza"]=0.1,
["wpn_groza_po"]=0.1,

["wpn_bizon"]=0.1,
["wpn_bizon_cobra"]=0.1,
["wpn_bizon_1p78"]=0.1,
["wpn_bizon_1pso"]=0.1,

["wpn_pp19"]=0.1,
["wpn_pp19_eotech"]=0.1,
["wpn_pp19_acog"]=0.1,

["wpn_ump45"]=0.1,
["wpn_ump45_acog"]=0.1,
["wpn_ump45_eotech"]=0.1,
["wpn_ump45_mt"]=0.1,

["wpn_lr300"]=0.1,
["wpn_lr300_eotech"]=0.1,
["wpn_lr300_acog"]=0.1,

["wpn_lr300_m1"]=0.1,
["wpn_lr300_m1_eotech"]=0.1,
["wpn_lr300_m1_acog"]=0.1,

["wpn_mp5"]=0.1,
["wpn_mp5_m1"]=0.1,

["wpn_sig550"]=0.1,
["wpn_sig550_acog"]=0.1,
["wpn_sig550_eotech"]=0.1,
["wpn_sig550_mt"]=0.1,

["wpn_g36"]=0.08,
["wpn_g36_g36l"]=0.08,

["wpn_g36c"]=0.08,
["wpn_g36c_eotech"]=0.08,
["wpn_g36c_acog"]=0.08,
["wpn_g36c_mt"]=0.08,

["wpn_m16a4"]=0.1,
["wpn_m16a4_acog"]=0.1,
["wpn_m16a4_eotech"]=0.1,
["wpn_m16a4_mt"]=0.1,

["wpn_fn2000"]=0.07,
["wpn_fn2000_eotech"]=0.07,
["wpn_fn2000_acog"]=0.07,
["wpn_fn2000_mt"]=0.07,

["wpn_gm94"]=0.05,

["wpn_rg6"]=0.05,

["wpn_rpg7"]=0.05,

["wpn_pkm"]=0.1,

["wpn_svd"]=0.08,
["wpn_svd_cobra"]=0.08,
["wpn_svd_1pso"]=0.08,
["wpn_svd_1p78"]=0.08,

["wpn_svu"]=0.08,
["wpn_svu_cobra"]=0.08,
["wpn_svu_1p78"]=0.08,
["wpn_svu_1pso"]=0.08,

["wpn_awm"]=0.05,
["wpn_awm_eotech"]=0.05,
["wpn_awm_acog"]=0.05,
["wpn_awm_mt"]=0.05,

["wpn_sv98"]=0.05,
["wpn_sv98_eotech"]=0.05,
["wpn_sv98_acog"]=0.05,
["wpn_sv98_mt"]=0.05,

["wpn_m110"]=0.08,
["wpn_m110_eotech"]=0.08,
["wpn_m110_acog"]=0.08,
["wpn_m110_mt"]=0.08,

["wpn_mr308"]=0.08,
["wpn_mr308_eotech"]=0.08,
["wpn_mr308_acog"]=0.08,
["wpn_mr308_mt"]=0.08,

["wpn_mosin"]=0.1,
["wpn_mosin_pe"]=0.1,

["wpn_toz34"]=0.1,

["wpn_toz34_m1"]=0.1,

["wpn_hunters_toz_new"]=0.1,

["wpn_bm16"]=0.1,

["wpn_bm16_full"]=0.1,

["wpn_spas12"]=0.1,

["wpn_spas12_m1"]=0.1,

["wpn_spas15"]=0.1,
["wpn_spas15_eotech"]=0.1,

["wpn_spas15_m1"]=0.1,
["wpn_spas15_m1_eotech"]=0.1,
				   
["wpn_wincheaster1300"]=0.1,

["wpn_winchester_m1"]=0.1,

["wpn_mp153"]=0.09,
["wpn_mp153_acog"]=0.09,
["wpn_mp153_eotech"]=0.09,
["wpn_mp153_mt"]=0.09,

["wpn_mp153_m1"]=0.09,

["wpn_flame"]=0.02,

["wpn_gauss"]=0.01,

["wpn_gauss_auto"]=0.01,

["wpn_knife"]=0.01,

["wpn_binoc"]=0.01
}
function repair_box_repair(obj)
	if obj then
		close_window()
		local actor=db.actor
		local slot_1=actor:item_in_slot(1)
		local slot_2=actor:item_in_slot(2)
		local armor=actor:item_in_slot(6)
		local sounds=lua_random(1,3)
		if obj and obj:section() == "repair_item_weapon" then
		level.add_cam_effector( "camera_effects\\item_use.anm", 9773, false, "" ) -- эффектор камеры
			if (slot_1 and slot_1:condition() >= 0.87 and slot_1:condition() < 0.985) or (slot_2 and slot_2:condition() >= 0.87 and slot_2:condition() < 0.985) then
				actor_hide_weapon()
			if (slot_1 and slot_1:condition() >= 0.87 and slot_1:condition() < 0.985) then
				rep_percent=wpn_proc[slot_1:section()] or 0.02
				local rep_point=slot_1:condition() + rep_percent
				if (rep_point>1) then rep_point=1 end
				slot_1:set_condition(rep_point)
				sound=repair_sound[1]..sounds
				snd_obj=xr_sound.get_safe_sound_object(sound)
				snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
				send_tip("Оружие немного приведено в порядок",nil,12,5,"g_g","no", "green")
			elseif (slot_2 and slot_2:condition() >= 0.87 and slot_2:condition() <0.985) then
				rep_percent = wpn_proc[slot_2:section()] or 0.02
				local rep_point = slot_2:condition() + rep_percent
				if (rep_point>1) then rep_point = 1 end
				slot_2:set_condition(rep_point)
				sound=repair_sound[2]..sounds
				snd_obj=xr_sound.get_safe_sound_object(sound)
				snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
				send_tip("Оружие немного подремонтировано", nil, 12, 5,"g_g","no", "green")
			end
			timers.start_timer("time_rep",13,"sak.restore_weap()")
			elseif (slot_1 and slot_1:condition() <0.87) or (slot_2 and slot_2:condition() <0.87) then
				send_tip("Слишком сильное повреждение оружия!",nil,2,5,"g_g","no", "red")
				misc.spawn_to(obj:section().."_feik", actor)
		else
			send_tip("Оружие не нуждается в починке!",nil,2,5,"g_g","no", "green")
			misc.spawn_to(obj:section().."_feik", actor)
		end 
			elseif obj and obj:section()=="repair_itemoutfit" then
			level.add_cam_effector( "camera_effects\\item_use.anm", 9773, false, "" ) -- эффектор камеры
			if armor then
				if strpos(armor:section(), "bandit_veteran_",1,true) or strpos(armor:section(), "bandit_master_",1,true) then
				send_tip("Для кожаного плаща не подходит!",nil,2,5,"g_g","no", "yellow")
				misc.spawn_to(obj:section().."_feik", actor)
			else
				rep_percent=outfit_proc[armor:section()] or 0.02
				if armor:condition() >=0.87 and armor:condition() <0.985 then
					actor_hide_weapon()
					vergas_masks.set_flag_minimap(false)
					local rep_point=armor:condition() + rep_percent
					if (rep_point>1) then rep_point=1 end
					amk_mod.repair_armor(rep_point)
					sound = repair_sound[3]..sounds
					snd_obj = xr_sound.get_safe_sound_object(sound)
					snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
					send_tip("Броня отремонтирована.",nil,12,5,"g_g","no", "green")
					schedule.add("tm_rep", "sak.return_mask()", 12500)
				elseif  armor:condition() <0.87 then
					send_tip("Слишком сильное повреждение брони!",nil,2,5,"g_g","no", "red")
					misc.spawn_to(obj:section().."_feik", actor)
				else
					send_tip("Броня не нуждается в починке!",nil,2,5,"g_g","no", "green")
					misc.spawn_to(obj:section().."_feik", actor)
				end
			end  
			else 
				send_tip("А что же ремонтировать то? Нечего!",nil,2,5,"g_g","no", "yellow")
				misc.spawn_to(obj:section().."_feik", actor)
			end
		end
		amk.remove_item(obj)
	end
end
function return_mask()
	vergas_masks.set_flag_minimap(true)
	restore_weap()
end

local rep_armor

function repair_on()
	local snd_obj
	local sounds=lua_random(1,3)
	local sound
	local slot=0
	local slot_obj
	local slot_1=db.actor:item_in_slot(1)
	local slot_2=db.actor:item_in_slot(2)
	local armor=db.actor:item_in_slot(6)
	local r_box_id=sak_inventory.eatable["repair_boxoutfit"][1]
	local rem={}
	local r_box = alife():object(r_box_id)
	local pk = get_netpk(r_box,1)
	local data = pk:get()
	local str=data.custom_data
	rem = vergas_lib.str_explode(",",str,true)
	local repiout=tonumber(rem[1]) or 0
	local repiweap=tonumber(rem[2]) or 0
	local tiski=nil
	local ltx=system_ini()
	local m="visual"
	for a,i in pairs(db.storage) do
		local objg=client_obj(a)
		if objg then
			if (objg and strpos(objg:name(),"_tiski_repair",1,true) and objg:position():distance_to(db.actor:position())<3 and objg:position():distance_to(db.actor:position())>0.9
				) then tiski=objg break
			end
		end
	end
	actor_hide_weapon()
	if tiski~=nil then
		if slot_1~=nil and slot_1:condition()<0.985 then
			slot=1
		end
			if slot_2~=nil and slot_2:condition()<0.985 then
				if slot==0 then
					slot=2
				elseif slot==1 then
				if slot_1:condition()>slot_2:condition() then
					slot=2
				end
			end
		end
		if armor~=nil and armor:condition()<0.985 then
			if slot==0 then
				slot=6
				elseif slot==1 then
				if slot_1:condition()>armor:condition() then
					slot=6
				end
				elseif slot==2 then
				if slot_2:condition()>armor:condition()then
					slot=6
				end
			end
		end
		if slot==1 then
			local a=slot_1:section()
			local vis=tostring(ltx:r_string(a,m))
			create_physic_object(vis,v3f(tiski:position().x-0.09,tiski:position().y+0.20,tiski:position().z),tiski:level_vertex_id(),tiski:game_vertex_id())
			sound=repair_sound[1]..sounds
			snd_obj=xr_sound.get_safe_sound_object(sound)
			snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
			slot_obj=slot_1:id()
			schedule.add("tm_rep", "sak.repair_tiski_do("..slot..","..slot_obj..","..r_box_id..","..repiout..","..repiweap..")", 12500)
		elseif slot==2 then
			local a=slot_2:section()
			local vis=tostring(ltx:r_string(a,m))
			create_physic_object(vis,v3f(tiski:position().x-0.09,tiski:position().y+0.20,tiski:position().z-0.1),tiski:level_vertex_id(),tiski:game_vertex_id())
			sound=repair_sound[2]..sounds
			snd_obj=xr_sound.get_safe_sound_object(sound)
			snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
			slot_obj=slot_2:id()
			schedule.add("tm_rep", "sak.repair_tiski_do("..slot..","..slot_obj..","..r_box_id..","..repiout..","..repiweap..")", 12500)
		elseif slot==6 then
			local a=armor:section()
			local vis=tostring(ltx:r_string(a,m))
			create_physic_object(vis,v3f(tiski:position().x,tiski:position().y+0.28,tiski:position().z),tiski:level_vertex_id(),tiski:game_vertex_id())
			sound=repair_sound[3]..sounds
			snd_obj=xr_sound.get_safe_sound_object(sound)
			snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
			slot_obj=armor:id()  
			vergas_masks.set_flag_minimap(false)      
			schedule.add("tm_rep", "sak.repair_tiski_do("..slot..","..slot_obj..","..r_box_id..","..repiout..","..repiweap..")", 12500)
			else
				send_tip("Нечего ремонтировать...",nil,2,5,"g_g","no", "sky_blue")
				restore_weap()
		end
			tiski=nil
			else send_tip("Неудобно работать! Нужно немного отойти...",nil,2,5,"g_g","no", "sky_blue")
			restore_weap()
	end
end
function repair_2_on()
	local snd_obj
	local sounds=lua_random(1,3)
	local sound
	local slot=0
	local slot_obj
	local slot_1=db.actor:item_in_slot(1)
	local slot_2=db.actor:item_in_slot(2)
	local armor=db.actor:item_in_slot(6)
	local r_box_id=sak_inventory.eatable["repair_boxoutfit"][1]
	local rem={}
	local r_box = alife():object(r_box_id)
	local pk = get_netpk(r_box,1)
	local data = pk:get()
	local str=data.custom_data
	rem = vergas_lib.str_explode(",",str,true)
	local repiout=tonumber(rem[1]) or 0
	local repiweap=tonumber(rem[2]) or 0
	local tiski=nil
	local ltx=system_ini()
	local m="visual"
	for a,i in pairs(db.storage) do
		local objg=client_obj(a)
		if objg then
			if (objg and strpos(objg:name(),"_tiski_repair",1,true) and objg:position():distance_to(db.actor:position())<3 and objg:position():distance_to(db.actor:position())>0.9
			) then tiski=objg break
			end
		end
	end
	actor_hide_weapon()
	if tiski~=nil then
		if slot_1~=nil and slot_1:condition()<0.985 then
			slot=1
		end
		if slot_2~=nil and slot_2:condition()<0.985 then
			if slot==0 then
				slot=2
			elseif slot==1 then
			if slot_1:condition()>slot_2:condition() then
				slot=2
			end
		end
    end
    if armor~=nil and armor:condition()<0.985 then
		if slot==0 then
				slot=6
		elseif slot==1 then
			if slot_1:condition()>armor:condition() then
				slot=6
			end
		elseif slot==2 then
			if slot_2:condition()>armor:condition()then
				slot=6
			end
		end
    end
    if slot==1 then
		local a=slot_1:section()
		local vis=tostring(ltx:r_string(a,m))
		create_physic_object(vis,v3f(tiski:position().x+0.09,tiski:position().y+0.20,tiski:position().z),tiski:level_vertex_id(),tiski:game_vertex_id())
		sound=repair_sound[1]..sounds
		snd_obj=xr_sound.get_safe_sound_object(sound)
		snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
		slot_obj=slot_1:id()
		schedule.add("tm_rep", "sak.repair_tiski_do("..slot..","..slot_obj..","..r_box_id..","..repiout..","..repiweap..")", 12500)
	elseif slot==2 then
		local a=slot_2:section()
		local vis=tostring(ltx:r_string(a,m))
		create_physic_object(vis,v3f(tiski:position().x+0.09,tiski:position().y+0.20,tiski:position().z-0.1),tiski:level_vertex_id(),tiski:game_vertex_id())
		sound=repair_sound[2]..sounds
		snd_obj=xr_sound.get_safe_sound_object(sound)
		snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
		slot_obj=slot_2:id()
		schedule.add("tm_rep", "sak.repair_tiski_do("..slot..","..slot_obj..","..r_box_id..","..repiout..","..repiweap..")", 12500)
    elseif slot==6 then
		local a=armor:section()
		local vis=tostring(ltx:r_string(a,m))
		create_physic_object(vis,v3f(tiski:position().x,tiski:position().y+0.28,tiski:position().z),tiski:level_vertex_id(),tiski:game_vertex_id())
		sound=repair_sound[3]..sounds
		snd_obj=xr_sound.get_safe_sound_object(sound)
		snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
		slot_obj=armor:id()
		vergas_masks.set_flag_minimap(false)
		schedule.add("tm_rep", "sak.repair_tiski_do("..slot..","..slot_obj..","..r_box_id..","..repiout..","..repiweap..")", 12500)
			else
		send_tip("Нечего ремонтировать...",nil,0,5,"g_g","no", "sky_blue")
		restore_weap()
		end
		tiski=nil
			else send_tip("Неудобно работать! Нужно немного отойти...",nil,2,5,"g_g","no", "sky_blue")
	restore_weap()
	end
end

function repair_tiski_do(slot,slot_obj_id,r_box_id,repiout,repiweap)
	local slot_obj=client_obj(slot_obj_id)
	if slot_obj:condition()<0.985 then
		if slot==1 then
			if repiweap~=0 then
				if slot_obj:condition() >=0.75 then
					rep_percent_tiski=(wpn_proc[slot_obj:section()] or 0.02)*1.5
					local rep_point=slot_obj:condition() + rep_percent_tiski
					if rep_point>1 then
						rep_point=1
					end
					slot_obj:set_condition(rep_point)
					send_tip("Оружие отремонтировано",nil,2,5,"g_g","no", "green")
					repiweap=repiweap-1
				else
					send_tip("Оружие слишком повреждено",nil,2,5,"g_g","no", "red")
				end
			else
			send_tip("Нет комплекта для ремонта оружия",nil,2,5,"g_g","no", "red")
		end
		elseif slot==2 then
			if repiweap~=0 then
				if slot_obj:condition() >=0.75 then
				rep_percent_tiski=(wpn_proc[slot_obj:section()] or 0.02)*1.5
				local rep_point=slot_obj:condition() + rep_percent_tiski
					if (rep_point>1) then
						rep_point=1
					end
					slot_obj:set_condition(rep_point)
					send_tip("Оружие отремонтировано",nil,2,5,"g_g","no", "green")
					repiweap=repiweap-1
				else
					send_tip("Оружие слишком повреждено",nil,2,5,"g_g","no", "red")
				end
			else
				send_tip("Нет комплекта для ремонта оружия",nil,2,5,"g_g","no", "red")
			end
		elseif slot==6 then
			if repiout~=0 then
				if strpos(slot_obj:section(), "bandit_veteran_",1,true) or strpos(slot_obj:section(), "bandit_master_",1,true) then
				send_tip("Для кожаного плаща не подходит!",nil,2,5,"g_g","no", "yellow")
			else
			if slot_obj:condition() >=0.75 then
				rep_percent_tiski=(outfit_proc[slot_obj:section()] or 0.02)*1.5
				local rep_point=slot_obj:condition() + rep_percent_tiski
				if (rep_point>1) then
					rep_point=1
				end
				amk_mod.repair_armor(rep_point)
				send_tip("Ну вот, подлатали...",nil,2,5,"g_g","no", "green")
				repiout=repiout-1
				else
					send_tip("Слишком повреждён костюмчик-то",nil,2,5,"g_g","no", "red")
			end
        end
		else
		send_tip("Нет комплекта для ремонта",nil,2,5,"g_g","no", "red")
		end
		vergas_masks.set_flag_minimap(true)
    end
	else
		send_tip("Вроде всё нормально...",nil,2,5,"g_g","no", "sky_blue")
	end
	local r_box = alife():object(r_box_id)
	local pk = get_netpk(r_box,1)
	local data = pk:get()
	data.object_flags = bit_not(5)
	data.custom_data = repiout..","..repiweap
	pk:set(data)
	misc.release_obj(rep_armor, 'sak.script:2475')
	rep_armor=nil
	restore_weap()
end
function repair_tiski_use()

end
function create_physic_object(p_visual,p_position,p_lvertex_id,p_gvertex_id)
	local obj=misc.spawn_obj("physic_object", p_position)
	if obj then
		local pk = get_netpk(obj,1)
		local data = pk:get()
		data.visual_name = p_visual
		data.physic_type=3
		pk:set(data)    
	end
	rep_armor=obj.id
end

function add_2repair_item_weapon()
	create_items(db.actor,"repair_item_weapon_feik", 2)
end
function add_3repair_item_weapon()
	create_items(db.actor,"repair_item_weapon_feik", 3)
end
function add_4repair_item_weapon()
	create_items(db.actor,"repair_item_weapon_feik", 4)
end
function add_5repair_item_weapon()
	create_items(db.actor,"repair_item_weapon_feik", 5)
end
function add_2repair_itemoutfit()
	create_items(db.actor,"repair_itemoutfit_feik", 2)
end
function add_3repair_itemoutfit()
	create_items(db.actor,"repair_itemoutfit_feik", 3)
end
function add_4repair_itemoutfit()
	create_items(db.actor,"repair_itemoutfit_feik", 4)
end
function add_5repair_itemoutfit()
	create_items(db.actor,"repair_itemoutfit_feik", 5)
end

function have_2_repair_item_weapon()
	return have_n_repair_item_weapon(2)
end
function give_2_repair_item_weapon()
	give_n_repair_item_weapon(2)
end
function have_3_repair_item_weapon()
	return have_n_repair_item_weapon(3)
end
function give_3_repair_item_weapon()
	give_n_repair_item_weapon(3)
end
function have_4_repair_item_weapon()
	return have_n_repair_item_weapon(4)
end
function give_4_repair_item_weapon()
	give_n_repair_item_weapon(4)
end
function have_n_repair_item_weapon(n)
	local repiweap=0
	if sak_inventory.rucksack["repair_item_weapon_feik"] then
		repiweap=#sak_inventory.rucksack["repair_item_weapon_feik"]
	end
	if sak_inventory.eatable["repair_boxoutfit"] then
		for a=1,#sak_inventory.eatable["repair_boxoutfit"] do
			local repbox_id=sak_inventory.eatable["repair_boxoutfit"][a]
			local rem={}
			local sobj = alife():object(repbox_id)
			local pk = get_netpk(sobj,1)
			local data = pk:get()
			local str=data.custom_data
			rem = vergas_lib.str_explode(",",str,true)
			local weap=tonumber(rem[2]) or 0
			repiweap=repiweap+weap
		end
	end
	return repiweap >=n
end
function give_n_repair_item_weapon(n)
	local repiwp=n
	if sak_inventory.rucksack["repair_item_weapon_feik"] then
		for a=1,#sak_inventory.rucksack["repair_item_weapon_feik"] do
			local id=sak_inventory.rucksack["repair_item_weapon_feik"][a]
			local obj= g_sim:object(id)
			if obj then
				misc.release_obj(obj, 'sak.script:2680')
				repiwp=repiwp-1
			end
			if repiwp==0 then break end
		end
		sak_inventory.need_update_inventory()
		if repiwp==0 then 
			relocate_item(db.actor, "out", "repair_item_weapon", n)
			return
		end
	end
	local repbox_id=sak_inventory.eatable["repair_boxoutfit"][1]
	local rem={}
	local sobj = alife():object(repbox_id)
	local pk = get_netpk(sobj,1)
	local data = pk:get()
	local str=data.custom_data
	rem = vergas_lib.str_explode(",",str,true)
	local repiout=tonumber(rem[1]) or 0
	local repiweap=tonumber(rem[2]) or 0
	repiweap=repiweap - repiwp
	data.custom_data = repiout..","..repiweap
	pk:set(data)
	relocate_item(db.actor, "out", "repair_item_weapon", n)
end
function add_repair_itemoutfit()
	create_items(db.actor,"repair_itemoutfit_feik", 1)
end
function add_repair_item_weapon()
	create_items(db.actor,"repair_item_weapon_feik", 1)
end
function have_1_repair_itemoutfit()
	return have_n_repair_itemoutfit(1)
end
function give_1_repair_itemoutfit()
	give_n_repair_itemoutfit(1)
end
function have_2_repair_itemoutfit()
	return have_n_repair_itemoutfit(2)
end
function give_2_repair_itemoutfit()
	give_n_repair_itemoutfit(2)
end
function have_3_repair_itemoutfit()
	return have_n_repair_itemoutfit(3)
end
function give_3_repair_itemoutfit()
	give_n_repair_itemoutfit(3)
end
function have_4_repair_itemoutfit()
	return have_n_repair_itemoutfit(4)
end
function give_4_repair_itemoutfit()
	give_n_repair_itemoutfit(4)
end
function have_n_repair_itemoutfit(n)
	local repiweap=0
	if sak_inventory.rucksack["repair_itemoutfit_feik"] then
		repiweap=#sak_inventory.rucksack["repair_itemoutfit_feik"]
	end
	if sak_inventory.eatable["repair_boxoutfit"] then
		for a=1,#sak_inventory.eatable["repair_boxoutfit"] do
			local repbox_id=sak_inventory.eatable["repair_boxoutfit"][a]
			local rem={}
			local sobj = alife():object(repbox_id)
			local pk = get_netpk(sobj,1)
			local data = pk:get()
			local str=data.custom_data
			rem = vergas_lib.str_explode(",",str,true)
			local weap=tonumber(rem[1]) or 0
			repiweap=repiweap+weap
		end
	end
	return repiweap >=n
end
function give_n_repair_itemoutfit(n)
	local repiwp=n
	if sak_inventory.rucksack["repair_itemoutfit_feik"] then
		for a=1,#sak_inventory.rucksack["repair_itemoutfit_feik"] do
			local id=sak_inventory.rucksack["repair_itemoutfit_feik"][a]
			local obj= g_sim:object(id)
			if obj then
				misc.release_obj(obj, 'sak.script:2842')
				repiwp=repiwp-1
			end
			if repiwp==0 then break end
		end
		sak_inventory.need_update_inventory()
		if repiwp==0 then 
			relocate_item(db.actor, "out", "repair_itemoutfit", n)
			return
		end
	end
	local repbox_id=sak_inventory.eatable["repair_boxoutfit"][1]
	local rem={}
	local sobj = alife():object(repbox_id)
	local pk = get_netpk(sobj,1)
	local data = pk:get()
	local str=data.custom_data
	rem = vergas_lib.str_explode(",",str,true)
	local repiout=tonumber(rem[1]) or 0
	local repiweap=tonumber(rem[2]) or 0
	repiout=repiout - repiwp
	data.custom_data = repiout..","..repiweap
	pk:set(data)
	relocate_item(db.actor, "out", "repair_itemoutfit", n)
end
function add_repair_box()
	--amk.spawn_item("repair_boxoutfit",v3f(301.11,13.31,276.43),246,565356)
end
function btr_looks()
	local snd_obj
	local sound="scripts\\matches_no_light_2"
	snd_obj=xr_sound.get_safe_sound_object(sound)
	snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
	level.add_pp_effector("black_q.ppe", 1234, true)
	actor_hide_weapon()
end
function add_black_box()
	local dir=device().cam_dir
	local coor_x=-dir.x
	local coor_y=dir.y
	local coor_z=-dir.z
	params.set_direction(coor_x,coor_y,coor_z)
	create_items(db.actor,"agr_black_box",1)
	restore_weap()
	level.add_pp_effector("black_q.ppe", 1234, false)
end
koster_sound = {"scripts\\matches_", "scripts\\matches_no_light_" }
matches_delays = { 3500, 4000, 4600 }

function scratch_match_sound(sidx)
	-- воспроизвести звук чирканья спичкой о коробок и вернуть задержку времени зажигания спички
	if sidx == nil then 
		sidx = lua_random(1, 3)
	end    
	misc.easy_sound (koster_sound[1]..sidx)
		return 
	matches_delays[sidx]
end

function koster_on()
	local itm = bag_on_belt_use.get_matches() or bag_on_belt_use.load_matches()
	-- попытка запалить кострище
	if params.matches_flame > 0 then 
		return 
	end 
	if not itm then 
		return 
	end
	wprintf(" matches exists, trying ignite!")
	db.actor:eat (itm) 
	bag_on_belt_use.unload_matches()
	local delay = scratch_match_sound()    
	actor_hide_weapon() 
	schedule.add ("ignite_campfire", "campmgr.try_ignite()", delay)    
end

function koster_yes() 
 
end

function candle_on()
	-- попытка засветить лампаду 
	if (params.matches_flame > 0) or (savemgmt.candle_id > 0) then
		return
	end
	local itm = bag_on_belt_use.get_matches() or bag_on_belt_use.load_matches()
	if not itm then
		return
	end  
	db.actor:eat (itm)    
	bag_on_belt_use.unload_matches() 
	actor_hide_weapon()
	local delay = scratch_match_sound()
	schedule.add ("ignite_candle", "sak.ignite_candle()", delay)   
	schedule.add ("restor_wpn",    "sak.restore_weap()", delay + 2500)           
end

sak.candle_on = candle_on

function candle_yes()
end

function ignite_candle()
	local rend = lua_random(2)
	if rend == 1 then
		schedule.add ("matches_flame", "params.spawn_matches_flame(1000)", 50)              

		local apos = db.actor:position()
		for a,i in pairs(db.storage) do
			local candle = client_obj(a)            
			if candle then
                local pos = candle:position()
				if strpos(candle:name(), "_candle_", 1, true) and (pos:distance_to(apos) < 2.3) then                    
					savemgmt.candle_id = candle:id()
                    schedule.add ("candle_flame", "savemgmt.enable_candle_flame()", 200)
					break
				end
			end
		end
	else
		savemgmt.candle_id = -1
		schedule.add ("matches_flame", "params.spawn_matches_flame(500)", 50)
		schedule.add ("actor_grumble", "sak.actor_grumble()", 1000)        
	end  
end

function actor_grumble()
	local sidx = lua_random(1, 3)
	if sidx <= 3 then
		local snd_name = sprintf ('%s%d', sak.koster_sound[2], sidx)
		misc.easy_sound (snd_name)
	end  
end

sak.actor_grumble = actor_grumble
sak.ignite_candle = ignite_candle

local rad_pribor_sound={
"ambient\\special\\device_hum_",
"scripts\\matches_no_light_"
}

function labx10_ventil()
	local sound="scripts\\ventil_sound"
	snd_obj=xr_sound.get_safe_sound_object(sound)
	snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
	actor_hide_weapon()
	if not has_alife_info("supply_x10_on") then
		send_tip("Похоже, заработали какие-то механизмы и, судя по звуку, где-то открылась дверь","Что за шум? Надо проверить", 15, 10, "g_g", "sak", "green")
		misc.release_by_name("gar_sign_stop_blokpost")
	end
end
function labx10_button5()
	send_tip("Дело сделано, можно валить отсюда","Резервный источник питания включен", 7, 10, "g_g", "sak", "green")
end
function labx8_pribor_on()
	local snd_obj
	local sounds=lua_random(1,3)
	local modul=db.actor:object("memory_module")
	if modul then
		local sound=rad_pribor_sound[1]..sounds
		snd_obj=xr_sound.get_safe_sound_object(sound)
		snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
		misc.release_obj(modul:id(), 'sak.script:3518')
		actor_hide_weapon()
	end  
end
function labx8_pribor1_yes()
	restore_weap()
	local sobj=level_object_by_sid(8151)
	sobj:get_hanging_lamp():turn_off()
	local sobj=level_object_by_sid(8156)
	sobj:get_hanging_lamp():turn_on()
	db.actor:give_info_portion("labx8_pribor1_on")
end
function labx8_pribor2_yes()
	restore_weap()
	local sobj=level_object_by_sid(8152)
	sobj:get_hanging_lamp():turn_off()
	local sobj=level_object_by_sid(8157)
	sobj:get_hanging_lamp():turn_on()
	db.actor:give_info_portion("labx8_pribor2_on")
end
function labx8_pribor3_yes()
	restore_weap()
	-- local sobj=level_object_by_sid(8153)
	-- sobj:get_hanging_lamp():turn_off()
	misc.release_by_name("labx8_lamp_pribor13")
	local sobj=level_object_by_sid(8158)
	sobj:get_hanging_lamp():turn_on()
	db.actor:give_info_portion("labx8_pribor3_on")
end
function labx8_pribor4_yes()
	restore_weap()
	--local sobj=level_object_by_sid(8154)
	--sobj:get_hanging_lamp():turn_off()
	misc.release_by_name("labx8_lamp_pribor14")
	local sobj=level_object_by_sid(8159)
	sobj:get_hanging_lamp():turn_on()
	db.actor:give_info_portion("labx8_pribor4_on")
end
function labx8_pribor5_yes()
	restore_weap()
	local sobj=level_object_by_sid(8155)
	sobj:get_hanging_lamp():turn_off()
	local sobj=level_object_by_sid(8160)
	sobj:get_hanging_lamp():turn_on()
	db.actor:give_info_portion("labx8_pribor5_on")
end
function rad_pribor_on()
	local snd_obj
	local sounds=lua_random(1,3)
	local akk=db.actor:object("item_battery_03")
	if akk then
		local sound=rad_pribor_sound[1]..sounds
		snd_obj=xr_sound.get_safe_sound_object(sound)
		snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
		misc.release_obj(akk:id(), 'sak.script:2974')
	end
	actor_hide_weapon()
end
function rad_pribor1_yes()
	local sobj=level_object_by_sid(6152)
	sobj:get_hanging_lamp():turn_on()
	db.actor:give_info_portion("radar_pribor1_on")
	timers.start_timer("rad_pribor3_on",0,0,28,"sak.rad_pribor1_ready()")
	restore_weap()
	if lua_random()>0.75 then 
		return 
	end
	sak_spawn.rad_zombi_exit_mil()  
end
function rad_pribor2_yes()
	local sobj=level_object_by_sid(6153)
	sobj:get_hanging_lamp():turn_on()
	db.actor:give_info_portion("radar_pribor2_on")
	timers.start_timer("rad_pribor3_on",0,0,28,"sak.rad_pribor2_ready()")
	restore_weap()
end
-- доспавн зомби при начале замеров, вход в х12
function rad_pribor3_yes()
	local sobj=level_object_by_sid(6154)
	sobj:get_hanging_lamp():turn_on()
	db.actor:give_info_portion("radar_pribor3_on")
	timers.start_timer("rad_pribor3_on",0,0,28,"sak.rad_pribor3_ready()")
	restore_weap()
	if lua_random()>0.75 then 
		return 
	end
	sak_spawn.rad_zombied_pribor3()
end
function rad_pribor1_ready()
	db.actor:give_info_portion("rad_pribor1_ready")
end
function rad_pribor2_ready()
	db.actor:give_info_portion("rad_pribor2_ready")
end
function rad_pribor3_ready()
	db.actor:give_info_portion("rad_pribor3_ready")
end
function rad_pribor_cart_on()
	create_items(db.actor, "rad_cart",1)
	restore_weap()
end
function add_aver_cart()
	create_items(db.actor, "aver_cart",1)
	restore_weap()
end
function add_marsh_cart()
	create_items(db.actor, "marsh_cart",1)
	restore_weap()
end
function add_red_cart()
	create_items(db.actor, "red_cart",1)
	restore_weap()
end
function mar_corps_done()
	if level_object_by_sid(9552)==nil and level_object_by_sid(9553)==nil and level_object_by_sid(9554)==nil then 
		return true
	end
end
  local mar_rand=lua_random(100)
  local mar_prize=0
function mar_factory_leader_prize()
	if mar_rand>mar_prize then return true end
end
function mar_factory_leader_no_prize()
	if mar_rand<=mar_prize then return true end
end
function add_medkit()
	create_items(db.actor, "medkit",1)
end
function proba()
	local b=nlc_vars.proba or 0
	if b==2 then 
		return true
	end
end
function mongol_good_have()
	timers.start_timer("mongol_good",0,0,35,"sak.set_community()")
end
function set_community()
	local act=db.actor
	if not act:has_info("mongol_umer") and not act:has_info("val_bandit_talk") then
		local lname=level.name()
		if lname=="l04_darkvalley" then
			act:set_character_community("stranger",0,0)
		end
		act:give_info_portion("val_bandit_talk")
		send_tip("Короче, если чё - подваливай. Пахан согласен.","Типку с корявой рожей",11,20,"death","sak", "red")
	end
end
function red_community()
	db.actor:set_character_community("stranger",0,0)
end
function set_community_actor()
	db.actor:set_character_community("actor",0,0)
end
  local flag_drink=true
function drinked_vodka()
	return not flag_drink
end
function not_drinked_vodka()
	return flag_drink
end
function hanter_vodka()
	flag_drink=false
end
function drink_vodka()
	db.actor:eat(db.actor:object("vodka"))
	eat_vodka()
	sak_dialog.up_repa(5)
	sleep_manager.add_sleepiness(10)
end

function eat_vodka()
	local snd_obj
	snd_obj=xr_sound.get_safe_sound_object([[scripts\inv_vodka]])
	snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
end
local rand_tres=lua_random(1,12)
function take_trasure(npc, npc1)
	local npc_id=npc:id()
	local npc_id_treas=ReadIni(db.stor_ltx,"stor","npc_"..npc_id)
	if npc_id_treas and npc_id_treas~="" then
			treasure_manager.get_treasure_manager():give_treasure(npc_id_treas)
			rand_tres=rand_tres+1
		else
			treasure_manager.get_treasure_manager():dialog(npc,true)
			rand_tres=rand_tres+1
	end
end
function have_trasure(first_speaker, second_speaker)
	local randd,randh,randm=level.get_time_days(),level.get_time_hours(),level.get_time_minutes()
	local rand=randh+randd
	while rand>23 do 
		rand=rand-24
	end
	for  i=0,1 do
		if (rand==(i*12+rand_tres)) and randm>randh then
			return db.actor:give_info_portion("have_sak_treasure")  
		end 
	end
	return db.actor:give_info_portion("havent_sak_treasure")
end
function zombie_checkup()
	if db.actor~=nil then
		if lua_random()>0.8 then
			local a=lua_random()
			local h=hit()
			h.draftsman=db.actor
			h:bone("bip01_spine")
			h.type=hit.telepatic
			h.power=0.04+a/5
			h.impulse=1.0
			db.actor:hit(h)
			h.type=hit.strike
			db.actor:hit(h)
			h.type=hit.radiation
			db.actor:hit(h)
			level.add_pp_effector("alcohol.ppe", 100, false)
			local rnd=lua_random(1,6)
			local snd_obj
			if rnd==1 then
				snd_obj=  xr_sound.get_safe_sound_object([[characters_voice\human_01\stalker\fight\hit\hit_1]])
			elseif rnd==2 then
				snd_obj=  xr_sound.get_safe_sound_object([[characters_voice\human_01\stalker\fight\hit\hit_2]])
			elseif rnd==3 then
				snd_obj=  xr_sound.get_safe_sound_object([[characters_voice\human_01\stalker\fight\hit\hit_3]])
			elseif rnd==4 then
				snd_obj=  xr_sound.get_safe_sound_object([[characters_voice\human_01\stalker\fight\hit\hit_6]])
			elseif rnd==5 then
				snd_obj=  xr_sound.get_safe_sound_object([[characters_voice\human_01\stalker\fight\hit\hit_7]])
			elseif rnd==6 then
				snd_obj=  xr_sound.get_safe_sound_object([[characters_voice\human_01\stalker\fight\hit\hit_8]])
			end
			snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
		end
	end
end
function eff_vodka()
	if db.actor~=nil then
		local a=lua_random()
		local h=hit()
		h.draftsman=db.actor
		h:bone("bip01_spine")
		h.type=hit.telepatic
		h.power=0.04+a/5
		h.impulse=0.2
		db.actor:hit(h)
	end 

end
function add_yan_izm_spots(sid)
	local obj= g_sim:story_object(sid)
	if obj then
		amk.add_spot_on_map(obj.id, "crlc_small", "yan_izm_spot")
	end
end
function add_rad_izm_spots(sid)
  local obj= g_sim:story_object(sid)
	local spot=lua_random(1,4)
	if obj then
		amk.add_spot_on_map(obj.id, "crlc_big_treasure"..spot, "rad_izm_spot")
	end
end
function remove_rad_izm_spots(sid)
	local obj= g_sim:story_object(sid)
	for spot=1,4 do
		amk.remove_spot_from_map(obj.id, "crlc_big_treasure"..spot)
	end
end

function add_klyk_med_spots(sid)
	local obj= g_sim:story_object(sid)
	if obj then
		amk.add_spot_on_map(obj.id, "crlc_small", "agr_klyk_med_spot1")
	end
end
function remove_klyk_med_spots(sid)
	local obj= g_sim:story_object(sid)
	if obj then
		amk.remove_spot_from_map(obj.id, "crlc_small")
		-- misc.release_obj(obj)
	end
end
function save_gg_community()
	local gg_community=db.actor:character_community()
	if level.name()~="l04_darkvalley" then
		amk_vars.gg_community = gg_community
	end
	--allcore_mayatniks.on_actor_save()
end
  local chiter=false
function return_community()
	local gg_community=(amk_vars.gg_community or "actor")
	db.actor:set_character_community(gg_community, 0, 0)
end
function amb_clear()
	if level and level.name() and level.name()~="" then
		local lname=level.name()
		if const.underground(lname) then
			get_command("r2_sun_lumscale_amb 0.1")
		end
	end
end
function vokodav_vis_new()
	local obj= g_sim:story_object(story_ids.volkodav)
	if obj then
		local pk = get_netpk(obj,1)
		local data = pk:get()
		data.visual_name = "actors\\killer\\stalker_ki_nauchniy"
		pk:set(data)
	end
end
function bes_seryi_vis_new()
	local act=db.actor
	if act:has_info("deactivate_radar_fall") then return end
	local obj= g_sim:story_object(story_ids.gar_seryi)
	if obj then
		local pk = get_netpk(obj,1)
		local data = pk:get()
		data.custom_data = "[smart_terrains]\nsak_lager = {-deactivate_radar_fall}\nrad_stalkers_lager = {+deactivate_radar_fall}"
		data.visual_name = "actors\\neytral\\stalker_neytral_nauchniy"
		pk:set(data)
		obj:set_rank(790)
	end
	obj= g_sim:story_object(story_ids.gar_hellcar)
	if obj then
		local pk = get_netpk(obj,1)
		local data = pk:get()
		data.custom_data = "[smart_terrains]\nsak_lager = {-deactivate_radar_fall}\nrad_stalkers_lager = {+deactivate_radar_fall}"
		data.visual_name = "actors\\neytral\\stalker_neytral_exoskeleton"
		pk:set(data)
		obj:set_rank(755)
	end
	act:give_info_portion("deactivate_radar_fall")
end

function timer_dead_prizrak()
	timers.start_timer("dead_prizrak",2,10,19,"sak.dead_prizrak_info()")
end
function dead_prizrak_info()
	send_tip("Это Бармен. Меченный, есть для тебя важное дело. Заходи","Сообщение для Меченного",11,20,"barman","sak","red")
	--db.actor:give_info_portion("dead_prizrak_barmen_info")
end

function agr_krot_cleanup()
	schedule.add("agr_krot_cleanup","sak.agr_krot_do_cleanup()",5000)
end
function agr_krot_do_cleanup()
	misc.release_by_name("agr_factory_location")
	misc.release_by_name("agr_krot_combat_trigger")
	misc.release_by_name("agr_krot_help_trigger")
end

function compile_rules(rules)
	local result = {}
	for key, val in pairs(rules) do
		local t = type(val)
		local code = "" -- function body
		if t == "boolean" then 
				code = "return "..tostring(val).." end"  
			elseif t == "string" then
				code = "return "..val.." end"      
		end  
		local f = loadstring("return function(obj, actor) "..code)() -- компиляция функции в чанк
			result[key] = f
	end -- for
		return result
end

function check_rules(rules, obj, actor, nname)
	for key, func in pairs(rules) do
		if strposx(nname, key) then
			return func(obj, actor)         
		end -- if strposx
	end -- for                
	-- universal rule test
	local func = rules['any_name']
	if func then
		return func(obj, actor)
	end

		return false
end

local s_tbl = {
		marsh = true,
		lost_village = true,
		l01_escape = true,
		l02_garbage = true,
		hospital = true,
		l03_agroprom = true,
		l04_darkvalley = true,
		k01_darkscape = true,
		l05_bar = true,
		l06_rostok = true,
		l08_yantar = true,
		aver = true,
		l07_military = true,
		generators = true,
		red_forest = true,
		limansk = true,
		deadcity = true,
		l10_radar = true,
		l11_pripyat = true,
		l12_stancia_new = true
		}

function add_tail()
	wprintf('~CF0[~T/~U/~B]. #PERF: sak.add_tail begin~C07');
	local actor=db.actor
	local lname=level.name()
	local tip=level_trees[lname]
  
	local sname=(amk_vars.level_on_save or "")
    
	nlc_vars.prev_level   = sname -- для дополнительного детектирования переходов
	nlc_vars.curr_level   = lname  
    
	if tip~=0 then
		texman.swap_trees(tip) 
	end
  
	tip = level_stons[lname]
	if tip~=0 then 
		texman.swap_stons(tip) 
	end
	if lname=="l01_escape" then
		texman.swap_briks("esc_") 
		local day=level.get_time_days()
		if math.fmod(day,8)==0 then
			texman.swap_sid_plakat("s")
		elseif math.fmod(day,9)==0 then
			texman.swap_sid_plakat("k")
		end
	end
  
	local gg_community=(amk_vars.gg_community or "actor")
	torch_id_norm()
	if lname=="l04_darkvalley" then
		local obj= g_sim:story_object(story_ids.val_lager_borov)
		if obj and obj:alive() then
			if (actor:has_info("val_bandit_talk") or actor:has_info("borov_has_good")) and not actor:has_info("actor_enemy_for_bandit") then
				actor:set_character_community("stranger", 0, 0)
				misc.release_by_name("val_bandits_enemy_zone",'sak.script:4541')
			end
		else
			actor:set_character_community(gg_community, 0, 0)
		end
	elseif lname~="red_forest" then
		actor:set_character_community(gg_community, 0, 0)
	end
 
	local drawn_thing = "obj.parent_id and obj.parent_id==0"
	local remove_rules = {
						minigame_thimble = true, fear_sound_item = true, fall_object = true,
						dollars = drawn_thing, ammo_flame = drawn_thing, soldier_letter_ = drawn_thing,
						closer_                              = "obj.parent_id==nil or obj.parent_id==BAD_OBJ_ID",
						yan_zone_zharka_static_average_01    = "actor:has_info('yan_labx16_switcher_primary_off')",
						sak_document2                        = "actor:has_info('escape_lager_volk_document_done')",     
						esc_suicidal_flash_restrictor        = "actor:has_info('escape_lager_volk_document_done')",                
						space_restrictor_vagonchik           = "actor:has_info('esc_killers_raid')",     
						esc_exit_bandit_                     = "actor:has_info('gar_start_quest')",
						bar_ambush_killer_                   = "actor:has_info('sak_ros_merk_out')",
						dt_merc_baze                         = "actor:has_info('sak_ros_merk_out')",
						any_name                             = "obj.m_game_vertex_id==nil or obj.m_game_vertex_id==BAD_OBJ_ID" 
						}

    remove_rules = compile_rules(remove_rules)
	
	local gen_teleport,aver_teleport,prip_teleport=0,0,0
	for a=1,BAD_OBJ_ID,1 do
		local obj= g_sim:object(a)
		if obj then    
			local nname=obj:name()
			local o_sid=obj.m_story_id
			if strpos(nname,"amk_zone_teleport_labirint",1,true) then
				gen_teleport=1
			elseif strpos(nname,"amk_zone_teleport_aver_labirint",1,true) then
				aver_teleport=1
			elseif strpos(nname,"amk_zone_teleport_prip_labirint",1,true) then
				prip_teleport=1			 
			elseif strpos(nname,"flask_army",1,true) then
				vergas_flask.take_flask_army(obj,a)
			elseif (obj:section_name()=="device_torch" and obj.parent_id~=0) then
				torch_npc_brock(a)
			elseif (check_rules(remove_rules, obj, actor, nname)                     
				or (strpos(obj:section_name(),"^rat_") and not obj:alive())
				or (actor:has_info("deactivate_radar_fall") 
				and str_in_tab(lname, { "l05_bar", "labx8", "warlab", "l10_radar" }) == nil
				and str_in_tab(nname, { "bar_stalker_off_", "gar_dolg_blokpost_", "_tramplin_", "val_lager_bandit", "val_bandit_", "val_sacrifice_guard2", "val_lager_bodyguard1", "bar_flame_off_", "bar_bar_visitor_hunter", "bar_bar_guard", "square_1_guard","bar_dolg_bunker_" })
				)
				or ((obj.level_id ~= nil) and (lname == obj._level_name) and const.ground_levels[lname] and obj.m_level_vertex_id > const.level_vertices[lname] and not strposx(nname, "single_player"))
				or (nname=="device_pda" and obj.parent_id~=0)
				) 
				then
					--ODS("[~T]. #DBG: удаляем объект ~C0A"..nname.."  "..a.. "~C07")
					misc.release_obj(obj, 'sak.script->add_tail')	
			elseif IsStalker(obj) and obj.alive and obj:alive() and obj.m_game_vertex_id and obj:community()~="zombied" and 
				( o_sid==NONE_SID or o_sid==NONE_CL_SID or o_sid==9503 or (o_sid==424 and not actor:has_info("val_raid_start")) or o_sid==9541 or o_sid==3 or o_sid==9543 or o_sid==902 or o_sid==292 or  
				lname=="l05_bar" or ( lname=="l01_escape" and (o_sid==4 or o_sid==9) and actor:has_info("volk_prisoner_start") and not actor:has_info("atp_bandit_leader_ok") ) ) then
				if game_graph():valid_vertex_id(obj.m_game_vertex_id) then
					local map= obj.level_name
					if map==lname then
						g_sim:set_switch_online (obj.id, true)
						g_sim:set_switch_offline (obj.id, false)
						local npc = client_obj(a)
						if npc then
							npc:clear_animations()
						end
						local com = obj:community()
						local excl = {506,515,571,612,902}
						if lname~=sname and sname~="" and com~="military" and com~="monolith" and com~="killer" and com~="trader" and str_in_tab(o_sid,excl) == nil then
							habar_by_nps(a)
						end
					end
				end
			end
		end
	end
	
	local spwn_tbl = stored_table("need_art_spawn", true, s_tbl)
	if spwn_tbl[lname] == true then
		amk_anoms.generate_arts()
		add_sak_skelets(lname)
		spwn_tbl[lname] = false
		nlc_vars.need_art_spawn = spwn_tbl
	end
	
	----------- установка фоновой освещённости в зависимости от локации  -------

	local amb_cfg = FindConfigStr( "r2_sun_lumscale_amb" )
    if tonumber( string.sub( amb_cfg, -3 ) ) ~= 0.1 then	
		WriteIni( db.stor_ltx, "stor", "lumscale_amb", "\""..amb_cfg.."\"" )
	end	
    local amb = ReadIni( db.stor_ltx, "stor", "lumscale_amb" )
	if 
		const.ground_levels[ lname ] 
	then 
		get_command( amb )
	else
		get_command( "r2_sun_lumscale_amb 0.1" )
	end
	
	-- в старом варианте после подземок всегда 0.5 устанавливалось
	-- local amb_cfg=FindConfigStr("r2_sun_lumscale_amb")
	-- WriteIni(db.stor_ltx, "stor", "lumscale_amb", "\""..amb_cfg.."\"")
	-- local amb=ReadIni(db.stor_ltx,"stor","lumscale_amb")
	-- if (strpos(amb,"r2_sun_lumscale_amb ",1,true) and tonumber(string.sub(amb,-3))<0.2) or amb=="" then amb="r2_sun_lumscale_amb 0.5" end
	-- if const.ground_levels[lname] then
		-- get_command(amb)     
	-- else
		-- get_command("r2_sun_lumscale_amb 0.1") 
	-- end
	
	local levch_lab={9130,9131,9167,9170,9186,9187,9192,9196,9197,9481,9109,9256,9118,9119,9260}
		for d=1,table.getn(levch_lab) do
			local objt= g_sim:story_object(levch_lab[d])
			if objt then 
				misc.release_obj(objt) 
			end
		end
  
	if actor:has_info("trup_sanek_out") then actor:give_info_portion("sanek_out")
    local sanek= g_sim:story_object(story_ids.sanek)
		if sanek then
			misc.release_obj(sanek, 'remove sanek')
		end
	end
  
	if lname~=sname and sname~="" then
		wprintf("sak.add_tail: level change detected from~C0E %s~C07 to~C0F %s~C07", sname, lname)    
	local obj
    if lname~="l05_bar" then
		if not has_alife_info("minigame_stas_start") then
			actor:give_info_portion("minigame_stas_start")
		end
		if has_alife_info("serafim_scaner_done") and not has_alife_info("serafim_red_out") then
			obj = g_sim:object("serafim")
			if obj then
				misc.release_obj(obj)
			end
			actor:give_info_portion("serafim_red_out")
		end
    end 
    if (not has_alife_info("bar_heli_scene_professor_die")) and (not has_alife_info("kruglov_is_fly")) and (actor:has_info("kruglov_way_2_end") or actor:has_info("kruglov_flash_done") or actor:has_info("krugl_end_time")) then
		actor:give_info_portion("kruglov1_is_fly")
		actor:give_info_portion("kruglov2_is_fly")
		actor:give_info_portion("kruglov3_is_fly")
		actor:give_info_portion("kruglov_is_fly")
        for a=0,2 do
			misc.release_by_name("ros_zone_flame_000"..a,'sak.script:4680')
		end 
        for a=0,4 do
			misc.release_by_name("ros_zone_flame_small_000"..a,'sak.script:4681')
		end 
		obj= g_sim:story_object(story_ids.bar_ecolog_crush_1)
		if obj then
			misc.release_obj(obj, 'sak.script:3371')
		end
		obj= g_sim:story_object(story_ids.bar_ecolog_crush_3)
		if obj then
			misc.release_obj(obj, 'sak.script:3373')
		end
		obj= g_sim:story_object(story_ids.bar_ecolog_crush_2)
		if obj then
			misc.release_obj(obj, 'sak.script:3375')
		end
    end
    if lname~="l05_bar" and has_alife_info("diador_marsh_start") and not has_alife_info("diador_go_marsh") then
     	actor:give_info_portion("diador_go_marsh")
    end	
    local obj_t=(amk_vars.sak_teleport or 0)
    local obj_vis=(amk_vars.sak_teleport_vis or 0)
	if obj_t~=0 and obj_vis~=0 then
		misc.release_obj(tonumber(obj_t), 'sak.script:3380')
		misc.release_obj(tonumber(obj_vis), 'sak.script:3380')
	end
    loks_count()
    amk_vars.sak_teleport = nil
    amk_vars.sak_teleport_vis = nil
    sak_off_corpses.off_corpses(true)

    if actor:has_info("bar_deactivate_radar_done") and actor:has_info("klyk_out") and not actor:has_info("klyk_out_body_done") then
		if not actor:has_info("klyk_saved_info") then
			add_klyk_body()
		end
		dibils_krazy_out()
		actor:give_info_portion("klyk_out_body_done")
	elseif actor:has_info("bar_deactivate_radar_done") and not actor:has_info("dibils_krazy_out_info") then
		dibils_krazy_out()
    end
    if actor:has_info("trup_sanek_to_charch_end")
	and not actor:has_info("sanek2_out") then
        actor:give_info_portion("sanek2_out")
        obj = g_sim:story_object(story_ids.trup_sanek2)
        if obj then
			misc.release_obj(obj)
        end
        add_sanek_tomb()
		obj = g_sim:object("vil_stalker_corps")
		if obj then
			misc.release_obj(obj)
		end
    end
    if lname=="l04u_labx18" then
		if not actor:has_info("dar_run_quest") then
			--actor:give_info_portion("val_x18_door_open")
			actor:give_info_portion("dar_run_quest")
			x18_dor_open_spawn()
		end
    end
    if lname=="l08u_brainlab" and not actor:has_info("yan_find_laboratory_end") then 
		actor:give_info_portion("yan_find_laboratory_end")
		actor:give_info_portion("yantar_vasilyev_info")
    end
    if lname~="l10u_bunker" and sname~="l10u_bunker" then
		actor:give_info_portion("bun_lamp_1_off")
    end
    if lname~="l04u_labx18" and sname~="l04u_labx18" then
		for a=1,9 do
			actor:give_info_portion("labx18_lamp_"..a.."_off")
		end
    end
    if lname~="l08u_brainlab" and sname~="l08u_brainlab" then
		for a=1,9 do
			actor:give_info_portion("labx16_lamp_"..a.."_off")
		end
    end
    if lname~="labx8" and sname~="labx8" then
		for a=1,4 do
			actor:give_info_portion("labx8_lamp_"..a.."_off")
		end
    end
    if lname~="labx10" and sname~="labx10" then
		for a=1,13 do
			actor:give_info_portion("labx10_lamp_"..a.."_off")
		end
		for a=15,25 do
			actor:give_info_portion("labx10_lamp_"..a.."_off")
		end
		actor:give_info_portion("labx10_lamp_14_on")
		actor:disable_info_portion("x10_switch_on_rats")
    end
    if actor:has_info("art_exchanger_umer") and not actor:has_info("art_exchanger_out") then
		actor:give_info_portion("art_exchanger_out") 
    end
	-------------------------------------------------------
	if actor:has_info( "petrenko_dead" ) and not actor:has_info( "petrenko_out" ) then
            actor:give_info_portion( "petrenko_out" )
	end

    if actor:has_info("esc_vlad_new_gg") and not actor:has_info("vlad_oksana_out") then
		actor:give_info_portion("vlad_oksana_out") 
    end
    if lname~="l06_rostok" and lname~="l08_yantar" and actor:has_info("kruglov_is_fly") and not actor:has_info("sak_ros_merk_out") then
		actor:give_info_portion("sak_ros_merk_out") 
		vokodav_vis_new()
    end
    if sname=="l03_agroprom" then
		if lname=="l03u_agr_underground" then
			if not actor:has_info("agr_find_rygyi_done") then
				actor:give_info_portion("agr_find_rygyi_done")
				local obj = g_sim:story_object(story_ids.rygyi)
					if obj then 
						if obj:alive() then
							local pk = get_netpk(obj)
							local data = pk:get()
							data.health     = 1
							data.upd.health = 1
							pk:set(data)
							local sobj=alife():object(obj.id)
							sobj.wounded=false
							actor:give_info_portion("self_medkit_rygyi_done") 
						else
							misc.release_by_name("rygyi")
							actor:give_info_portion("rygyi_umer")
						end
					end
				misc.release_by_name("esc_tips_fox")
			end
			if actor:has_info("agr_mil_dumenko_job_start") and not actor:has_info("agr_und_blood_spawned") then
				sak_spawn.agr_und_blood()
				actor:give_info_portion("agr_und_blood_spawned")
			end
		end
		if actor:has_info("info_sherstuk_outfit_2done") and not actor:has_info("sherstuk_holiday_allowed") then
			actor:give_info_portion("sherstuk_holiday_allowed")
		end
    end
    if sname=="marsh" then 
		if actor:has_info("oksana_go_to_kordon_end") and not actor:has_info("oksana_umer") and not actor:has_info("oksana_kordon_out") then
			actor:give_info_portion("oksana_kordon_out") 
		end
		if actor:has_info("diador_go_marsh") then 
			misc.release_by_name("diador")
		end
		if actor:has_info("info_way181b") and actor:has_info("info_way178a") and not actor:has_info("mar_stepanych_umer") and not actor:has_info("mar_stepanych_out") then
			actor:give_info_portion("mar_stepanych_out") 
		end																				  
--  pahom_banka
		if actor:has_info("pahom_buzz_need") and actor:has_info("pahom_full_banka_info") then
			actor:disable_info_portion("pahom_full_banka_info")	  
		end	  
    end
--  убираем труп и бандосов по заданию Петрухи (Волка), если, взяв задание, вышли из Кишки без записки	
	if sname=="k01_darkscape" and mike.petruha_friend_dlg()==true then mike.petruha_friend_off() end
    if lname~="labx8" and lname~="l10_radar" and sname~="labx8" and sname~="l10_radar" and lname~="warlab" and sname~="warlab"
		and actor:has_info("deactivate_radar_fall")
		and not actor:has_info("bar_deactivate_radar_done") then
			actor:give_info_portion("bar_deactivate_radar_done")
			actor:give_info_portion("val_prisoner_door_unlocked")
			add_gar_sign_stop()
			make_any_npc_free("sim_stalker_prapor")
    end
	
    if actor:has_info("esc_petruha_toz_done") and
		not actor:has_info("lost_vil_stalker_dom_go") then
		actor:give_info_portion("lost_vil_stalker_dom_go") 
    end
    if lname=="generators" and gen_teleport==0 then
		spawn_teleports(v3f(-20.4,34.8,-223.8),311873,3106,5,20,"amk_zone_teleport_labirint",20)
		actor:give_info_portion("tesla_in")
    end
    if lname=="aver" and aver_teleport==0 then
		spawn_teleports(v3f(350.91,-6.01,-21.23),1492916,2902,5,30,"amk_zone_teleport_aver_labirint",40)
	end
    if lname=="l11_pripyat" and prip_teleport==0 then
		spawn_teleports(v3f(29.7,1.8,355.8),139177,2260,5,30,"amk_zone_teleport_prip_labirint",40)
    end	
    if lname~="l01_escape" and 
		actor:has_info("gar_dm_bandits_done") and 
		actor:has_info("info_way178a") then
		actor:give_info_portion("ivan_go_limansk")
	end
	-- test
    if lname~="l01_escape" and 
		actor:has_info("gar_dm_novice_dead") and ( actor:has_info("info_way178a") or actor:has_info("gar_dm_bandits_not_start") ) and not actor:has_info("ivan_go_limansk") then
		actor:give_info_portion("ivan_go_limansk")
    end
	-- esc_bandit_letter
    if lname~="l01_escape" and actor:has_info("esc_exit_bandit_start") and not actor:has_info("info_esc_bandit_letter") then
		actor:give_info_portion("info_esc_bandit_letter")
    end	
    if lname~="l03_agroprom" and actor:has_info("ratcatcher_order_done") and not actor:has_info("ratcatcher_out") then 
		actor:give_info_portion("ratcatcher_out") 
        obj= g_sim:story_object(story_ids.agr_ratcatcher)
		if obj then
			misc.release_obj(obj, 'sak.script:3471')
		end 
    end
    if lname~="l02_garbage" and actor:has_info("gar_stalker_info2") then 
        obj= g_sim:story_object(story_ids.gar_stalker)
        if obj then 
			misc.release_obj(obj, 'sak.script:3477')
        end
    end
    if lname~="l01_escape" and actor:has_info("gar_flame_done") then 
		obj= g_sim:story_object(story_ids.leshyi)
		if obj then 
			misc.release_obj (obj, 'sak.script:3480')
		end
    end
    if lname=="l01_escape" then
		if actor:has_info("tutorial_end") and not actor:has_info("tutorial_wounded_give_info") then 
			esc_shustryi_stalker() 
			actor:give_info_portion("tutorial_wounded_give_info") 
			actor:give_info_portion("esc_shustryi_outfit_start")
		end
		if sname=="l02_garbage" and not actor:has_info("esc_serious_talk") then
			esc_trader_start_quest()
		end
    end
    if lname~="l01_escape" then 
		actor:give_info_portion("esc_lamp_1_off") 
    end
    if lname~="l02_garbage" and actor:has_info("borov_31_have") then 
		obj= g_sim:story_object(9495) -- story_object(9495)
		if obj then 
			misc.release_obj (obj, 'sak.script:3488') 
		end
    end
    if lname~="l04_darkvalley" and 
		( actor:has_info("val_escort_scene_add_end") and not actor:has_info("val_escort_scene_end") ) or 
		( actor:has_info("val_escort_scene_end") and not actor:has_info("val_escort_scene_add_end") ) then 
		actor:give_info_portion("val_escort_scene_end")
		actor:give_info_portion("val_escort_scene_add_end")
		actor:give_info_portion("val_sacrifice_finish")
		obj= g_sim:story_object(story_ids.val_escort_guard1)
		if obj then 
			misc.release_obj (obj, 'sak.script:3491') 
		end
		obj= g_sim:story_object(story_ids.val_escort_guard3)
		if obj then
			misc.release_obj (obj, 'sak.script:3493')
		end
		obj= g_sim:story_object(story_ids.val_escort_guard2)
		if obj then 
			misc.release_obj (obj, 'sak.script:3495') 
		end
		obj= g_sim:object("val_sacrifice_victim")
		if obj then
			misc.release_obj(obj)
		end
    end
    if lname~="l07_military" and 
		actor:has_info("personal_things_max") and not actor:has_info("personal_things_skryaga_no") then 
		actor:give_info_portion("personal_things_skryaga_no")
    end
    if lname~="l07_military" and 
		actor:has_info("mil_zoneguard_test2_passed") then 
		actor:disable_info_portion("mil_zoneguard_test2_passed")
    end
    -- if lname~="l07_military" and 
		-- (actor:has_info("mil_freedom_under_attack") or 
		-- actor:has_info("mil_lukash_dolg_task_complete")) then 
		-- mil_mines_add()
    -- end
    if lname=="l05_bar" and 
		actor:has_info("agr_start_scene") and 
		not actor:has_info("add_hos_junkman") then 
		actor:give_info_portion("add_hos_junkman")
    end
    if lname=="l02_garbage" and actor:has_info("hellcar_raid_start") and 
		not actor:has_info("gar_hellcar_thanks") and 
		not actor:has_info("gar_open_fire") then
		actor:give_info_portion("gar_bandits_raid")  
		actor:give_info_portion("gar_open_fire")  
		obj= g_sim:story_object(story_ids.gar_hellcar)
		if obj and obj:alive() and obj.online then
			obj = client_obj(obj.id)
			obj:kill(obj)
		end 
    end
    if lname~="l06_rostok" and 
		actor:has_info("ivancov_val_business_done") and 
		not actor:has_info("actor_has_fraer") then 
		actor:give_info_portion("actor_has_fraer")
	end
    if lname=="l06_rostok" then
		if actor:has_info("yan_kill_brain_done") and not actor:has_info("assistant_out") then 
			actor:give_info_portion("assistant_out") 
			misc.release_by_name("yan_helicopter_1") 
			misc.release_by_name("yan_helicopter_2")
		end
		
		if actor:has_info("yan_kill_brain_done") and not actor:has_info("ros_freeman_eagle") then
			eagle_cond()
			actor:give_info_portion("ros_freeman_eagle")
		end
    end
    if lname=="red_forest" then
		if sname=="limansk" and actor:has_info("red_scaut_pass_on") then 
			red_community()  			
			actor:disable_info_portion("red_lim_pass_on")
		else 
			actor:give_info_portion("red_lim_pass_on") 
			off_red_mines()  
		end
		local day=timers.Get_Game_Days()+1
		local rand=(amk_vars.r_treas_items or 1)+6
		if math.fmod(day, rand)~=0 then
			obj= g_sim:story_object(story_ids.red_forest_lesnik)
			if not obj then
				misc.spawn_by_name("red_forest_lesnik")
			end
		else
			misc.release_by_name("red_forest_lesnik")
		end
    end
	if lname=="limansk" then 
		if sname=="generators" and actor:has_info("deactivate_radar_fall") and not actor:has_info("red_scaut_pass_on") then  
			actor:give_info_portion("red_scaut_pass_on")
			actor:give_info_portion("red_scaut_pass_on_new")
		end		
	end	
    if lname=="l05_bar" then
		if not actor:has_info("bar_seif_prot_out") then 
			obj=level_object_by_sid(31)
			grabb_bar_seif (obj:id(),actor) 
		end
		if actor:has_info("info_borov_revenge") and not actor:has_info("l05_bar_prot_out") then 
			voronin_seif_out()			
			actor:give_info_portion("l05_bar_prot_out")
		end
		local day=timers.Get_Game_Days()+1
		local rand=(amk_vars.r_treas_items or 1)+4
		if math.fmod(day, rand)~=0 then
			obj= g_sim:story_object(story_ids.bar_bar_osvedomitel)
			if not obj then
				misc.spawn_by_name("bar_bar_osvedomitel")
			end
		else
			if actor:has_info("bar_x18_documents_know") and not actor:has_info("deactivate_radar_fall") then
				misc.release_by_name("bar_bar_osvedomitel")
			end
		end
    end

	end

	if lname=="aver" then 
		level.set_time_factor(system_ini():r_float("alife","time_factor")*5)
		t_s_1=45150
	elseif const.ground_levels[lname] then
		level.set_time_factor(system_ini():r_float("alife","time_factor"))
		t_s_1=math.floor(600000-(level_difficulty[lname]^2*160000))
	else
		level.set_time_factor(system_ini():r_float("alife","time_factor"))
		t_s_1=160000
	end
	local hour = level.get_time_hours()
	params.hit_probability_add(level_difficulty[lname]*time_difficulty[hour])
	sak_off_corpses.off_corpses()
	razgruzka.end_use_info()
	sak.reset_actor_bio()   
	wprintf('~CF0[~T/~U/~B]. #PERF: sak.add_tail end~C07');
end

function sak.actor_bio()
	params.tiredness_add(0)
end

function sak.reset_actor_bio() 
	params.health_v_add  (1, level_difficulty[level.name()]) -- восстановление здоровья во время бодрствования
	params.satiety_v_add (1, 1)  -- нарастание голода по умолчанию
	actor_bio()
end

function x18_dor_open_spawn()
	amk_spawn.x_spawn("x18_1")
	amk_spawn.x_spawn("x18_2")
	amk_spawn.x_spawn("x18_3")
end

function grabb_bar_seif (obj_id,actor)
	have_many=0
	local ids,cnt = registry.inv_objects(obj_id, true)
	for n = 1,cnt do
    local id = ids[n]
    local sobj = client_obj(id)
		if sobj then
			local nname=sobj:section()
			if strpos(nname, "af_",1,true) or strpos(nname, "arc_art_box_",1,true) then
				add_price_arts(sobj)
			end
		end 
	end
	if (have_many>350000 or actor:has_info("deactivate_radar_fall")) and not actor:has_info("bar_seif_prot_out") then 
		actor:give_info_portion("bar_seif_prot_out")
		local name,sname = amk_names_lists.get_strings()    
		send_tip("Слыхали? Сталкера в баре отключили! Спит сутки без просыпу!",name.." "..sname,20,15,"uniq","news","gray")
		for n = 1,cnt do
			local id = ids[n]
			local sobj = client_obj(id)
			misc.release_obj(id, 'sak.script:3588')
		end
	end
end
function voronin_seif_out()
	local obj=level_object_by_sid(9142)
	local ids,cnt = registry.inv_objects(obj:id(), true)
	for n = 1,cnt do
		local id = ids[n]
		local sobj = client_obj(id)
		misc.release_obj(id, 'voronin_seif_out')
	end
end
function habar_by_nps(lid)
	local npc = client_obj(lid)
	if not npc then return end
	local ids,cnt = registry.inv_objects(npc:id(), true)
    for n = 1,cnt do
		local id = ids[n]
		local sobj = client_obj(id)
		if sobj then
			if is_food(sobj)==true or is_arts(sobj)==true then
				misc.release_obj(id)
			end
		end
    end       
	for k, v in pairs(table_food) do
		if lua_random()<0.15 then
			local obj=misc.spawn_to(k, npc)
			if k=="bread" or k=="kolbasa" or k=="green_kolbasa" then
				misc.process_spawn()
				local rand=lua_random(30,80)/100
				local pk = get_netpk(obj,1)
				local data = pk:get()
				data.condition=rand
				pk:set(data)
				obj=client_obj(obj.id)
				obj:set_condition(rand)
			end
		end
	end
	if npc:rank() > 500 then
		for k, v in pairs(table_aart) do
			if lua_random()<0.03 then
			local art = k.."_dyn"..lua_random(1,4).."d"
			local obj = misc.spawn_to(art, npc)
				misc.process_spawn()
				local rand=lua_random(30, 80) / 100
				local pk = get_netpk(obj,1)             
				local data = pk:get()
				data.condition=rand
				pk:set(data)
				obj=client_obj(obj.id)
				obj:set_condition(rand)
				break
			end
		end
	end
end

function is_food(item)
	local section = item:section()
	if table_food[section] then
		return true
	else
		return false
	end
end
function is_arts(item)
	local section = string.sub(item:section(),1,-7)
	if table_aart[section] then
		return true
	else
		return false
	end
end
function spawn_red_mines()
	local obj= g_sim:story_object(525) -- story_object(525)
	if obj then return end
	for n = 1,4,1 do
		misc.spawn_by_name("red_zone_mine_field_"..n)
	end
end
function off_red_mines()
	local obj= g_sim:story_object(525) -- story_object(525)
	if not obj then return end
		for n = 524,527 do
			local obj = g_sim:story_object(n)
			if obj then   
				misc.release_obj(obj, 'sak.script:3628')
			else
				wprintf("[~T].~C0C #WARN(off_red_mines):~C07 not found story-object~C0D %d~C07 ", n)    
		end   
	end
end

function loks_count()
	local n_count=nlc_vars.mik_count or 0
	if n_count>=10 and lua_random()>0.5 then
		local t=lua_random(1,3)
		schedule.add ("chat_content","news_mikelik.chat_content()",10000*t)
		n_count=0
	else
		n_count=n_count+1
	end
	nlc_vars.mik_count = n_count
	local r_count=nlc_vars.rem_count or 0
	if r_count>8 then return end
	local count=nlc_vars.loks_count or 0
	if count>=7+r_count*10 then
		if lua_random()>0.5 then
			local t=lua_random(1,3)
			schedule.add ("remer_loks","sak.add_rem_infos()",10000*t)
			count=0
		end
	else
		count=count+1
	end
	nlc_vars.loks_count = count
end
function rem_loks()
end
function add_rem_infos()
	local count=nlc_vars.rem_count or 0
	if count>8 then return end
	send_tip("Что-то мелькнуло в голове... Вспомнилось или так, показалось...\\nНадо бы записать, а то вдруг опять забудется","Воспоминание",2,20,"g_g","rememb","yellow")
	nlc_vars.rem_count = count + 1
	local character=math.floor(((amk_vars.r_task_reward or 1)+(amk_vars.x18_iq_check or 1))/2)
	local info="rem_"..tostring(character).."_"..tostring(count)
	db.actor:give_info_portion(info)
end
function gg_bandit()
	db.actor:set_character_community("bandit",0,0)
end

function timer_lager_attack()
	timers.start_timer("esc_attack",0,12,33,"sak.escape_lager_attack()")
	local trup = g_sim:object("dsc_stalker_corps1_03")
	if trup then
		misc.release_obj(trup)
	end
end
function escape_lager_attack()
	if has_alife_info("escape_lager_complete") or has_alife_info("escape_lager_failed") then
		return
	end
	db.actor:give_info_portion("escape_lager_spawn_killers")
	db.actor:give_info_portion("escape_lager_failed")
end
function mil_dolg_attacking()
	local actor=db.actor
	if actor:has_info("ivancov_return_cherep_have") then return end
	actor:give_info_portion("mil_dolg_skull_time")
	actor:give_info_portion("mil_dolg_auto_attack")
	if level.name()~="l07_military" then
		local obj= g_sim:story_object(story_ids.mil_freedom_stalker0004) -- Mil_Sniper
		if obj then
			local pk = get_netpk(obj)
			local data = pk:get()
			data.health     = 0
			data.upd.health = 0
			pk:set(data)
		end
	else
		local obj = level_object_by_sid(704)
		if obj and obj:alive() then
			obj:kill(obj)
		end
	end
end

function rad_zomb_off()
	local ids, cnt = registry.clsid_objects(CLID_STALKER, CLID_STALKER, true, nil, 15)
	for n=1,cnt do
		local id = ids[n]
		local obj= g_sim:object(id)
		if not obj:alive() and strpos(obj:profile_name(),"rad_zombied",1,true) then 
			misc.release_obj (obj, 'sak.script:3687')
		end
	end
end
function add_gar_sign_stop()
	local objt= g_sim:story_object(story_ids.gar_sign_stop_blokpost)
	if not objt then
		misc.spawn_by_name("gar_sign_stop_blokpost")
	end
	local obj= g_sim:story_object(story_ids.rad_half_dead_scientist)
	if obj then
		local pk = get_netpk(obj)
		local data = pk:get()
		data.custom_data = "[dont_spawn_character_supplies]"
		data.health     = 0
		data.upd.health = 0
		pk:set(data)
	end
	misc.spawn_by_name("val_stena_podval")
end
function turn_off_sid_lamp()
	local actor=db.actor
	local lamp_sid
	local lamp_2={51, 52, 53}
	if actor:has_info("esc_lamp_1_off") then
		turn_off_lamp(13)
	end
	if actor:has_info("esc_lamp_2_off") then
		for a=1,#lamp_2 do
			lamp_sid=(lamp_2[a])
			turn_off_lamp(lamp_sid)
		end
	end
end
function turn_off_x16_lamp()
	local actor=db.actor
	local lamp_sid
	local lamp={
				{5330, 5331, 5332, 5346, 5347, 5348},
				{5335, 5326, 5327, 5378},
				{5336, 5337, 5328},
				{5338, 5339, 5329},
				{5360, 5361, 5362, 5344, 5377},
				{5363, 5364, 5365, 5366, 5367, 5368, 5369},
				{5333, 5334, 5349, 5350, 5351, 5352, 5353},
				{5370, 5371, 5372, 5373, 5374, 5375}
				}
	for a=1,#lamp do
		if actor:has_info("labx16_lamp_"..a.."_off") then
			for i=1,#lamp[a] do
				lamp_sid=(lamp[a][i])
				turn_off_lamp(lamp_sid)
			end
		end
	end
end
function turn_off_x18_lamp()
	local actor=db.actor
	local lamp_sid
	local lamp={
				{5172, 5173, 5174, 5179},
				{5120, 5121, 5180, 5184},
				{5122, 5123, 5124, 5125, 5126, 5175, 5176, 5177, 5178, 5182, 5183},
				{5148, 5149, 5150, 5151, 5152, 5153, 5154, 5155},
				{5132, 5133, 5134, 5135, 5136, 5137, 5138, 5143, 5144, 5145},
				{5139,5140,5141,5142,5146,5147},
				{5147},
				{5127, 5128, 5129, 5130, 5131, 5156, 5157, 5158},
				{5159,5160,5161,5162,5163,5164,5165,5166,5167,5168,5169,5170,5171}
				}
	for a=1,#lamp do
		if actor:has_info("labx18_lamp_"..a.."_off") then
			for i=1,#lamp[a] do
				lamp_sid=(lamp[a][i])
				turn_off_lamp(lamp_sid)
			end
		end
	end
end
function turn_off_x8_lamp()
	local actor=db.actor
	local lamp_sid
	local lamp={
				{6123,6115,6136,6137},
				{6111,6114,6116,6117,6118,6119,6120,6141},
				{6121,6122,6124,6128,6129,6130},
				{6132,6133,6134,6135,6138,6139,6140,6125,6126,6127}
				}
	for a=1,#lamp do
		if actor:has_info("labx8_lamp_"..a.."_off") then
			for i=1,#lamp[a] do
				lamp_sid=(lamp[a][i])
				turn_off_lamp(lamp_sid)
			end
		end
	end
end
function turn_off_bun_lamp()
	local actor=db.actor
	local lamp_sid
	if actor:has_info("bun_lamp_1_off") then
		for a=1,58 do
			lamp_sid=3101+a
			turn_off_lamp(lamp_sid)
		end
	end
end
function turn_off_radar_lamp()
	local actor=db.actor
	if not actor:has_info("radar_pribor1_on") then
		turn_off_lamp(6152)
	end
	if not actor:has_info("radar_pribor2_on") then
		turn_off_lamp(6153)
	end
	if not actor:has_info("radar_pribor3_on") then
		turn_off_lamp(6154)
	end
end
function turn_off_lab8_lamp()
	local actor=db.actor
	if not actor:has_info("lab8_pribor1_on") then
		turn_off_lamp(8156)
	end
	if not actor:has_info("lab8_pribor2_on") then
		turn_off_lamp(8157)
	end
	if not actor:has_info("lab8_pribor3_on") then
		turn_off_lamp(8158)
	end
	if not actor:has_info("lab8_pribor4_on") then
		turn_off_lamp(8159)
	end
	if not actor:has_info("lab8_pribor5_on") then
		turn_off_lamp(8160)
	end
end
function turn_off_x10_lamp()
	local actor=db.actor
	local lamp_sid
	local lamp={
				{4258,4259,4276,4277},
				{4260},
				{4261},
				{4262,4263,4253,4254,4255,4256,4257},
				{4270,4271},
				{4250},
				{4251},
				{4252},
				{4249},
				{4248},
				{4247},
				{4285,4264,4265,4266,4267,4268,4269,4272,4273,4274},
				{4278,4279,4280,4281,4282,4283,4284},
				{4301},
				{4217,4219,4218,4231,4216},
				{4213,4214,4215,4212},
				{4240,4211,4241,4210},
				{4232,4233,4234,4235,4209},
				{4223,4224,4222,4242,4201},
				{4237,4236,4221,4203},
				{4204,4229,4230,4206,4207,4208,4225,4227,4243,4228},
				{4239,4238}
				}
	for a=1,#lamp do
		if actor:has_info("labx10_lamp_"..a.."_off") and a~=14 then
			for i=1,#lamp[a] do
				lamp_sid=(lamp[a][i])
				turn_off_lamp(lamp_sid)
			end
		end
	end
end
function turn_off_mon_lamp()
	local actor=db.actor
	local lamp_sid
	if actor:has_info("mon_lamp_1_off") then
		for a=1,41 do
			lamp_sid=3009+a
			turn_off_lamp(lamp_sid)
		end
	end
end

function turn_off_lamp(l_sid)
	local obj=level_object_by_sid(l_sid)
	if obj then
		obj:get_hanging_lamp():turn_off()
	end
end

function turn_on_lamp( l_sid )
    local obj = level_object_by_sid( l_sid )
    if obj then 
		obj:get_hanging_lamp():turn_on()
	end
end

function monolit_zone()
	local snd_obj1 = xr_sound.get_safe_sound_object([[affects\\psy_blackout_l]])
	local snd_obj2 = xr_sound.get_safe_sound_object([[affects\\psy_blackout_r]])
	snd_obj1:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
	snd_obj2:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
end

function fake_drink_vodka()
	eat_vodka()
	eff_vodka()
	sak_dialog.up_repa(5)
	sleep_manager.add_sleepiness(10)
end

function some_updates()
	local npc=db.actor
	local act_pos=db.actor:position()
	local lname=level.name()
	local sname=(amk_vars.level_on_save or "")
	if lname=="l04u_labx18" then
		turn_off_x18_lamp()
	elseif lname=="l08u_brainlab" then
		turn_off_x16_lamp()
	elseif lname=="labx8" then
		turn_off_x8_lamp()
		turn_off_lab8_lamp()
	elseif lname=="l10_radar" then
		turn_off_radar_lamp()
	elseif lname=="l01_escape" then
		turn_off_sid_lamp()
	elseif lname=="l10u_bunker" then
		turn_off_bun_lamp()
	elseif lname=="labx10" then
		turn_off_x10_lamp()
	elseif lname=="l12u_control_monolith" then
		turn_off_mon_lamp()
	end
	
	local r_task_rew,r_treasur,g_dif=(amk_vars.r_task_reward or 1),(amk_vars.r_treas_items or 1),(amk_vars.g_diff or tonumber(level.get_game_difficulty()))
    WriteIni(db.stor_ltx, "stor", "r_task_reward", r_task_rew)
    WriteIni(db.stor_ltx, "stor", "r_treas_items", r_treasur)
    get_command("g_game_difficulty "..game_difficulty_by_num[g_dif])

	if lname~=sname and sname~="" then
		-- добавлено mike для спавна мерков
		if lname=="l07_military" and npc:has_info("lim_zub_last_info") and not npc:has_info("gross_merc_spawned") then
			mike.spawn_gross_merc()
			npc:give_info_portion("gross_merc_spawned")
		end
		if lname=="l10_radar" and npc:has_info("mercs_call") and not npc:has_info("rad_mercs_spawned") then
			mike.spawn_radar_mercs()
			npc:give_info_portion("rad_mercs_spawned")
		end
		if lname=="l10_radar" and npc:has_info("have_tools") and not npc:has_info("after_x12_spawned") then
			mike.spawn_after_x12()
			npc:give_info_portion("after_x12_spawned")
		end
		if lname=="l10u_bunker" and npc:has_info("mercs_gun_1_info") and not npc:has_info("x12_mercs_spawned") and not npc:has_info("mil_mercs_fire") then
			mike.spawn_x12_mercs()
			npc:give_info_portion("x12_mercs_spawned")
		end	
		if lname=="l05_bar" and npc:has_info("assistant_go_to_bar") and not npc:has_info("assistant2_umer") and not npc:has_info("assistant_bar") then
			npc:give_info_portion("assistant_bar") 	-- убираем Матвеева
			misc.release_by_name("assistant2")
			misc.release_by_name("mil_vasilev") 	-- убираем Васильева
		end
		-- добавлено mike для спавна в саркофаге
		if lname=="l12u_sarcofag" then
			mike.spawn_in_sarcofag()
		end
		-- добавлено mike для спавна в х12
		if lname=="l10u_bunker" and not npc:has_info("x12_gift_info") then
			mike.spawn_in_x12() 
			npc:give_info_portion("x12_gift_info")
		end	
		-- добавлено mike для спавна в Тесле
		if lname=="generators" and not npc:has_info("tesla_gift_info") then
			mike.spawn_in_generators()
			npc:give_info_portion("tesla_gift_info")
		end
		-- добавлено mike для спавна в райцентре
		if lname=="deadcity" and not npc:has_info("deadcity_gift_info") then
			mike.spawn_in_deadcity()
			npc:give_info_portion("deadcity_gift_info")
		end
		-- добавлено mike для спавна на Радаре
		if lname=="l10_radar" and not npc:has_info("radar_gift_info") then
			--mike.add_radar_habar()
			npc:give_info_portion("radar_gift_info")
		end	
		-- добавлено mike для спавна маятника в ТЧ или Припяти
		if lname=="aver" and npc:has_info("mayatnik_aver_ready_info") and not npc:has_info("mayatnik_aver_info") then
			mike.add_mayatnik_aver()
			npc:give_info_portion("mayatnik_aver_info")
		end
		if lname=="l11_pripyat" and npc:has_info("mayatnik_prip_ready_info") and not npc:has_info("mayatnik_prip_info") then
			mike.add_mayatnik_prip()
			npc:give_info_portion("mayatnik_prip_info")
		end	
		if lname=="generators" and npc:has_info("petrenko_tesla_job_info") and not npc:has_info("petrenko_tesla_job_done") then
			db.actor:give_info_portion("akk_is_ready")		
		end
		-- добавлено mike для спавна в Припяти
		if lname=="l11_pripyat" then
			g_sim:create("amk_zone_sphere",vector():set(29.7,10,355.8), 139177, 2260)
		end	
		-- убираем Искателя и его друга с Теслы
		if lname=="red_forest" and npc:has_info("gen_iskatel_akkum_info") and not npc:has_info("gen_iskatel_akkum_done") then
			npc:give_info_portion("gen_iskatel_akkum_done")	
			misc.release_by_name("gen_iskatel_drug")
		end	
		-- убираем Небова из Лиманска
		if lname~="limansk" and npc:has_info("gen_iskatel_akkum_done") and not npc:has_info("ivan_umer") then	
			misc.release_by_name("ivan")  
		end
		-- убираем Фраера с ДТ
		if lname~="l06_rostok" and npc:has_info("dt_fraer_dialog_done") and not npc:has_info("dt_fraer_pda_know") then
			npc:give_info_portion("dt_fraer_pda_know")	
		end
		-- убираем Кочергу с ДТ
		if lname~="l06_rostok" and ( npc:has_info("dt_kocherga_secret_done") or npc:has_info("deactivate_radar_fall") ) and not npc:has_info("kocherga_umer") then	
			misc.release_by_name("td_kocherga")
		end
		-- убираем Искателя из Лиманска
		if lname=="l05_bar" and npc:has_info("bar_tonnel_info") and npc:has_info("gen_iskatel_akkum_done") then	
			misc.release_by_name("gen_iskatel")
		end
		-- убираем Фраера из Лиманска
		if lname~="limansk" and npc:has_info("info_fraer_pripyat_done") and not npc:has_info("fraer_umer") then	
			misc.release_by_name("td_stalker_fraer")
		end
		-- отправляем Петруху на ЗХ если не отдали БМ
		if lname~="l01_escape" and npc:has_info("agroprom_military_case_know") and not npc:has_info("esc_petruha_toz_done") then
			npc:give_info_portion("esc_petruha_toz_done")
		end	
-----------------	
		if lname=="l07_military" and sname=="aver" then
			npc:give_info_portion("mil_zoneguard_test1_passed")
		end
		-- ботаны уходят на базу ЧН после гиганта, либо после отказа выполнять это задание
		if sname=="marsh" and has_alife_info("marsh_botan_to_gigant_end") and not has_alife_info("marsh_botan_return") then
			db.actor:give_info_portion("marsh_botan_return")
			provodnik_body_out()
		end
	
		if lname=="l11_pripyat" then mike.fill_food_prip() end
		-- выдаём поршень для диалога с Фраером в Лиманске	
		if lname=="l11_pripyat" and npc:has_info("lim_fraer_gg_know") and not npc:has_info("lim_fraer_pripyat_info") then
			npc:give_info_portion("lim_fraer_pripyat_info") 
		end
		if lname=="l07_military" and not npc:has_info("mil_dolg_auto_attack") and not has_alife_info("ivancov_return_cherep_have") then
			local name, delay = timers.check_timer("mil_attack")
			if not name then
				timers.start_timer("mil_attack",0,3,33,"sak.mil_dolg_attacking()")
			end
		end
		if lname~="l07_military" and npc:has_info("ivancov_return_cherep_have") and not has_alife_info("mil_dolg_gulag_return") then
			npc:give_info_portion("mil_dolg_gulag_return") npc:give_info_portion("mil_lukash_dolg_task_complete")
		end
		if lname=="l04_darkvalley" and not has_alife_info("val_sos_give_tip_first") then
			timers.start_timer("vlad_sms",0,0,3,"sak.vlad_first_sms()")
			npc:give_info_portion("val_sos_give_tip_first")
		end
		if sname=="l04_darkvalley" then
			if has_alife_info("val_escort_new_begin") then
				if not has_alife_info("val_escort_guards_free") then
					npc:give_info_portion("val_escort_guards_free")
				end
				if not has_alife_info("val_mongol_talk") then
					kill_offline_npc(424)
				end
			end
			if not has_alife_info("val_sos_got_medkit") then
				kill_offline_npc(422)
				local oks = g_sim:object("marsh_oksana2")
				if oks then
					misc.release_obj(oks)
				end
				oks = g_sim:object("marsh_oksana")
				if oks then
					misc.release_obj(oks)
				end
				--log2("vlad killed --> oksana released")
				npc:give_info_portion("val_sos_got_medkit")
				npc:give_info_portion("oksana_kordon_out")
			end
		end
	
		for k, v in pairs(sak_artmods.artmod_resiepts) do 
			nlc_vars["artmod_activation_"..v[5]] = nil 
		end
		npc:disable_info_portion("dead_vergas_actor_hangry_info")
		npc:give_info_portion("gar_bandit_blokpost_pass_off")
		npc:disable_info_portion("info_way109a")
		npc:disable_info_portion("cook_door_open")
		npc:disable_info_portion("esc_give_water")
		npc:disable_info_portion("black_tip_yes")
		npc:disable_info_portion("dsc_monsters_1_add_have")
		npc:disable_info_portion("rad_monsters_1_add_have")
		npc:disable_info_portion("red_monsters_1_add_have")
		npc:disable_info_portion("black_tip_no")
		npc:disable_info_portion("mutant_blok_post_have")
		npc:disable_info_portion("gar_monster_angar_have")
		npc:disable_info_portion("val_monster_add_have")
		npc:disable_info_portion("val2_monster_add_have")
		npc:disable_info_portion("ros_monsters_have")
		npc:disable_info_portion("ros2_monsters_have")
		npc:disable_info_portion("ros3_monsters_have")
		npc:disable_info_portion("blowout_dialog")
		npc:disable_info_portion("gar_monster_bandits_have")
		npc:disable_info_portion("escape_trader_jobs_new")
		npc:disable_info_portion("gg_luser")
		npc:disable_info_portion("part_exchang_2out")
		npc:disable_info_portion("lim_monster_enter_have")
		npc:disable_info_portion("outfit_dmg_info")
		amk_offline_alife.update_trade()
		local ids,cnt = registry.sc_objects("kolbasa*", false,7)
		for n=1,cnt do
			local id = ids[n]
			local obj=client_obj(id)
			if obj then 
				if (obj:parent()==nil or obj:parent():id()==nil or obj:parent():id()==BAD_OBJ_ID) then
					misc.release_obj(id, 'kolbasa_off')
				end
			end
		end
		ids,cnt = registry.sc_objects("bread*", false,7)
		for n=1,cnt do
			local id = ids[n]
			local obj=client_obj(id)
			if obj and (obj:parent()==nil or obj:parent():id()==nil or obj:parent():id()==BAD_OBJ_ID) then
				misc.release_obj (id, 'bread_off')
			end
		end
		if lua_random()<0.075 then
			local ids,cnt = registry.sc_objects("m_inventory_box*", false,7)
			for n=1,cnt do
				local id = ids[n]
				local obj=client_obj(id)
				if obj and obj:position():distance_to(act_pos)>20 then 
					misc.release_obj(id, 'm_inventory_box_off')
				end
			end
		end
		if lua_random()<0.095 then
		local ids,cnt = registry.sc_objects("rucksack*", false,7)
			for n=1,cnt do
				local id = ids[n]
				local obj=client_obj(id)
				if obj and obj:position():distance_to(act_pos)>20 then 
					misc.release_obj(id, 'rucksack_off')
				end
			end
		end
		if npc:has_info("diador_umer") then
			local obj= g_sim:story_object(story_ids.diador)
			if obj then
				misc.release_obj(obj, 'diador_off')
			end
			local obj= g_sim:story_object(story_ids.esc_exit_bandit_diador)
			if obj then
				misc.release_obj(obj, 'diador_off')
			end
		end
		if not npc:object("bag_on_belt") then
			create_items(npc, "bag_on_belt",1)
			if sim:story_object(story_ids.hran_sumka)==nil then
				local act_pos=npc:position()
				local lvid=npc:level_vertex_id()
				local gvid=npc:game_vertex_id()
				local pos=v3f((act_pos.x), (act_pos.y-100), (act_pos.z))
				local hran= g_sim:create("non_vis_inv",pos,lvid,gvid)
				local pk = get_netpk(hran)
				local data = pk:get()
				data.story_id   = story_ids.hran_sumka -- (11)
				data.custom_data = "[logic]\nactive = ph_idle@enable\n[ph_idle@enable]\nnonscript_usable = false\n[collide]\nignore_static"
				pk:set(data)
			end
		end 
	else
	sak_dialog.start_time("start_antichit_time")
	sak_dialog.start_time("start_treasure_time")
	end
	vergas_lib.game_load()
	local name, delay = timers.check_timer("news_check")
	if not name then
		timers.start_timer("news_check", 0, 0, 13,"news_main.check_news()")
	end
	name, delay = timers.check_timer("show_news")
	if not name then
		timers.start_timer("show_news",0,0,lua_random(17,42),"amk_mod.show_news()")
	end
	name, delay = timers.check_timer("blow_shift")
	if not name then
		amk_mod.start_blow_timer()
	end
	if not npc:has_info("game_difficulty_info") then
		local rand4=tonumber(level.get_game_difficulty())
		amk_vars.g_diff = rand4
		npc:give_info_portion("game_difficulty_info")
	end
end

function kruglov_end_time()
	db.actor:give_info_portion("krugl_end_time")
end

function dead_volk_end()
	if db.actor:has_info("esc_wolf_dead") then
		db.actor:give_info_portion("esc_kill_bandits_quest_done")
	end
end

function kolb_baded()
	if kolb then return end
	for a=1,MAX_OBJ_ID do
		local obj= g_sim:object(a)
		if obj then 
			local p_obj=obj.parent_id
			local nname = obj:name()
			if (string.sub(nname,1,7)=="mutant_" or strpos(nname,"bread") or strpos(nname,"kolbasa")) and (p_obj==nil or p_obj==BAD_OBJ_ID or p_obj==0 or str_in_tab( g_sim:object( p_obj ):section_name(), { "rucksack", "inventory_box", "rukzak_inventory_box" } ) or IsStalker(sim:object(p_obj))) then
				local pk = get_netpk(obj,1)
				local data = pk:get()
				local new_cond=0.10
				local cond = obj.condition or data.condition
				if strpos(nname,"green_kolbasa") then
					new_cond=0.02
				elseif strpos(nname,"kolbasa") then
					new_cond=0.08
				elseif strpos(nname,"mutant_chimera_kogot") then
					new_cond=0.01
				elseif strpos(nname,"mutant_krovosos_jaw") then
					new_cond=0.08
				elseif strpos(nname,"mutant_poltergeist_glas") then
					new_cond=0.05
				elseif strpos(nname,"mutant_hand_kontroler") then
					new_cond=0.05
				elseif strpos(nname,"mutant_psevdogigant_hand") then
					new_cond=0.05
				elseif strpos(nname,"mutant_e_chimera_kidney") then
					new_cond=0.035
				elseif strpos(nname,"mutant_boar_leg") then
					new_cond=0.025	
				elseif strpos(nname,"mutant_zombie_hand") then
					new_cond=0.15	
				end
				if cond and cond>0.15 then
					data.condition=cond-new_cond
					local cobj = client_obj(a)
					if cobj then
						cobj:set_condition(data.condition)
					elseif obj.condtion ~= nil then
						obj.condition = data.condition
					else
						pk:set(data)
					end
				else
					misc.release_obj(obj)           
				end
			end
		end
	end
	kolb=true
end
      
function off_testobj()
	local lname=level.name()
	local art_no_change_boxes = {
		"esc_sak_box_0001", "mil_sak_box_0001", "dv_sak_box_0001",
		"bar_sak_box_0001", "bar_sak_box_0002", "bar_sak_box_0003",
		"pri_sak_box_0001", "art_exchanger", "art_exchanger2" }
	for a=1,MAX_OBJ_ID do
	local obj= g_sim:object(a)
		if obj then 
			local p_obj=obj.parent_id
			local nname=obj:name()
			if strpos(nname,"amk_zone_teleport_",1,true)  
				or strpos(nname,"sak_skelet",1,true) 
				or strpos(nname,"_surprise_box",1,true)
				or (obj.m_game_vertex_id~=BAD_OBJ_ID and const.ground_levels[obj.level_id] and (obj:clsid()==88 or (obj:clsid()==87 and nname=="")))
				or strpos(nname,"amk_zone_greedy_",1,true) then
					misc.release_obj (obj, 'sak.script:4182')
			elseif strpos(nname,"banka_full") then
				if p_obj and p_obj~=0 then
					local par= g_sim:object(p_obj)
					misc.release_obj (obj, 'sak.script:5626')
					if par then
						misc.spawn_to("banka", par)
					end
				elseif (p_obj==nil or p_obj==BAD_OBJ_ID) then
					misc.release_obj (obj, 'sak.script:5633')
				end
			elseif strpos(nname,"^af_") and not strpos(nname,"^af_full") then
				if (not strpos(nname,"af_mayatnik_",1,true) 
					and not strpos(nname,"af_compass",1,true) 
					and not strpos(nname,"af_red_",1,true) 
					and not strpos(nname,"af_dummy_green",1,true) 
					and not strpos(nname,"af_unknown_",1,true)
					and (p_obj==nil or p_obj==BAD_OBJ_ID)) then
					--if lname=="aver" and obj.position:distance_to(v3f(350.91,-6.01,-21.23))<30 then
					if obj.position:distance_to(v3f(350.91,-6.01,-21.23))<30 then
						changed_art_class(a)
					else
						misc.release_obj (obj, 'sak.script:4193')
					end
				else
					local parent = g_sim:object(p_obj)
					if parent then
						local p_name = parent:name()
						if p_name ~= nil then -- проверяем, не лежит ли арт в платной нычке из таблицы, в схроне с меткой или у Менялы
							if str_in_tab(p_name,art_no_change_boxes) == nil
							and level.map_has_object_spot(p_obj, "crlc_big_treasure1")==0 
							and level.map_has_object_spot(p_obj, "crlc_big_treasure2")==0
							and level.map_has_object_spot(p_obj, "crlc_big_treasure3")==0
							and level.map_has_object_spot(p_obj, "crlc_big_treasure4")==0 then 
								--log2("[off_testobj] catched obj %s, id = %d with parent %s, id = %d | no tbl match, changes_art_class is called", nname,a,p_name,p_obj)
								changes_art_class(a,p_obj)
							else
								--log2("[off_testobj] catched obj %s, id = %d with parent %s, id = %d | tbl match, changes_art_class will not be called", nname,a,p_name,p_obj)
							end
						end	
					end
				end
			end
		end
	end
	
	for _,v in pairs(s_tbl) do
		v = true
	end
	s_tbl[lname] = false
	nlc_vars.need_art_spawn = s_tbl
	
	if has_alife_info("marsh_pribor_aver_start") then
		mike.marsh_pribor_aver_end()
	end
	if has_alife_info("akk_aver_start") then
		mike.akk_aver_end()
	end  
	if has_alife_info("mayatnik_aver_start_info") then
		mike.mayatnik_aver_ready()
	end  
	if has_alife_info("mayatnik_prip_start_info") then
		mike.mayatnik_prip_ready()
	end   
	if db.actor:has_info("pda_will_be_broken") then
		pda_will_brock()
		db.actor:disable_info_portion("pda_will_be_broken")
		return
	end
  ------ Смотрим, не сломать ли нам пда ----
	local brock_flag=nlc_vars.brocked_flag or lua_random(10,35)   -- первая поломка случайна	
	if db.actor:has_info("agroprom_military_case_know") then -- если закрыли Агро, не раньше
		if brock_flag > 1 then nlc_vars.brocked_flag = brock_flag-1 -- на выброс ближе к поломке
	else 	
		db.actor:give_info_portion("pda_will_be_broken")
		nlc_vars.brocked_flag = 4 + lua_random(10,35)  - tonumber(level.get_game_difficulty()) -- следующая как минимум через выброс или больше
		end
	end
end
function pda_will_brock()
	db.actor:give_info_portion("pda_is_broken")
	params.command_unbind("map")
	params.command_unbind("active_jobs")
	sak.get_command("unbind_sec map")
	sak.get_command("unbind contacts")
	sak.get_command("unbind_sec active_jobs")
	out_many_pda_broken()
	misc.spawn_to("device_pda_npc_gg", db.actor)
	nlc_vars.brocked_flag = nil
end
function pda_repaired()
	db.actor:disable_info_portion("pda_is_broken")
	local key_map=ReadIni(db.stor_ltx,"stor","map")
	if key_map=="" or key_map==nil  then 
		key_map="bind map kM" 
	end
	get_command(key_map)
	local key_pda=ReadIni(db.stor_ltx,"stor","pda")
	if key_pda=="" or key_pda==nil then 
		key_map="bind active_jobs kP" 
	end
	get_command(key_pda)
end
function pda_new()
	db.actor:give_info_portion("all_article_disable")
	db.actor:disable_info_portion("pda_is_broken")
	local key_map=ReadIni(db.stor_ltx,"stor","map")
	if key_map=="" then 
		key_map="bind map kM" 
	end
	get_command(key_map)
	local key_pda=ReadIni(db.stor_ltx,"stor","pda")
	if key_pda=="" then 
		key_map="bind active_jobs kP" 
	end
	get_command(key_pda)
	db.actor:disable_info_portion("all_article_disable")
end
local money_percent = 80
function add_docent_self_pda()
	db.actor:disable_info_portion("pda_is_broken")
	local key_map=ReadIni(db.stor_ltx,"stor","map")
	if key_map=="" or key_map==nil  then 
		key_map="bind map kM" 
	end
	get_command(key_map)
	local key_pda=ReadIni(db.stor_ltx,"stor","pda")
	if key_pda=="" or key_pda==nil then 
		key_map="bind active_jobs kP" 
	end
	get_command(key_pda)
	if nlc_vars.gg_money then
		db.actor:give_money(math.floor(nlc_vars.gg_money*(money_percent*0.01)))
		nlc_vars.gg_money = nil
	end
end
function x18_harddisc_off()
	local rnd=lua_random(1,5)
	schedule.add ("t_paus", "sak.harddisc_off_done()", 6000)
	local sound=sound_object("scripts\\hdd_out_"..rnd)
	sound:play_at_pos(db.actor, db.actor:position(), 0) 
	level.disable_input()
	bind_stalker.hide_weapon()
	local counter = nlc_vars.x18_disks or 0
	counter = counter + 1
	nlc_vars.x18_disks = counter
	if counter == 3 then
		send_tip("Ага, есть три диска! Можно топать в Бар","Вернуться к Бармену",7,15,"g_g","sak","yellow")
		db.actor:give_info_portion("barmen_x18_harddisc")
		nlc_vars.x18_disks = nil
	end
end
function x10_harddisc_off()
	local rnd=lua_random(1,5)
	schedule.add ("t_paus", "sak.harddisc_off_done()", 6000)
	local sound=sound_object("scripts\\hdd_out_"..rnd)
	sound:play_at_pos(db.actor, db.actor:position(), 0) 
	level.disable_input()
	bind_stalker.hide_weapon()
	local counter = nlc_vars.x10_disks or 0
	counter = counter + 1
	nlc_vars.x10_disks = counter
	if counter == 11 then
		send_tip("Так, кажется, это уже одиннадцатый... дальше можно не искать","Вернуться к Иванцову",7,15,"g_g","sak","yellow")
		db.actor:give_info_portion("botan_harddisc_found")
		nlc_vars.x10_disks = nil
	end
end
function harddisc_off_done()
	bind_stalker.restore_weapon()
	level.enable_input()
	create_items(db.actor, "hard_disc",1)
end
function diador_arrive()
	local bandit = level_object_by_sid(54)
	relation_registry.set_community_goodwill("stranger", bandit:id(), -5000)
end
function off_bandit_krisyk()
	local obj= g_sim:story_object(story_ids.val_bandit_krisyk)
	if obj then 
		misc.release_obj (obj, 'sak.script:4236')
	end 
end
function add_borov_treasure()
	treasure_manager.get_treasure_manager():give_treasure("mil_secret_borov")
end
function add_krysyk_treasure()
	treasure_manager.get_treasure_manager():give_treasure("val_secret_krysyk")
end
function add_krysyk_pda()
	treasure_manager.get_treasure_manager():give_treasure("agr_secret_krysyk")
end
function first_rem()
	if not has_alife_info("first_remember") then
		db.actor:give_info_portion("first_remember")
		send_tip("Кажется, я помню как туда попасть!","Воспоминание",2,20,"g_g","rememb","yellow")
	end
	level.add_pp_effector("blink.ppe", 234, false)
	level.add_pp_effector("teleport.ppe", 2006, false)
	local rand=lua_random(1,3)
	db.actor:set_actor_position(patrol("agr_sak_teleport_0001_exit"..rand.."_walk"):point(0))
	local dir=patrol("agr_sak_teleport_0001_exit"..rand.."_walk"):point(0):sub(patrol("agr_sak_teleport_0001_exit"..rand.."_look"):point(0))
	db.actor:set_actor_direction(-dir:getH())
	eff_vodka()
end
function u_agr_tele()
	local rand=lua_random(1,3)
	db.actor:give_info_portion("agr_sak_teleport_0001_exit"..rand)
end
function gar_stalker_info()
	if not has_alife_info("gar_stalker_info2") then
		if db.actor:has_info("gar_stalker_info") then
			send_tip("Знакомая личность и ствол! Кажется у Борова был умелец, который мог модифицировать оружие...","Воспоминание",2,20,"g_g","rememb","yellow")
			db.actor:give_info_portion("gar_stalker_info2")
		end
	end
end
function lim_podval_news()
	send_tip("Эту дверь не открыть даже ломом. Взорвать что ли? У Михалыча наверно есть динамит...","Заклинило что-ли?",1,15,"g_g","sak","yellow")
end
function set_gulag_enemy_actor()
	xr_gulag.setGulagEnemy("esc_dram", db.actor)
end

function zub_trader_task_no_have_timer()
	local name, delay = timers.check_timer("z_trader_t")
    if not name then
		return true
    end
		return false
end
function zub_trader_task_timer()
	timers.start_timer("z_trader_t",5,20,27,"sak.zub_trader_task_timer_end()")
end
function zub_trader_task_timer_end()
	db.actor:disable_info_portion("trader_task_failed")
end
function zub_barman_task_no_have_timer()
	local name, delay = timers.check_timer("z_barman_t")
    if not name then
		return true
    end
		return false
end
function zub_barman_task_timer()
	timers.start_timer("z_barman_t",0,20,27,"sak.zub_barman_task_timer_end()")
end
function zub_barman_task_timer_end()
	db.actor:disable_info_portion("barman_task_failed")
end
function set_gulag_freedom_enemy_actor()
	timers.start_timer("s_gul_fr_en",0,0,27,"sak.gulag_freedom_enemy_actor()")
end
function gulag_freedom_enemy_actor()
	relation_registry.set_community_goodwill("freedom", db.actor:id(), -5000)
	xr_gulag.setGulagRelation("mil_freedom", game_object.enemy, db.actor)
	db.actor:give_game_news("%c[255,160,160,160]\"Свобода\"\\n%c[default]Внимание всем нашим! Видели одного сталкера, который убил нашего! Его опознали - Меченный гад! Валите как увидите!","ui\\ui_iconsTotal", Frect():set(498,94,83,47), 3000, 15000)
end
function esc_dram_free()
	timers.start_timer("esc_dr_free",0,0,30,"sak.esc_dram_free_info()")
end
function timer_fast_start_max()
	timers.start_timer("max_attack",0,0,5,"sak.start_max_attack()")
	local gulag = xr_gulag.get_gulag_by_name("mil_freedom")
	if gulag then
		gulag.smrttrn:update()
	end
	db.actor:give_info_portion("mil_lukash_dolg_task")
	db.actor:give_info_portion("mil_bodyguard_talk")
	db.actor:give_info_portion("mil_freedom_attack")
end
function timer_start_max()
	timers.start_timer("max_attack",0,0,25,"sak.start_max_attack()")
	local gulag = xr_gulag.get_gulag_by_name("mil_freedom")
	if gulag then
		gulag.smrttrn:update()
	end
	db.actor:give_info_portion("mil_lukash_dolg_task")
	db.actor:give_info_portion("mil_bodyguard_talk")
	db.actor:give_info_portion("mil_freedom_attack")
end
function start_max_attack()
	if not has_alife_info("mil_max_arrive") then
		db.actor:give_info_portion("mil_max_arrive")
		db.actor:give_info_portion("mil_max_talk3")
		db.actor:give_info_portion("mil_max_gg_chicken")
	end
end
function timer_start_x16_on()
	timers.start_timer("x16_on",0,22,25,"sak.start_x16_on()")
end
function start_x16_on()
	if has_alife_info("yan_labx16_switcher_primary_off") then
		db.actor:disable_info_portion("yan_labx16_switcher_primary_off")
		db.actor:disable_info_portion("yan_labx16_switcher_1_off")
		db.actor:disable_info_portion("yan_labx16_switcher_2_off")
		db.actor:disable_info_portion("yan_labx16_switcher_3_off")
	end
end

function esc_dram_free_info()
	db.actor:give_info_portion("esc_dram_gulag_free_info")
end
function set_mil_gulag_enemy_actor()
	xr_gulag.setGulagEnemy("mil_freedom", db.actor)
end
function set_val_gulag_enemy_actor()
	xr_gulag.setGulagEnemy("val_dram", db.actor)
	xr_gulag.setGulagEnemy("val_x18_exit_base", db.actor)
end
function psevdowounded_help()
	send_tip("Помогите кто-нибудь, бандюки напали! Я на Свалке, у развалин, за долговским блокпостом...","Добавлена метка на сигнал 'SOS'",0,20,"stalker","sak","red")
end
function get_inv_name(section)
  return system_ini():r_string(section,"inv_name")
end

function relocate_item(actor, type, item, amount, is_ammo_count)
    
	if actor==nil then return false end
	if not amount then amount=1 end
  
	if razgruzka.is_ammo(item) and not is_ammo_count then
		amount = amount * vergas_lib.get_box_size(item) 
	end
  
	local icon = "ui_iconsTotal_found_thing"
	local msg  = "%c[255,1,255,1]"..game.translate_string("general_in_item")
	if type=="out" then    
		icon = "ui_iconsTotal_lost_thing"         
		msg  = "%c[255,255,1,1]"..game.translate_string("general_out_item")
	end  
	local task_texture, task_rect=get_texture_info(icon)    
    
	local news_text = msg.."\\n".."%c[default]"..game.translate_string(get_inv_name(item)).." - "..amount.." шт."
	if actor:is_talking() then
		actor:give_talk_message(news_text, task_texture, task_rect,"iconed_answer_item")
		else
		actor:give_game_news(news_text, task_texture, task_rect, 0, 3000)
	end

end
function send_treasure(name)
	local level_name={}
	level_name["esc"]  = "Кордон"
	level_name["gar"]  = "Свалка"
	level_name["agr"]  = "НИИ Агропром"
	level_name["val"]  = "Тёмная долина"
	level_name["mil"]  = "Армейские склады"
	level_name["yan"]  = "Янтарь"
	level_name["rad"]  = "Радар"
	level_name["pri"]  = "Припять"
	level_name["bar"]  = "Территория Долга"
	level_name["ros"]  = "Дикая территория"
	level_name["mar"]  = "Болота"
	level_name["lim"]  = "Лиманск"
	level_name["hos"]  = "Санаторий"
	level_name["aver"] = "Туманная чаща"
	level_name["red"]  = "Рыжий лес"
	level_name["gen"]  = "Зона Тесла"
	level_name["dsc"]  = "Кишка"
	level_name["lost"] = "Забытый хутор"
	level_name["dea"]  = "Иванковский райцентр"	
	amk.pda_news:play(db.actor, 0, sound_object.s2d)
	local task_texture, task_rect=get_texture_info("ui_iconsTotal_found_thing")
	local level_key=string.sub(name,1,strpos(name,"_s",1,plain)-1)
	local tmp_str=""
	if level_name[level_key]~=nil then
		tmp_str=level_name[level_key]..": "
	else 
		tmp_str="Где-то там: "
	end
	local news_text="%c[255,1,255,255]"..game.translate_string("st_found_new_treasure").."\\n".."%c[120,255,120,160]"..tmp_str.."%c[170,200,200,200]"..game.translate_string(name)
	if db.actor:is_talking() then
		db.actor:give_talk_message(news_text, task_texture, task_rect,"iconed_answer_item")
	else
		db.actor:give_game_news(news_text, task_texture, task_rect, 2000, 25000)
	end  
end
function u_agr_tele_in()
	sak_tele_klyk()
end
function sak_tele_klyk()
	local start_tele=false
	local obj_id,obj=-1,nil
	for i,k in pairs(sak_inventory.belt_items) do
		if strpos(i,"af_electra_sparkler",1,true) and not strposx(i,"dyn6d") then
			obj_id=k[1]
			obj= g_sim:object(obj_id)
			start_tele=true
			break
		end
	end
	if obj==nil then
		return
	end
	if arts_operate and start_tele then
		local pk = get_netpk(obj,1)
		local data = pk:get()
		local cond=data.condition+0.0004
		if cond>=1 then
			cond=0.9999
		end
		local cond1=math.floor(cond*100)
		if cond1>= 36 then
			local new_cond = (cond1 - 20) / 100
			params.obj_condition(client_obj(obj.id):id(),new_cond)
			data.condition = new_cond
			pk:set(data)
		else
			misc.release_obj(obj)
		end
		level.add_pp_effector("blink.ppe", 234, false)
		level.add_pp_effector("teleport.ppe", 2006, false)
		eff_vodka()
		local dir=patrol("agr_sak_teleport_0002_exit_walk"):point(0):sub(patrol("agr_sak_teleport_0002_exit_look"):point(0))
		db.actor:set_actor_position(patrol("agr_sak_teleport_0002_exit_walk"):point(0))
		db.actor:set_actor_direction(dir:getH())
	end
end
function sak_tele_mar()
	sak_tele_art("mar")
end
function sak_tele_dsc()
	sak_tele_art("dsc")
end
function sak_tele_mil()
	sak_tele_art("mil")
end
function sak_tele_esc()
	sak_tele_art("esc")
end
function sak_tele_yan()
	sak_tele_art("yan")
end
function sak_tele_prip()
	sak_tele_art("prip")
end
function sak_tele_agru()
	sak_tele_art("agru")
end
function sak_tele_aver()
	sak_tele_art("aver")
end
function agru_add_compass()
	local obj_hran= g_sim:story_object(story_ids.u_agr_inventory_box_klyk)
	if obj_hran then
		local obj= g_sim:create("af_compass_dyn1d",obj_hran.position, obj_hran.m_level_vertex_id, obj_hran.m_game_vertex_id, obj_hran.id)
		local pk = get_netpk(obj,1)
		local data = pk:get()
		data.custom_data = "agru_tele_aver"
		pk:set(data)
	end
	db.actor:give_info_portion("doctor_said_all_info")   
end

function sak_tele_art(path)
	local start_tele=false
	local obj_id,obj=-1,nil
	local inf=""
	local pk
	local data
	for i,k in pairs(sak_inventory.belt_items) do
		if strpos(i,"af_compass_",1,true) and not strposx(i,"dyn6d") then	
			obj_id=k[1]
			obj= g_sim:object(obj_id)
			pk = get_netpk(obj,1)
			data = pk:get()
			inf=data.custom_data or ""
			if inf~="" and strpos(inf,"^"..path.."_") then
				start_tele=true 
				break
			end
		end
	end
	if obj==nil then
		return
	end
	if arts_operate and start_tele and pk then
		local cond=data.condition+0.0004
		if cond>=1 then
			cond=0.9999
		end
		local cond1=math.floor(cond*100)
		if cond1>= 36 then
			local new_cond = (cond1 - 20) / 100
			params.obj_condition(client_obj(obj.id):id(),new_cond)
			data.condition = new_cond
			pk:set(data)
		else
			misc.release_obj(obj)
		end
		level.add_pp_effector("blink.ppe", 234, false)
		level.add_pp_effector("teleport.ppe", 2006, false)
		eff_vodka()
		db.actor:set_actor_position(patrol(inf):point(0))
	end
end

function add_bandit_body()
	local obj= create_corpse ("ros_bandit_respawn_3",
                                            v3f(-292.71,-3.0,-195.81),260,797,
                                            9495,
                                            "[dont_spawn_character_supplies]\n[known_info]\nagr_bandit_name")                                                      
	misc.spawn_to("harmonica_b", obj)
end
function borov_11_have_info()
	timers.start_timer("borov_11",lua_random(5,30),"sak.info_borov_11()")
end
function timer_muller_1()
	add_muller_treasure()
	timers.start_timer("timer_muller_1",0,3,30,"sak.timer_muller_end()")
end
function timer_muller_2()
	add_muller_treasure2()
	timers.start_timer("timer_muller_2",0,7,30,"sak.timer_muller_end()")
end
function add_muller_treasure()
	local treases={5855,5851,5859,5861,5863}
	local sid=lua_random(1,#treases)
	local obj= g_sim:story_object(treases[sid])
	if obj then
	local rand = lua_random(2,3)
		for a=1,rand do
			misc.spawn_to("antirad", obj)
			misc.spawn_to("medkit_army", obj)
		end
	end
end
function timer_muller_end()
	if not db.actor:has_info("bar_korovan_info2") then
	local obj= g_sim:story_object(story_ids.agr_muller)
		if obj and IsStalker(obj) then
			local pk = get_netpk(obj)
			local data = pk:get()
			data.health     = 0
			data.upd.health = 0
			data.custom_data = "[dont_spawn_character_supplies]\n[known_info]\nmuller_umer"
			pk:set(data)
		end
	end
end
function timer_docs_sidor()
	timers.start_timer("time_docs_sidor",0,1,55,"sak.timer_docs_sidor_end()")
end
function timer_docs_sidor_short()
	timers.start_timer("time_docs_sidor",0,0,15,"sak.timer_docs_sidor_end()")
end
function timer_docs_sidor_end()
	if not db.actor:has_info("escape_lager_volk_document_done") then
		send_tip("Меченный, зайди ко мне, есть дело для тебя!","Сообщение от Сидоровича",11,20,"trader","sak", "red")
		db.actor:give_info_portion("escape_lager_volk_document_done")
	end
end
function start_timer_return_x18()
	timers.start_timer("return_x18",2,lua_random(1,7),11,"sak.timer_return_x18_end()")
end
function timer_return_x18_end()
	send_tip("Сталкеры, если есть желание рискнуть, но получить достойную награду, заходите!\\nМеченный, тебя это касается в первую очередь","Сообщение от Бармена",11,20,"barman","sak", "green")
	db.actor:give_info_portion("return_x18_info")
end

function fox_timer_start()
	timers.start_timer("fox_timer",0,1,03,"sak.fox_timer_start_end()")  
end
function fox_timer_start_end()
	if not has_alife_info("escape_fox_heal") then
		local npc = db.actor 
			npc:give_info_portion("esc_fox_thanks")
			npc:give_info_portion("esc_fox_umer")
			npc:give_info_portion("escape_stalker_done")
		local obj= g_sim:story_object(story_ids.esc_fox)
		if  level.name()=="l01_escape" and obj.online then
			if obj and obj:alive() then
				obj = client_obj(obj.id)
				obj:kill(obj)
			end
		else
			if obj then
				local pk = get_netpk(obj)
				local data = pk:get()
				data.health     = 0
				data.upd.health = 0
				pk:set(data)
			end
		end
	end
end
function timer_shustr_of_wolf()
	timers.start_timer("shustr_of_wolf",0,1,29,"sak.timer_shustr_of_wolf_end()")
end
function timer_shustr_of_wolf_end()
	db.actor:give_info_portion("tutorial_wounded_start")
	if not has_alife_info("escape_factory_assault_say_hello") and not has_alife_info("help_to_volk") then
		db.actor:give_info_portion("escape_factory_assault_say_hello")
		db.actor:give_info_portion("atp_bandits_open_fire")
		db.actor:give_info_portion("esc_bandits_start")
	end
end
function timer_quick_shustr_of_wolf()
	timers.start_timer("shustr_of_wolf",0,0,29,"sak.timer_quick_shustr_of_wolf_end()")
end
function timer_quick_shustr_of_wolf_end()
	if not has_alife_info("escape_factory_assault_say_hello") and not has_alife_info("help_to_volk") then
		db.actor:give_info_portion("escape_factory_assault_say_hello")
		db.actor:give_info_portion("atp_bandits_open_fire")
		db.actor:give_info_portion("esc_bandits_start")
	end
end
-- max_sms_kordon
function timer_max_things()
	timers.start_timer("max_things",0,0,5,"sak.max_things_attantion()")
end      
function max_things_attantion()
	if not has_alife_info("max_good_start") then
		send_tip("Мужики, если кто-то поблизости от Армейских складов собирается на Кордон - подходите на базу Свободы, дело есть...","Макс",1,20,"freedom","sak", "green")
		db.actor:give_info_portion("max_good_start")
	end
end
function ivancov_case_good()
	send_tip("Меченный, будешь в Баре - подойди, поговорим!","Сообщение от Иванцова",11,20,"dolg","sak", "green")
	if not has_alife_info("ivancov_good_start") then
		db.actor:give_info_portion("ivancov_good_start")
	else
		db.actor:give_info_portion("ivancov_gg_news_start")
	end
end
function timer_barman_2()
	timers.start_timer("timer_barman_2",lua_random(300,600),"sak.timer_barman_2_end()")
end
function timer_barman_2_end()
	send_tip("Меченный, зайди ко мне, есть дело для тебя!","Сообщение от Бармена",11,20,"barman","sak", "green")
	db.actor:give_info_portion("bar_x16_documents_know")  
end
function timer_barman_3()
	timers.start_timer("timer_barman_3",lua_random(300,600),"sak.timer_barman_3_end()")
end
function timer_barman_3_end()
	send_tip("Меченный, зайди ко мне, есть дело для тебя!","Сообщение от Бармена",11,20,"barman","sak", "green")
	db.actor:give_info_portion("bar_x18_documents_know")
	voronin_job_timer()
end
function add_krest_spawn()
	local shape={shtype=0,radius=5.0,center={0,0.5,0}}
	amk_anoms.spawn_anomaly("amk_zone_sakbuzz_strong",v3f(120.18,-0.10,-137.35),408,282673, shape, "static")  
end
function info_borov_11()
	if not has_alife_info("esc_bridge_pass_fire") then
		send_tip("Меченный, мне сообщили, что тебя видели в Тёмной долине. На меня Сахаров вышел - говорит, там какая-то их экспедиция пропала, а ему нужны результаты той экспедиции. Так что, если найдёшь там что, - тащи Сахарову!","Сообщение от Сидоровича",11,20,"trader","sak", "red")
	end 
	db.actor:give_info_portion("borov_11_saharov_start")
end
function add_sidor_info_kuzn()
	if not has_alife_info("esc_kuzn_umer") then
		send_tip("Сталкеры! Вояки в Долине рейд проводят - не суйтесь туда. Одним из отрядов в оцеплении командует наш хороший знакомый из-под моста. Просил не нарываться в районе перехода с Долины на Свалку...","Сообщение от Сидоровича",11,20,"trader","sak", "red")
		db.actor:give_info_portion("sidor_info_kuzn")
		timers.start_timer("timer_kuzn",1,5,0,"sak.timer_timer_kuzn_end()")
	end
end
function timer_timer_kuzn_end()
	db.actor:disable_info_portion("sidor_info_kuzn")
end
function info_borov_entres()
	send_tip("Это Пахан. В общем, сделано всё, можешь двигать...","Сообщение для Меченного",11,20,"death","sak", "red")
	val_beton_block_off()  
end
function info_barman_entres()
	send_tip("Здесь Бармен. В общем, сделано всё, можешь двигать...","Сообщение для Меченного",11,20,"barman","sak", "red")
	val_beton_block_off()
	db.actor:give_info_portion("info_scafandr_start")	
end
function info_kulinar_entres()
	send_tip("Это Кулинар. В общем, сделано всё, можешь двигать...","Сообщение для Меченного",11,20,"stalker","sak", "red")
	val_beton_block_off()
	db.actor:give_info_portion("info_scafandr_start")	
end
function info_voron_entres()
	send_tip("Это Ворон. В общем, сделано всё, можешь двигать...","Сообщение для Меченного",11,20,"stalker","sak", "red")
	val_beton_block_off()
	db.actor:give_info_portion("info_scafandr_start")	
end
function val_beton_block_off()
	for d=100,25000,1 do
		local art= g_sim:object(d)
		if art then
			if strpos(art:name(),"val_beton_block_",1,true) or strpos(art:name(),"val_not_beton_block_",1,true) then
				misc.release_obj(art, 'sak.script:4749')
			end
		end
	end  
end
function val_konteyner_off()
	for i=1,3 do
		local obj = g_sim:object("val_konteyner_0"..i)
		if obj then
			misc.release_obj(obj)
		end
	end
end
function esc_trader_start_timer()
	timers.start_timer("dymon_quest",17,"sak.send_dymon_start_quest()")
end
function send_dymon_start_quest()
	db.actor:give_info_portion("gar_start_graveyard")
	db.actor:give_info_portion("gar_animation_radio")
	news_manager.send_tip(db.actor, "tips_gar_hellcar_alarm", 2, "stalker", 10000)
	timers.start_timer("start_quest",343,"sak.esc_trader_start_quest()")
end
function esc_trader_start_quest()
	local npc=db.actor
	if not has_alife_info("esc_bridge_pass_fire") and not has_alife_info("esc_serious_talk") and has_alife_info("helping_fox") then
		send_tip("Меченный, есть одно дело... Забегай по возможности.","Сообщение от Сидоровича",0,20,"trader","sak", "red")
	end
	if not has_alife_info("tutorial_wounded_give_info") then
		npc:give_info_portion("atp_bandits_open_fire")
		npc:give_info_portion("esc_shustryi_umer")
		local obj= g_sim:story_object(story_ids.esc_shustryi)
		if  level.name()=="l01_escape" and obj.online then
			if obj and obj:alive() then
				obj = client_obj(obj.id)
				obj:kill(obj)
			end
				else
			if obj then
				local pk = get_netpk(obj)
				local data = pk:get()
				data.health     = 0
				data.upd.health = 0
				pk:set(data)
			end
		end
	end
	if not has_alife_info("trader_job") then
		sak_spawn.add_esc_ambush_monsters()
		misc.spawn_by_name("esc_mogila_01")
		misc.spawn_by_name("esc_mogila_02")
		misc.spawn_by_name("esc_mogila_03")
		misc.spawn_by_name("esc_mogila_04")
	end
	npc:give_info_portion("esc_serious_talk")
	npc:give_info_portion("trader_job")
	npc:give_info_portion("escape_lager_volk_document_done")
	npc:give_info_portion("esc_kill_bandits_quest_have")
	npc:give_info_portion("esc_kill_bandits_quest_done")
	npc:give_info_portion("tutorial_wounded_start")
	npc:give_info_portion("tutorial_wounded_start_new")
	npc:give_info_portion("tutorial_end")
	npc:give_info_portion("kvest_art_done")    
	if not has_alife_info("gar_dm_bandits_change_st") then
		npc:give_info_portion("gar_dm_bandits_change_st")
	end
end
function marsh_factory_level_changer()
	level.add_pp_effector("red_teleport.ppe", 1529, false)
	local a=v3f(-316.83996582031,12,-162.28175)
	db.actor:set_actor_position(a)
end

local colours={
				red="%c[255,255,1,1]",
				green="%c[255,1,255,1]",
				blue="%c[255,1,1,255]",
				sky_blue="%c[255,1,255,255]",
				yellow="%c[255,255,255,1]",
				pink="%c[255,255,1,255]",
				gray="%c[255,160,160,160]"
				}
pda_rem=xr_sound.get_safe_sound_object([[device\pda\accent_1]])
pda_sos=xr_sound.get_safe_sound_object([[device\pda\pda_sos]])

function send_tip(news_text, header, timeout, showtime, sender, sound, colour, dlg)
	if news_text==nil or db.actor:has_info("pda_is_broken") then return end
	if header==nil then header=game.translate_string("st_tip") end
	if timeout==nil then timeout=0 end
	if showtime==nil then showtime=5 end
	if colour==nil then colour="gray" end
	if dlg==nil then dlg=true end
	if sender==nil then sender="default" end
	local x=amk.tips_icons[sender][1]
	local y=amk.tips_icons[sender][2]  
	local news_text=colours[colour]..header.."\\n".."%c[default]"..news_text
	if db.actor:is_talking() and dlg then
		db.actor:give_talk_message(news_text, "ui\\ui_iconsTotal", Frect():set(x,y,83,47),"iconed_answer_item")
	else
		db.actor:give_game_news(news_text, "ui\\ui_iconsTotal", Frect():set(x,y,83,47), timeout*1000, showtime*1000)
	end
	local player = amk.pda_tips
	if sound=="news" then
		player=amk.pda_news
	elseif sound=="task" then
		player=amk.pda_task
	elseif sound=="sak" then
		player=pda_sos
	elseif sound=="rememb" then
		player=pda_rem
	elseif sound=="no" then
		player=nil
	end
	if player then
		player:play(db.actor, timeout, sound_object.s2d)
	end
	return true
end

function show_coordinates()
	local hud=get_hud()
	local cs=hud:GetCustomStatic("cs_debug")
	if cs==nil then
		hud:AddCustomStatic("cs_debug", true)
		cs=hud:GetCustomStatic("cs_debug")
	end
    local dir=device().cam_dir
    local a=vector()
    a.x=math.atan2(-dir.y,dir.z)
    a.y=math.atan2(-dir.x,dir.z)  
    a.z=math.atan2(-dir.y,dir.x)
	local lvid, gvid=db.actor:level_vertex_id(), db.actor:game_vertex_id()
	local pos, dir=db.actor:position(), db.actor:direction()
	local pos2=level.vertex_position(lvid)
	local pos3=device().cam_pos
	local d=vector():sub(pos, pos2)
	local vdist=level.vertex_position(lvid):distance_to(db.actor:position())
	local valid=(math.abs(d.x) <= 0.35 and math.abs(d.y)<1.0 and math.abs(d.z) <= 0.35)
	local msg=string.format("lvid: %d\\n", lvid) ..
        string.format("gvid: %d\\n", gvid) ..
        string.format("pos: %.2f, %.2f, %.2f\\n", pos.x, pos.y, pos.z) ..
        string.format("cam: %.2f, %.2f, %.2f\\n", pos3.x, pos3.y, pos3.z) ..
        string.format("dir: %.2f, %.2f, %.2f\\n", a.x,a.y,a.z) ..
        string.format("lv_dist: %.1f\\n", vdist) ..
        "valid: " .. tostring(valid)
	if cs~=nil then
		cs:wnd():SetText(msg)
	end
end
function borov_summa_fix()
	local bablo=db.actor:money()
	nlc_vars.borov_summa_fix  = bablo*0.5
end
function out_many_for_rep_up()
	local many=nlc_vars.borov_summa_fix or 0
	local bablo=db.actor:money()
	if many==0 and bablo>200 then
		db.actor:give_money(-(bablo)/4)
	end
	if bablo <=many then
		many_for_rep=false
	else
		db.actor:give_money(-(bablo-many)/25)
		nlc_vars.borov_summa_fix = 0
	end
end
function add_money(num)
	local summa=lua_random(15,75)*num
	local actor=db.actor
	dialogs.relocate_money(actor, summa, "in")
	if actor:has_info("pda_is_broken") then
		nlc_vars.many_cash = summa
	end
	if actor:object("lot_many")==nil and actor:object("shadow_inventory") then
		misc.spawn_to("lot_many", actor)
		actor:give_info_portion("dollars_have")
	end
end
function add_mfake_af(sect)
	local af=string.gsub(sect, "mfake_af", "af")
	misc.spawn_to(af, db.actor)
end

function actor_hide_weapon()
	level.disable_input()
	bind_stalker.hide_weapon()
end

function restore_weap()
	bind_stalker.restore_weapon()
	level.enable_input()
end
function rectore_weap()
	restore_weap()
end
function bar_korovan_3()
	for i=1,7 do
		amk.spawn_item("weapon_box",v3f(-182.0,1.86,-321.86),689,54409)
	end
	local spot=lua_random(1,4)
	local objt= g_sim:story_object(story_ids.agr_korovan_zone)
	if objt then
		amk.add_spot_on_map(objt.id, "crlc_big_treasure"..spot, "Место нападения на караван с оружием")
	end  
end
function off_spot_korovan_3()
	local obj= g_sim:story_object(story_ids.agr_korovan_zone)
	if obj then
		for spot=1,4 do
			amk.remove_spot_from_map(obj.id, "crlc_big_treasure"..spot)
		end
		misc.release_obj(obj, 'sak.script:5017')
	end
end
function marsh_tuzla(tips)
	local spawn={
				{-182.90888977051,2.315,536.8695678710,78724,3381},
				{-182.25994873047,2.195,535.7277221679,78724,3381},
				{-181.11927795410,2.186,535.9463500976,78724,3381},
				{-180.32078552246,2.285,535.1679077148,78724,3381},
				{-181.25959777832,2.099,533.5667724609,78724,3381},
				{-184.43092346191,2.281,536.0263061523,78724,3381},
				{-184.72573852539,2.189,532.9875488281,78724,3381}
				}
	for i=1,7 do
		local rand=lua_random(2,9)
		local obj=amk.spawn_item("marsh_document",v3f(spawn[i][1],spawn[i][2],spawn[i][3]),spawn[i][5],spawn[i][4])
		if obj then
			local pk = get_netpk(obj,1)
			local data = pk:get()
			data.custom_data = "new_item\\documents_"..rand
			data.mass=2
			pk:set(data)
		end
	end
	local trup=create_corpse ("trup_marsh_tuzla",
                           v3f(-181.44,2.11,534.19),3393,119948,
                           9494)  
	misc.spawn_to("resiept_activ_anom", trup)
	local kont = g_sim:create("arc_art_box_basic", trup.position, trup.m_level_vertex_id, trup.m_game_vertex_id, trup.id)
	if kont then
		local capsule=sak_dialog.any_cart_capsule()
		local pk = get_netpk(kont)
		local data = pk:get()
		data.custom_data = capsule.."_dyn"..tostring(1+tips).."d_99,af_vyvert_dyn5d"
		pk:set(data)
	end
end
function add_gen_mil_items()
	local obj= g_sim:story_object(story_ids.gen_inventory_box_military)
	if obj then
		misc.spawn_to("af_compass_dyn5d", obj)
		for a=1,5 do
			misc.spawn_to("medkit_scientic", obj)
			misc.spawn_to("antirad", obj)
		end
	end
	if obj.online then
		g_sim:set_switch_online(obj.id, false)
		g_sim:set_switch_offline(obj.id, true)
		amk.convert_npc[obj.id]=1
	end			   
	obj= g_sim:story_object(story_ids.gen_ecolog_body_2)
	if obj then
		misc.spawn_to("gen_mil_letter", obj)
	end
end

local trs_sound_flag,trs_sound_sid=false,nil
function on_use_obj(obj)
	if obj:clsid()==CLID_INVENTORY_BOX then
		local act=db.actor
		local story=obj:story_id()
		if trs_sid_sound[story] then
			local activ=act:active_slot()
			if activ==NONE_SID or activ==NONE_CL_SID then
				local rnd_snd=trs_sid_sound[story]
				local sound=sound_object("script_sound\\treasure_sounds\\treasure_"..rnd_snd.."_open")
				sound:play_at_pos(act, act:position(), 0)
				trs_sound_flag=true
				trs_sound_sid=story
			end
		end
		sak_minigame.thimbles_explosion(obj)
	end
end
function on_close_treas()
	if trs_sound_flag then
		trs_sound_flag=false
		local act=db.actor
		if trs_sid_sound[trs_sound_sid] then
			local rnd_snd=trs_sid_sound[trs_sound_sid]
			local sound=sound_object("script_sound\\treasure_sounds\\treasure_"..rnd_snd.."_close")
			sound:play_at_pos(act, act:position(), 0)
		end
	end
end
function val_escort_actor_at_ambush()
	local actor=db.actor
	local bandit1=level_object_by_sid(407)
	local bandit2=level_object_by_sid(408)
	local bandit3=level_object_by_sid(403)
	if bandit1 then
		bandit1:set_relation(game_object.enemy, actor)
	end
	if bandit2 then
		bandit2:set_relation(game_object.enemy, actor)
	end
	if bandit3 then
		bandit3:set_relation(game_object.enemy, actor)
	end
end
function close_window()
	local win=level.main_input_receiver()
	if win then
		win:GetHolder():start_stop_menu(win,true)
	end
end
function sidor_in()
	local objt= g_sim:story_object(story_ids.escape_trader)
	if not objt then
		local trader = misc.spawn_by_name("escape_trader")
		if trader and trader.online then
			log2("sidor on/off")
			g_sim:set_switch_online(trader.id, false)
			g_sim:set_switch_offline(trader.id, true)
			amk.convert_npc[trader.id]=1
		end
	end
end
function sidor_out()
	local objt= g_sim:story_object(story_ids.escape_trader)
	if objt then
		misc.release_obj(objt, 'sak.script:5163')
	end
end
function provodnik_body_out()
	misc.release_by_name("marsh_provodnik_sev_khutor_body")
	local id = nlc_vars.marsh_gigant_id
	if id ~= nil then
		misc.release_obj(id,'releasing marsh_gigant')
		nlc_vars.marsh_gigant_id = nil
	end
	timers.start_timer("marsh_prdk",1,10,0,"sak.marsh_provodnik_sev_khutor()")
end
function marsh_provodnik_sev_khutor()
	db.actor:give_info_portion("marsh_provodnik_life")	
end
function mar_flash()
	level.add_pp_effector("teleport.ppe", 1524, false)
	vergas_lib.s_play([[anomaly\anomaly_gravy_blast00]])
	lost_desertirs_out()
end
local sounds_types={
				marsh="Outdoors",
				aver="Forest",
				atp_for_test22="Outdoors",
				generators="Outdoors",
				hospital="Hospital",
				limansk="Limansk",
				deadcity="Limansk",
				lost_village="Outdoors",
				puzir="Forest",
				red_forest="Forest",
				av_peshera="Peshery",
				peshera="Peshery",
				warlab="Underground",
				l01_escape="Outdoors",
				l02_garbage="Outdoors",
				l03_agroprom="Outdoors",
				l03u_agr_underground="Underground",
				l04_darkvalley="Outdoors",
				k01_darkscape="Outdoors",
				l04u_labx18="Underground",
				labx8="Underground",
				labx10="Underground",
				l05_bar="Outdoors",
				l06_rostok="Rostok",
				l07_military="Outdoors",
				l08_yantar="Outdoors",
				l08u_brainlab="Underground",
				l10_radar="Outdoors",
				l10u_bunker="Underground",
				l11_pripyat="Pripyat",
				l12_stancia_new="Outdoors",
				l12_stancia_2_new="Outdoors",
				l12u_control_monolith="Stancia",
				l12u_sarcofag="Stancia"
				}
local fall_objects={
				"physics\\box\\box_1c.ogf",
				"physics\\box\\box_lab_033.ogf",
				"physics\\box\\box_wood_01.ogf",
				"physics\\box\\box_wood_tara.ogf",
				"physics\\box\\seif_01.ogf",
				"physics\\box\\expl_dinamit.ogf",
				"physics\\box\\box_metall_01.ogf",
				"physics\\dead_body\\skelet_combine_pose_04.ogf",
				"dynamics\\medical_object\\wheel_litter_01_braked.ogf",
				"physics\\balon\\bochka_close_3.ogf",
				"physics\\balon\\bidon.ogf",
				"physics\\balon\\bochka_fuel.ogf"
				}
local table_skelets={
				"physics\\dead_body\\skelet_combine_pose_00.ogf",
				"physics\\dead_body\\skelet_combine_pose_01.ogf",
				"physics\\dead_body\\skelet_combine_pose_02.ogf",
				"physics\\dead_body\\skelet_combine_pose_03.ogf",
				"physics\\dead_body\\skelet_combine_pose_04.ogf",
				"physics\\dead_body\\skelet_combine_pose_05.ogf",
				"physics\\dead_body\\skelet_combine_pose_06.ogf",
				"physics\\dead_body\\skelet_crash.ogf",
				"physics\\dead_body\\skelet_crash_monster.ogf"
				}
function add_sak_skelets(lname)

	local block_spawn = xray_vars.load_table(nlc_vars, "block_spawn", {})
	for i = #block_spawn, 1, -1 do
		v = v - 1
		if v <= 0 then 
			block_spawn[i] = nil 
		end 
	end  

	local idl = FindSpawnIDS(lname.."_surprise_box*", 'by_name', false, true)
	local err = 0
	for k,v in pairs(idl) do            
		if ( lua_random() < 0.15 ) and not block_spawn[v] then
			if nil == misc.spawn_by_index(v) then err = err + 1 end
				block_spawn[v] = 15       
			end
		end
	nlc_vars.block_spawn = block_spawn  
  
	if err > 0 then
		wprintf(" errors = %d, idl: ", err)
		dump_table(idl)
	end

end

local table_winds={
				"ambient\\wind_gusty_1",
				"ambient\\wind_gusty_2",
				"ambient\\wind_gusty_3",
				"ambient\\wind1",
				"ambient\\wind2",
				"ambient\\wind3",
				"ambient\\wind_trees_1",
				"ambient\\wind_trees_2",
				"ambient\\wind_trees_3"
				}

local f_s_flag=true
local visual_eff={"elektra","tramplin","voronka","garka","karusel","holodec","g_puh","pustishka"}
function get_vis_eff(pos, hit_flag)
	local act = db.actor
	local rand_vis=visual_eff[lua_random(1,#visual_eff)]
	local particle = particles_object(vergas_art.visual_effect[rand_vis][1])
	local sound = sound_object(vergas_art.visual_effect[rand_vis][2])
	particle:play_at_pos(pos) 
	sound:play_at_pos(act,pos,0)	
	
	if hit_flag then
		local h = hit()
		h.draftsman = act
		h:bone("bip01_spine")
		local hit_str = vergas_art.visual_effect[rand_vis][3] or "st"
		if hit_str=="sh" then
			h.type = hit.shock
			h.power = 0.25
		elseif hit_str=="ch" then
			h.type = hit.chemical_burn
			h.power = 0.35
		else
			h.type = hit.strike
			h.power = 0.2
		end
		act:hit(h)
		vergas_lib.s_play(pain_snd_tbl[lua_random(#pain_snd_tbl)],1)
	end
end
function fear_sounds()
	if f_s_flag then f_s_flag=false return end
	local actor=db.actor
	local act_pos=actor:position()
	if amk_anoms.check_coordinates(act_pos) then
		local lvid=actor:level_vertex_id()
		local gvid=actor:game_vertex_id()
		local lname=level.name()
		local radius=3
		local dir=vector_rotate_y(actor:direction(),(240-20*lua_random(1,6)))
		local lv=level.vertex_in_direction(actor:level_vertex_id(), dir, radius)
		local pos
		if not lv then
			lv=actor:level_vertex_id()
			pos=actor:position():add(v3f(dir.x*radius, 0, dir.z*radius))
		else
			pos=level.vertex_position(lv)
		end
		local rands=lua_random(1,4)
		if lname~="aver" then
			if rands==1 and const.ground_levels[lname] then
				get_vis_eff(pos,false)
			elseif rands==2 then
				local robjd=amk.spawn_item("fear_sound_item",pos,gvid,lv)
				if robjd then
					local pk = get_netpk(robjd,1)
					local data = pk:get()
					data.custom_data = "[logic]\ncfg=scripts\\fear_sound_"..sounds_types[lname]..".ltx"
					data.mass=0.1
					pk:set(data)
				end
			elseif rands==3 and const.ground_levels[lname] then
				pos=actor:position():add(v3f(dir.x*10, 2, dir.z*10))
				phantom_manager.spawn_phantom(pos)
			elseif rands==4 and const.ground_levels[lname] then
				add_rad()
			end
		else
			if not (act_pos.y>-24 and act_pos.y<-21) then 	
				if rands==1 then	  
					local obj = misc.spawn_obj("fall_object", v3f(act_pos.x, act_pos.y+5, act_pos.z))
					local rand_vis=fall_objects[lua_random(1,#fall_objects)]
					if obj then
						local pk = get_netpk(obj,1)
						local data = pk:get()
						data.visual_name=rand_vis
						data.mass=20
						pk:set(data)          
						schedule.add ("hit_obj","sak.hit_item("..obj.id..")",500)
					end
				elseif rands==2 then
					get_vis_eff(pos,true)
				elseif rands==3 then
					if lua_random()>0.4 then
						local robjd=amk.spawn_item("fear_sound_item",pos,gvid,lv)
						if robjd then
							local pk = get_netpk(robjd,1)
							local data = pk:get()
							data.custom_data = "[logic]\ncfg=scripts\\fear_sound_"..sounds_types[lname]..".ltx"
							pk:set(data)
						end
					else
						local dir=device().cam_dir
						local coor_x=-dir.x
						local coor_y=dir.y
						local coor_z=-dir.z
						params.set_direction(coor_x,coor_y,coor_z)
					end
				elseif rands==4 then
					add_rad()
				end
			end
		end
	end
end

local safety_tesla_points={
{2000,0,2000},
{206.16273498535,28.530590057373,-568.36614990234,574392,3143},
{188.88790893555,28.407052993774,-579.87365722656,554502,3137},
{177.28559875488,28.813053131104,-567.64813232422,540907,3137},
{167.05584716797,28.335535049438,-560.47973632813,529569,3137},
{172.37252807617,30.219163894653,-526.41491699219,535378,3134},
{210.62889099121,30.627838134766,-507.61877441406,579218,3146},
{252.20384216309,16.764856338501,-443.83535766602,627615,3152},
{253.73162841797,19.819845199585,-420.94604492188,629337,3152},
{206.74211120605,17.855730056763,-381.42178344727,574632,3141},
{169.75051879883,17.507637023926,-356.78179931641,533150,3141},
{139.97927856445,19.70422744751,-342.45495605469,498423,3124},
{86.832130432129,29.537908554077,-371.22845458984,437515,3115},
{53.825637817383,29.25489616394,-404.47604370117,399047,3113},
{13.962972640991,27.124355316162,-427.95587158203,351875,3113},
{24.507537841797,24.311304092407,-462.35305786133,364587,3113},
{38.675411224365,32.186199188232,-501.36840820313,380701,3118},
{13.082375526428,28.954113006592,-504.64947509766,350939,3107},
{-14.547506332397,32.953128814697,-524.51867675781,318314,3107},
{-65.492607116699,33.434078216553,-535.29718017578,259293,3100},
{-92.030624389648,38.728912353516,-519.77862548828,229928,3100},
{-99.381660461426,37.583679199219,-485.45922851563,220984,3096},
{-110.65888977051,33.677127838135,-445.5908203125,208000,3099},
{-103.35182952881,33.436145782471,-393.58676147461,216252,3097},
{-138.92584228516,25.55295753479,-332.97396850586,176284,3091},
{-152.2766418457,26.841403961182,-330.58911132813,159961,3091},
{-141.55166625977,24.615270614624,-319.59600830078,173017,3091},
{-119.97354125977,22.832647323608,-311.17535400391,197805,3091},
{-99.764793395996,22.96084022522,-299.10443115234,220418,3098},
{-101.74895477295,27.0224609375,-272.4469909668,218830,3092},
{-106.97282409668,28.878374099731,-254.90386962891,212378,3092},
{-109.2717590332,30.451862335205,-214.05880737305,209963,3090},
{-113.10208892822,27.821075439453,-186.69065856934,205838,3095},
{-108.9351272583,22.412796020508,-157.49519348145,210043,3095},
{-149.30715942383,26.357091903687,-133.35638427734,164305,3095},
{-212.3752746582,28.811525344849,-93.059631347656,92497,3076},
{-196.43717956543,32.175457000732,-74.41024017334,110376,3086},
{-179.74647521973,34.559936523438,-79.810073852539,129423,3086},
{-155.06184387207,31.780969619751,-92.147232055664,157066,3094},
{-154.4384765625,29.774885177612,-104.08539581299,157837,3094},
{-165.13131713867,27.460382461548,-129.5040435791,146043,3085},
{-143.23234558105,23.783819198608,-141.35595703125,170772,3095},
{-107.39171600342,23.023990631104,-153.2261505127,212518,3095},
{-80.685897827148,26.521728515625,-149.17333984375,242983,3095},
{-69.384437561035,28.474611282349,-127.89789581299,255943,3095},
{-73.714866638184,31.508386611938,-89.201370239258,251309,3102},
{-31.979194641113,29.268856048584,-76.498275756836,297775,3102},
{13.204751968384,19.061538696289,-57.991981506348,351516,3111},
{40.709373474121,25.370922088623,-62.118949890137,383779,3111},
{71.181922912598,24.859436035156,-76.506042480469,420051,3120},
{116.54376983643,25.879892349243,-96.230117797852,471500,3125},
{151.32678222656,28.366144180298,-60.652019500732,511414,3125},
{110.01800537109,28.670442581177,-57.267562866211,464288,3121},
{86.130264282227,25.364288330078,-59.298152923584,437097,3121},
{-2000,0,-2000}
}
function spawn_metki()
	for i=2,((#safety_tesla_points)-1),1 do
		local robjd=amk.spawn_item("dots_item",v3f(safety_tesla_points[i][1],safety_tesla_points[i][2],safety_tesla_points[i][3]),safety_tesla_points[i][5],safety_tesla_points[i][4])
		if robjd then
			amk.add_spot_on_map(robjd.id,"way_point_location")
		end
	end
end

function safety_way()
	local radius,rast,point=5,0,2
	local pos=db.actor:position()
	local mindist=1000 
	local dist
	for id,o in pairs(safety_tesla_points) do
		dist=pos:distance_to(v3f(o[1],o[2],o[3]))
		if dist<mindist then mindist=dist point=id end 
	end
	local p1,p2,p3=safety_tesla_points[point],safety_tesla_points[point+1],safety_tesla_points[point-1]
	if pos:distance_to(v3f(p3[1],p3[2],p3[3]))<pos:distance_to(v3f(p2[1],p2[2],p2[3])) then 
		p2=p3 
	end
	rast=math.abs(((p2[1]-p1[1])*pos.z+(p1[3]-p2[3])*pos.x+(p1[1]*p2[3]-p2[1]*p1[3]))/(((p2[1]-p1[1])^2+(p2[3]-p1[3])^2)^0.5))
	return rast>radius
end

function hit_item(id)
	local obj1=client_obj(id)
	if obj1 then
		local h = hit()
		h.power = 0.5
		h.direction = db.actor:direction()
		h.draftsman = db.actor
		h.impulse = 500
		h.type = hit.wound
		obj1:hit(h)  
	end
end

function speaker_sounds(sid,flag)
	local obj= g_sim:story_object(sid)
	if obj then
		snd_obj=xr_sound.get_safe_sound_object("device\\speaker_1")
		snd_obj:play_no_feedback(obj, sound_object.s2d, 0, vector(), 1.0)
	end
end
function kick_zombi()
	trup:set_const_force(v3f(0,1,0):normalize(), 50000, 2) 
	local phe=trup:get_physics_shell():get_element_by_bone_name("bip01_head")
	if phe then phe:apply_force(0, 80000, 0) end
end

function empty_banka_fill()
	local actor=db.actor
	local act_pos=actor:position()
	local dir=device().cam_dir
	local a=vector() a.y=math.atan2(dir.x,dir.z)
	local xdelta=math.sin(a.y)
	local zdelta=math.cos(a.y)
	local lvid=actor:level_vertex_id()
	local gvid=actor:game_vertex_id()
	local id,pos,radius,dist = amk_anoms.get_nearest_anomaly_for_pos(act_pos)
	if id and dist-radius<-0.5 and level.name()~="marsh" then
		local anom_sect=client_obj(id):section()
		if strpos(anom_sect,"_buzz",1,true)~=nil then 
			close_window()
			level.disable_input()
			sak.send_tip("Набираем холодец в банку...", "То, что надо!", 1, 9, "g_g", "sak", "sky_blue")
			schedule.add("banka_fill_hit", "sak.banka_fill_hit()", 6000)
			schedule.add("banka_fill", "sak.empty_banka_full()", 12500)
			return
		end
	end
	amk.spawn_item("banka",v3f((act_pos.x+xdelta),(act_pos.y+0.2),(act_pos.z+zdelta)),gvid,lvid)
	close_window()
end
function banka_fill_hit()
	local act = db.actor
	local h = hit()
	h.draftsman = act
	h:bone("bip01_spine")
	h.type = hit.chemical_burn
	h.power = 0.1
	act:hit(h)
	sound_object("anomaly\\buzz_hit"):play_at_pos(act,act:position(),0)
	vergas_lib.s_play(pain_snd_tbl[lua_random(#pain_snd_tbl)],1)
end
function empty_banka_full()
	create_items(db.actor, "banka_full",1)
	level.enable_input()
end

function banka_full_use()
	local actor=db.actor
	local act_pos=actor:position()
	local lvid=actor:level_vertex_id()
	local gvid=actor:game_vertex_id()
	local shape={shtype=0,radius=1.0,center={0,0.5,0}}
	local shapes={}
	local anom_flag=0
	for a,i in pairs(db.storage) do
		local objg=client_obj(a)
		if objg then
			if (objg and IsMonster(objg) and objg:position():distance_to(actor:position())<1 and not objg:alive()) then
				chuchelo_make(objg)
				anom_flag=1
			break
			end
		end
	end
	if anom_flag==0 then
		amk_anoms.spawn_anomaly("amk_zone_buzz_weak", act_pos, gvid, lvid, shape, "on")
	end
	--local trup_sect="tushkano_normal"
	--amk.spawn_item("chuchelo_"..trup_sect,v3f((act_pos.x+1),(act_pos.y),(act_pos.z+1)),gvid,lvid)
	close_window()
end
function add_rad()
	local actor=db.actor
	if not actor then return end
	local act_pos=actor:position()
	local lvid=actor:level_vertex_id()
	local gvid=actor:game_vertex_id()
	local rds=math.ceil(6*loka_on)
	local sobj 
	sobj=amk.spawn_item("zone_radioactive_weak", act_pos, gvid, lvid)
		if sobj then
			local pk = get_netpk(sobj)
			local data = pk:get()
			data.shapes:addSphere(rds,sak.v3f(0,1,0)) 
			pk:set(data)
			timers.start_timer("off_obj",rds,"sak.off_rad("..sobj.id..")")
		end
	--local sound = sound_object("anomaly\\anomaly_gravy_blast1")
	--sound:play_at_pos(actor,act_pos, 0,sound_object.s2d)
	local particle=particles_object("anomaly2\\gravity_blast_01")
	particle:play_at_pos(act_pos)
end
function off_rad(id)
	local obj1= g_sim:object(id)
	if obj1 then
		misc.release_obj(obj1, 'sak.script:5557')
	end
end
function chuchelo_make(objg)
	local trup_sect=objg:section()
	local trup_pos=objg:position()
	local lvid=objg:level_vertex_id()
	local gvid=objg:game_vertex_id()
	amk.remove_item(objg)
	local chuch=amk.spawn_item("chuchelo_"..trup_sect,v3f((trup_pos.x),(trup_pos.y),(trup_pos.z)),gvid,lvid)
	--[[if chuch then
		local h=hit()
		local a= g_sim:object(chuch)
		h.draftsman=a
		h.type=hit.fire_wound
		h.direction=actor:position():sub(a:position())
		h:bone("pelvis")
		h.power=1
		h.impulse=1
		a:hit(h)
	end
	--]]
end
local time_step_water=500
local time_previous_water=time_global()
local step=0
local step1=0
function hazards_handle()
	local actor=db.actor
	local delta_radiation
	local act_pos=actor:position()
	local time_current
	local time_delta
	local snd_rand
	local l_name=level.name()
	if l_name~="aver" then
		if step1==1 then
			nvd_params.set_off_nv()
		end
		if step1<=1 then
			step1=step1+1
		else
			step1=0
			--wprintf("[~T].~C0C #ERROR:~C07 actor.health = %s", actor.health)
		end
	end
	-- добавлено для саркофага
	if l_name=="l12u_sarcofag" then
		time_current=time_global()
		time_delta=time_current - time_previous_water  
		if time_delta >= time_step_water then
			if step==5 then
				if (act_pos.y>18.0 and act_pos.y<53.5) or act_pos.y>58.0 then
					local dir=device().cam_dir
					local a=vector() a.y=math.atan2(dir.x,dir.z)
					local xdelta=math.sin(a.y)
					local zdelta=math.cos(a.y)
					local particle=particles_object("anomaly2\\electra_entrance_big")
					local sound=sound_object([[anomaly\emi_entrance]])
					local pos_blast=v3f((act_pos.x+xdelta),(act_pos.y+0.4),(act_pos.z+zdelta))
					particle:play_at_pos(pos_blast)
					sound:play_at_pos(actor,pos_blast, 0)
					local h=hit()
					h.draftsman=actor
					h:bone("bip01_spine")
					h.type=hit.shock
					h.power=0.1*(1+(100/((v3f(13.5,40.2,-230.7):distance_to(act_pos))+10)))
					h.impulse=0.0
					actor:hit(h)
				end
			end
			if step<=10 then
				step=step+1
			else
				step=0
			end

		local point1=v3f(41,-0.1,38)
		local point2=v3f(27,50,-13)
		local dist1=(point1:distance_to(act_pos))
		local dist2=(point2:distance_to(act_pos))
	    if (dist1<30 and dist1>4) or (dist2<40 and dist2>6) then
			dist1=(math.log10(30/dist1))
			dist2=(math.log10(40/dist2))
			if lua_random()<dist1 or lua_random()<dist2 then
				local yaw = 3*lua_random()
				local radius = 10*(lua_random()+0.5)
				local pos = vector():set(math.sin(yaw)*radius+act_pos.x,act_pos.y+2,math.cos(yaw)*radius+act_pos.z)
				phantom_manager.spawn_phantom(pos)
			end
		end
		time_previous_water=time_current
		end
		return
	end
	-- добавлено для Туманной чащи (mike 7.53)
	if l_name=="aver" then
		time_current=time_global()
		time_delta=time_current - time_previous_water  
		if time_delta >= 3*time_step_water then
			local point=v3f(-343,-30,167)
			local dist=(point:distance_to(act_pos))
			if dist<90 and dist>4 then
				dist=(math.log10(90/dist))
				if lua_random()<dist then
					local yaw = 3*lua_random()
					local radius = 10*(lua_random()+0.5)
					local pos = vector():set(math.sin(yaw)*radius+act_pos.x,act_pos.y+2,math.cos(yaw)*radius+act_pos.z)
					phantom_manager.spawn_phantom(pos)
				end
			end
			time_previous_water=time_current
		end
		return
	end

	if l_name=="marsh" then
		if act_pos.y<-0.01 then
			time_current=time_global()
			time_delta=time_current - time_previous_water  
			if time_delta >= time_step_water then
				snd_rand=lua_random(1,4)
				delta_radiation=-0.02*act_pos.y*(snd_rand)
				if delta_radiation>0 then
					actor.radiation=delta_radiation
					snd_rand_geiger()
					local r_healh=actor.power-delta_radiation*5
					if r_healh>=0.05 then
						params.power_health_add(r_healh)
					end
				end
				time_previous_water=time_current
			end
		end
		return
	end
	if l_name=="generators" then
		time_current=time_global()
		time_delta=time_current - time_previous_water  
		if time_delta >= time_step_water then
			if act_pos.y<24.58 and not (act_pos.x<250 and act_pos.x>215 and act_pos.z<-90 and act_pos.z>-115) then
				snd_rand=lua_random(1,4)
				delta_radiation=-0.02*(act_pos.y-24.58)*(snd_rand)
				if delta_radiation>0 then
					actor.radiation=delta_radiation
					snd_rand_geiger()
				end
			end
			if step==5 then
				if not (act_pos.y<37.0 and act_pos.x<-121 and act_pos.x>-127 and act_pos.z<-476 and act_pos.z>-482) 
					and not (act_pos.y<29.2 and act_pos.x<155 and act_pos.x>89 and act_pos.z<-500 and act_pos.z>-508) 
					and not (act_pos.y<30.8 and act_pos.x<174 and act_pos.x>169 and act_pos.z<-483 and act_pos.z>-495) 
					and not (act_pos.x<250 and act_pos.x>215 and act_pos.z<-90 and act_pos.z>-115)
					and safety_way() then
					local dir=device().cam_dir
					if not has_alife_info("tesla_free") then
						local a=vector() a.y=math.atan2(dir.x,dir.z)
						local xdelta=math.sin(a.y)
						local zdelta=math.cos(a.y)
						local particle=particles_object("anomaly2\\electra_entrance_big")
						local sound=sound_object([[anomaly\emi_entrance]])
						local pos_blast=v3f((act_pos.x+xdelta),(act_pos.y+0.4),(act_pos.z+zdelta))
						particle:play_at_pos(pos_blast)
						sound:play_at_pos(actor,pos_blast, 0)
						local h=hit()
						h.draftsman=actor
						h:bone("bip01_spine")
						h.type=hit.shock
						h.power=0.1*(1+(100/((v3f(13.5,40.2,-230.7):distance_to(act_pos))+10)))
						h.impulse=0.0
						actor:hit(h)
					end	
				end
			end
			if step<=10 then
				step=step+1
			else
				step=0
			end
			time_previous_water=time_current
		end
		return
	end
	if l_name=="l11_pripyat" then
		time_current=time_global()
		time_delta=time_current - time_previous_water  
		if time_delta >= time_step_water then
			if amk_anoms.check_coordinates(act_pos) then
				snd_rand=lua_random(1,4)
				delta_radiation=0.0015*(snd_rand)
				actor.radiation=delta_radiation
				snd_rand_geiger()
			end
			--local tired=-(math.log10(75/(v3f(30,0,420):distance_to(act_pos))))
			local tired=-(math.log10(55/(v3f(31,0,483):distance_to(act_pos))))	  
			if tired<0.01 then tired=0 elseif tired>1 then tired=0.9 end
			local r_healh=actor.power+tired
			params.power_max_out(tired)
			params.power_health_add(r_healh)
			time_previous_water=time_current
		end
		return
	end
	if l_name=="labx8" then
		if ((act_pos.y<-32.0 and act_pos.x<-90 and act_pos.x>-112 and act_pos.z<92 and act_pos.z>72) or (act_pos.y<-36.0 and act_pos.x<-73 and act_pos.x>-87 and act_pos.z<95 and act_pos.z>79)) then
			time_current=time_global()
			time_delta=time_current - time_previous_water  
			if time_delta >= time_step_water then
				snd_rand=lua_random(1,3)
				delta_radiation=0.007*(snd_rand)
				actor.radiation=delta_radiation
				snd_rand_geiger()
				time_previous_water=time_current
			end
		end
		return
	end
	if l_name=="l03_agroprom" then
		if (act_pos.y<1.7 and act_pos.x<-150 and act_pos.x>-220 and act_pos.z<150 and act_pos.z>0) then
			time_current=time_global()
			time_delta=time_current - time_previous_water  
			if time_delta >= time_step_water then
				snd_rand=lua_random(1,3)
				delta_radiation=0.01*(snd_rand*2)*(1.7-act_pos.y)
				actor.radiation=delta_radiation
				snd_rand_geiger()
				time_previous_water=time_current
			end
		end
		return
	end
	if l_name=="red_forest" then 
		if (act_pos.y>8 and act_pos.x<245 and act_pos.x>135 and act_pos.z<110 and act_pos.z>-185) then
			time_current=time_global()
			time_delta=time_current - time_previous_water  
			if time_delta >= time_step_water then
				local dir=device().cam_dir
				local a=vector() a.y=math.atan2(dir.x,dir.z)
				local xdelta=math.sin(a.y)
				local zdelta=math.cos(a.y)
				local particle=particles_object("anomaly2\\electra2_blast")
				local sound=sound_object("anomaly\\electra_blast1")
				local pos_blast=v3f((act_pos.x+xdelta),(act_pos.y+0.4),(act_pos.z+zdelta))
				particle:play_at_pos(pos_blast)
				sound:play_at_pos(actor,pos_blast, 0)
				local h=hit()
				h.draftsman=actor
				h:bone("bip01_spine")
				h.type=hit.shock
				h.power=0.1
				h.impulse=0.0
				actor:hit(h)
				time_previous_water=time_current
			end
		end
		return
	end
	if l_name=="k01_darkscape" then
		if act_pos.y>30.5 then
			time_current=time_global()
			time_delta=time_current - time_previous_water  
			if time_delta >= time_step_water then
				local dir=device().cam_dir
				local a=vector() a.y=math.atan2(dir.x,dir.z)
				local xdelta=math.sin(a.y)
				local zdelta=math.cos(a.y)
				local particle=particles_object("anomaly2\\electra2_blast")
				local sound=sound_object("anomaly\\electra_blast1")
				local pos_blast=v3f((act_pos.x+xdelta),(act_pos.y+0.4),(act_pos.z+zdelta))
				particle:play_at_pos(pos_blast)
				sound:play_at_pos(actor,pos_blast, 0)
				local h=hit()
				h.draftsman=actor
				h:bone("bip01_spine")
				h.type=hit.shock
				h.power=2
				h.impulse=0.0
				actor:hit(h)
				time_previous_water=time_current
			end
		end
		return
	end
	if l_name=="l08_yantar" then
		if act_pos.z>102 then
			time_current=time_global()
			time_delta=time_current - time_previous_water  
			if time_delta >= time_step_water then
				local dir=device().cam_dir
				local a=vector() a.y=math.atan2(dir.x,dir.z)
				local xdelta=math.sin(a.y)
				local zdelta=math.cos(a.y)
				local particle=particles_object("anomaly2\\electra2_blast")
				local sound=sound_object("anomaly\\electra_blast1")
				local pos_blast=v3f((act_pos.x+xdelta),(act_pos.y+0.4),(act_pos.z+zdelta))
				particle:play_at_pos(pos_blast)
				sound:play_at_pos(actor,pos_blast, 0)
				local h=hit()
				h.draftsman=actor
				h:bone("bip01_spine")
				h.type=hit.shock
				h.power=2
				h.impulse=0.0
				actor:hit(h)
				time_previous_water=time_current
			end
		end
		return
	end
	if l_name=="labx10" and has_alife_info("labx10_lamp_14_on") and not has_alife_info("phantom_labx10_off") then
		time_current=time_global()
		time_delta=time_current - time_previous_water  
		if time_delta >= 3*time_step_water then
			local point=v3f(62,-20,41)
			local dist=(point:distance_to(act_pos))
			if dist<90 and dist>6 then
				dist=(math.log10(90/dist))
				if lua_random()<dist then
					local yaw = 3*lua_random()
					local radius = 10*(lua_random()+0.5)
					local pos = vector():set(math.sin(yaw)*radius+act_pos.x,act_pos.y+2,math.cos(yaw)*radius+act_pos.z)
					if lua_random(1,100)<50 then		
						phantom_manager.spawn_phantom(pos)
					end		
				end
			end
			time_previous_water=time_current
		end
		return
	end
	if l_name=="l12_stancia_new" then
		time_current=time_global()
		time_delta=time_current - time_previous_water
		for a=0,2 do
			local rnd=lua_random(1,9)
			local obj= g_sim:story_object(tonumber("75"..a..rnd)) 
			if obj then
				if lua_random()>0.25 then
					sim:set_switch_online (obj.id, true)
					sim:set_switch_offline (obj.id, false)
				else
					sim:set_switch_offline (obj.id, true)
					sim:set_switch_online (obj.id, false)
				end
			end
		end
		if (act_pos.y<-1.95) and (act_pos.x<1000) and (time_delta >= time_step_water) then
			local dir=device().cam_dir
			local a=vector() a.y=math.atan2(dir.x,dir.z)
			local xdelta=math.sin(a.y)
			local zdelta=math.cos(a.y)
			local particle=particles_object("anomaly2\\studen_blowout")
			local sound=sound_object("anomaly\\buzz_hit")
			local pos_blast=v3f((act_pos.x+xdelta),(act_pos.y),(act_pos.z+zdelta))
			particle:play_at_pos(pos_blast)
			sound:play_at_pos(actor,pos_blast, 0)
			local h=hit()
			h.draftsman=actor
			h:bone("bip01_spine")
			h.type=hit.chemical_burn
			h.power=0.5*(-1.95-act_pos.y)
			h.impulse=0.0
			actor:hit(h)
			time_previous_water=time_current
		end
	end
	if l_name=="l12_stancia_2_new" then
		time_current=time_global()
		time_delta=time_current - time_previous_water
		for a=3,5 do
			local rnd=lua_random(1,9)
			local obj=sim:story_object(tonumber("75"..a..rnd)) 
			if obj then
				if lua_random()>0.25 then
					sim:set_switch_online (obj.id, true)
					sim:set_switch_offline (obj.id, false)
				else
					sim:set_switch_offline (obj.id, true)
					sim:set_switch_online (obj.id, false)
				end
			end
		end
		if time_delta >= time_step_water then
			if step==5 then
				if act_pos.y>10 then
					local dir=device().cam_dir
					local a=vector() a.y=math.atan2(dir.x,dir.z)
					local xdelta=math.sin(a.y)
					local zdelta=math.cos(a.y)
					local particle=particles_object("anomaly2\\electra_entrance_big")
					local sound=sound_object([[anomaly\emi_entrance]])
					local pos_blast=v3f((act_pos.x+xdelta),(act_pos.y+0.4),(act_pos.z+zdelta))
					particle:play_at_pos(pos_blast)
					sound:play_at_pos(actor,pos_blast, 0)
					local h=hit()
					h.draftsman=actor
					h:bone("bip01_spine")
					h.type=hit.shock
					h.power=0.1*(1+(100/((v3f(13.5,40.2,-230.7):distance_to(act_pos))+10)))
					h.impulse=0.0
					actor:hit(h)
				end
			end
			if step<=10 then
				step=step+1
			else
				step=0
			end
			time_previous_water=time_current
		end
	end
end
function dead_prip_kill_zone()
	local actor=db.actor
	local act_pos=actor:position()
	local point_zero=v3f(122,3,22)
	local dist=point_zero:distance_to(act_pos)
	if dist<8 then 
		if actor.health > 0 then 
			return actor:kill(actor)
		else
			return
		end 
	end
	snd_rand_geiger()
	local psy_reduse=(-25/(dist^2))
	local rad_add=(50/(dist^2))
	params.psy_health_add(psy_reduse)
	params.radiation_add(rad_add)
end
function red_kill_zone()
	local actor=db.actor
	local act_pos=actor:position()
	local point_zero=v3f(-135,0,-304)
	local dist=point_zero:distance_to(act_pos)
	if dist<5 then 
		if actor.health > 0 then 
			return actor:kill(actor)
		else
			return
		end 
	end
	snd_rand_geiger()
	local psy_reduse=(-25/(dist^2))
	local rad_add=(50/(dist^2))
	params.psy_health_add(psy_reduse)
	params.radiation_add(rad_add)
end
  local tmr_hangry=1
function dead_hangry_zone()
	if tmr_hangry>=4 then
		tmr_hangry=1
		local actor=db.actor
		local act_pos=actor:position()
		local point_zero=v3f(-97,20,-13)
		local dist=point_zero:distance_to(act_pos)
		local hangr=(-40/(dist^2))
		params.satiety_add(hangr)
		local s_healh=params.actor_satiety_health()
		local r_healh=actor.power+hangr
		params.power_max_out(s_healh)
		params.power_health_add(r_healh)
	else
		tmr_hangry=tmr_hangry+1
	end
end
function return_power()
	params.power_max_out(1)
end
trade_flag=false
function cant_trade(obj,sect,id,flag)
	if flag==1 or flag==2 then
		params.cant_trade_add(id)
		else 
		if strpos(sect,"wpn_",1,true) or strpos(sect,"_outfit",1,true) then
			local cond=obj:condition()
			if (cond<0.65 and trade_flag==false) then
				params.cant_trade_add(id)
			else
				params.can_trade_add(id)
			end
		else
			params.can_trade_add(id)
		end
	end
end
function can_trade_break()
	trade_flag=true
	sak_inventory.inventory_control()
end
function on_info(info_id)
	if info_id=="ui_car_body_hide" then
			on_close_treas()
			vergas_rucksack.set_flag_drop(true)
			trade_flag=false
		elseif info_id=="ui_car_body" then
			vergas_rucksack.set_flag_drop(false)
			trade_flag=true
			sak_inventory.inventory_control()
	end
end
function snd_rand_geiger()
	local snd_rand=lua_random(1,4)
	local snd_obj
	local detector = db.actor:item_in_slot(8)
	if detector and not strpos(detector:section(),"_fake",1,true) then
		local sound="detectors\\geiger_"..snd_rand
		snd_obj=xr_sound.get_safe_sound_object(sound)
		snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 0.5)
	end
end

function snd_toilet()
	local snd_obj
	snd_obj=xr_sound.get_safe_sound_object("device\\masks\\sink_fill_06")
	snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
end
local pos_kanistra_full={
						[1]={93.54711151123,0.1252444088459,-66.617233276367,288576,992},
						[2]={-8.6355762481689,3.3410575389862,8.2768459320068,134747,3414},
						[3]={416.83474731445,-2.0670502185822,-363.38973999023,930454,4153}
						}
function kanistra_full(pos)
	amk.spawn_item("amk_kanistra",v3f(pos_kanistra_full[pos][1],pos_kanistra_full[pos][2],pos_kanistra_full[pos][3]),pos_kanistra_full[pos][5],pos_kanistra_full[pos][4])
	level.enable_input()
end
function actor_jump(obj)
	local actor=db.actor
	local dir=device().cam_dir
	local a=vector() a.y=math.atan2(dir.x,dir.z)
	local ydelta=0.3
	local xdelta=math.sin(a.y)*5
	local zdelta=math.cos(a.y)*5
	local act_pos=actor:position()
	local lvid=actor:level_vertex_id()
	local gvid=actor:game_vertex_id()
	local a=v3f((act_pos.x+xdelta),(act_pos.y+ydelta),(act_pos.z+zdelta))
	level.add_pp_effector("teleport.ppe", 50, false)
	close_window()
	if g_sim:object(obj) then
		misc.release_obj(obj, 'sak.script:5823')
		eff_vodka()
		actor:set_actor_position(a)
	end
end
function actor_jump_up(obj)
	local actor=db.actor
	local act_pos=actor:position()
	local dir=device().cam_dir
	local a=vector() a.y=math.atan2(dir.x,dir.z)
	local ydelta=0.3
	local xdelta=math.sin(a.y)*2
	local zdelta=math.cos(a.y)*2
	local lvid=actor:level_vertex_id()
	local gvid=actor:game_vertex_id()
	local shape={shtype=0,radius=1.0,center={0,0.5,0}}
	amk_anoms.spawn_anomaly("amk_zone_no_gravity_weak", act_pos, gvid, lvid, shape, "on")
	close_window()
	if g_sim:object(obj) then
		misc.release_obj(obj, 'sak.script:5858')
		eff_vodka()
		actor:set_actor_position(a)
	end
end
function spawn_teleports(pos,lv,gv,r1,r2,section,num)
	local cnt=0
	local shape={}
	while cnt<num do
		local dir=vector_rotate_y(pos,(lua_random(0,359)))
		local dist=r1+lua_random(1,(r2-r1))
		local new_lv=level.vertex_in_direction(lv, dir, dist)
		local new_pos=level.vertex_position(new_lv)
		shape={shtype=0,radius=4,center={0,0,0}}
		amk_anoms.spawn_anomaly(section,v3f(new_pos.x,new_pos.y+1,new_pos.z),gv,new_lv,shape,"on")
		cnt=cnt+1
	end  
end
-- attention
function read_comp_news()
	local spwn=ui_hud_attention_comp.attention_comp(get_hud())
	level.start_stop_menu(spwn,true)
end
function read_x18_news()
	local rand=(amk_vars.x18_iq_check or 2)
	ui_hud_attention_blank.this_text="content_x18_text"..rand
	local spwn=ui_hud_attention_blank.attention_univers_blank(get_hud())
	level.start_stop_menu(spwn,true)
end
function read_esc_news()
	ui_hud_attention_blank.this_text="content_esc_text"
	local spwn=ui_hud_attention_blank.attention_univers_blank(get_hud())
	level.start_stop_menu(spwn,true)
end
function read_sid_news()
	ui_hud_attention_blank.this_text="content_sid_text"
	local spwn=ui_hud_attention_blank.attention_univers_blank(get_hud())
	level.start_stop_menu(spwn,true)
end
function read_mar_news()
	ui_hud_attention_blank.this_text="content_mar_text"
	local spwn=ui_hud_attention_blank.attention_univers_blank(get_hud())
	level.start_stop_menu(spwn,true)
end
function read_prizrak_news()
	ui_hud_attention_blank.this_text="content_prizrak_text"
	local spwn=ui_hud_attention_blank.attention_univers_blank(get_hud())
	level.start_stop_menu(spwn,true)
	if not db.actor:has_info("phantom_labx10_off") then
		db.actor:give_info_portion("phantom_labx10_off")
	end
end
function read_x10_pults_news()
	ui_hud_attention_blank.this_text="content_x10_pults_text"
	local spwn=ui_hud_attention_blank.attention_univers_blank(get_hud())
	level.start_stop_menu(spwn,true)
end
-- labx10_skelet_pda
function read_labx10_skelet_news()
	local rand=(amk_vars.x18_iq_check or 2)
	ui_hud_attention_blank.this_text="content_labx10_skelet"..rand.."_text"
	local spwn=ui_hud_attention_blank.attention_univers_blank(get_hud())
	level.start_stop_menu(spwn,true)
	if db.actor:has_info("labx10_skelet"..rand.."_info") then
		return
	end  
	db.actor:give_info_portion("labx10_skelet"..rand.."_info")
	info_code()  
end
function read_bar_news()
	local day=level.get_time_days()
	ui_hud_attention_blank.this_text="content_bar"..day.."_text"
	local spwn=ui_hud_attention_blank.attention_univers_blank(get_hud())
	level.start_stop_menu(spwn,true)
end
function read_doktor_news()
	ui_hud_attention_blank.this_text="content_doktor_text"
	local spwn=ui_hud_attention_blank.attention_univers_blank(get_hud())
	level.start_stop_menu(spwn,true)
	if db.actor:has_info("doctor_attention_read") then
		return
	end  
	db.actor:give_info_portion("doctor_attention_read") 
end
function doktor_wait_done()
	db.actor:give_info_portion("esc_find_doctor_start2")
	send_tip("Меченный, жду тебя в старой хижине, в Туманной чаще","Болотный Доктор",0,10,"doctor","pda_news", "sky_blue")	
end
function read_warlab_exit_news()
	local rand=(amk_vars.r_task_reward or 1)
	ui_hud_attention_blank.this_text="content_warlab_exit"..rand.."_text"
	local spwn=ui_hud_attention_blank.attention_univers_blank(get_hud())
	level.start_stop_menu(spwn,true)
	if db.actor:has_info("generators_code_door"..rand.."_info") then
		return 
	end  
	db.actor:give_info_portion("generators_code_door"..rand.."_info")
	info_code()
end
function read_scarman_news()
	ui_hud_attention_blank.this_text="content_scarman_text"
	local spwn=ui_hud_attention_blank.attention_univers_blank(get_hud())
	level.start_stop_menu(spwn,true)
end

function precondition_black_tip()
	local rnd_black_tip=lua_random(100)
	if rnd_black_tip>=70 then db.actor:give_info_portion("black_tip_yes")
		else db.actor:give_info_portion("black_tip_no")
	end
end
function precondition_10_percent()
	precondition_percent(10)
end
function precondition_25_percent()
	precondition_percent(25)
end
function precondition_50_percent()
	precondition_percent(50)
end
function precondition_80_percent()
	precondition_percent(80)
end
function precondition_percent(perc)
	local rnd=lua_random(100)
	if rnd<perc then db.actor:give_info_portion("black_tip_yes")
		else db.actor:give_info_portion("black_tip_no")
	end
end
function start_cook_dream()
	timers.start_timer("cook_dream",0,10,17,"sak.cook_dream_done()") 
end
function cook_dream_done()
	db.actor:give_info_portion("mil_freedom_cook_wakeup") 
end
local mus_bar = {
				"bar_retro",
				"bar_modern",
				"bar_rockn",
				"bar_rock"
				}
local rand_stalk = {
				"gar_stalker_general",
				"bar_Stalker_veteran",
				"cit_bandit_general",
				"bar_Dolg_regular",
				"mil_Svoboda_regular",
				"sim_green_novice",
				"val_bandit_general",
				"sim_green_general",
				"mil_Dolg_specnaz_silence",
				"bar_Stalker_general",
				"mil_Svoboda_specnaz",
				"lost_vil_stalker_general",
				"esc_soldier_regular",
				"lim_svoboda_general",
				"val_bandit_bodyguard"  
				}

function add_price_arts(obj)
	if not obj then return 0 end

	local art_sect = obj
	local sys_cost = 0
	local ini = system_ini()
	local cond = 1
	if type(obj) ~= "string" then
		art_sect = obj:section()
		cond = params.get_condition(obj)
	end

	-- считает тупо сальдо цены новых артефактов
	if strposx(art_sect, "arc_art_box_") then    
		local arts = arc_containers.get_inv_container_arts(obj:id())
		local saldo = 0
		if arts then
			for i, rec in ipairs(arts) do
				local sect = rec.section or rec.x_section
				local cond = rec.condition or 1.0
				if sect ~= "?" and ini:section_exist(sect) then
					sys_cost    = ini:r_float(sect, "cost")
					have_many   = have_many + sys_cost * cond
					saldo = saldo + sys_cost * cond
				end
			end -- for
		end
		return saldo
	else
		sys_cost = ini:r_float(art_sect, "cost")
		have_many = have_many + sys_cost * cond
	end
	return sys_cost * cond
end


function damage_first_outfit()
	local npc = db.actor
	local armor = npc:object("stalker_outfit") or npc:item_in_slot(6)
	if armor then
			wprintf("[~T]. #FIRST_RUN: initial damaging~C0A %s~C07", armor:name()) 
			params.upd_condition(armor, 0.18)
		else   
			ODS("~C0C[~T]. #ERROR:~C07 not found outfit in actor inventory")
			schedule("dmg_first_outfit", "sak.damage_first_outfit()", 2500)      
	end                                   
end

function start_progress()
	local npc = db.actor
	local frun  = ( nlc_vars.first_run == nil )  
	local lname = level.name()
  
	if frun then
		level.add_pp_effector("agr_u_fade.ppe", 3121, false)
		sak_inventory.inventory_control()                                
		local armor = sak_inventory.rucksack["stalker_outfit"]													  
		if armor then
			params.upd_condition(armor, 0.18)
			schedule.add("dmg_first_outfit", "sak.damage_first_outfit()", 500)         
		else
			ODS("~C0C[~T]. #ERROR:~C07 not found stalker_outfit in actor inventory")  
		end
		nlc_vars.first_run = false
		sleep_manager.change_sleepiness(100)
		params.satiety_add(-0.8)
		params.offs_huds()
		gnzi.add_first_spawn()
		for aa = 1, 15 do
			sak_dialog.search_npc(rand_stalk[aa],"fake_new_gg_"..aa,"fake_new_"..aa)
		end
		sak_dialog.search_npc("esc_green_respawn_2","dsc_green_near_dv_dialog","dsc_near_dv")
		npc:give_info_portion("esc_lamp_1_on")
		den1s_test.on_new_game()
		oxyr.spawn_restr_agro_undrgrnd()
		game_began=true
	else
		schedule.add ("paused_game", "sak.paused_game()", 500)  
		local rand=lua_random(1,4)
		npc:give_info_portion(mus_bar[rand]) 
		npc:give_info_portion("ui_inventory") -- может здесь оно сбоить не будет?   		
	end
  
	day_shmoney      = timers.Get_Game_Days()+1
	day_money        = day_shmoney / 2
	mass_add         = math.floor(day_shmoney / 7)
	mask_poison      = (1.1 - balance.level_poisoned[lname]) * 0.2
	dog_psy          = level_difficulty[lname] - 0.79
	loka_on          = 1 + math.max (0, level_difficulty[lname]-1.3)
  
	if lname=="aver" then loka_on=5 end
	params.offs_huds()
	amk_mod.sync_done = true
	params.cond_old   = vergas_masks.mask_condition()
	amk_mod.last_condition = 0
	params.cond_wpn_old    = {0, 0, 0, 0, 0, 0}
	amk_mod.check_armor()  
end

function end_hellcar()
	db.actor:give_info_portion("gar_hellcar_dialog_end")
end

function paused_game()
	level.set_load_title( sprintf("#sak.paused_game binder_ticks = %d ", bind_stalker.binder_ticks) )
	local npc=db.actor
	sak_inventory.need_update_inventory()  
	local razgruzka_weight = razgruzka.weight_variable_hran()
	params.mem_weight_add (razgruzka_weight)
	discharge_tasks(true)
	r_old = nlc_vars.light_torch or 0.45 --0.45
	torch_brock (true,true)
	razgruzka.end_gun_reload()
	npc:give_info_portion("ui_inventory_hide")
	breath_poison ()
	if _G.sak_repair_dialog and sak_dialog.update_margin then  
		sak_dialog.update_margin()
	end   
	black_bonus = nlc_vars.black_off or 1
	game_began = true
	db.shadow_inv:hide_content(0)  
	schedule.add("syn_mon", "amk_anoms.sync_mon()", 4000)    
	if not KeyPressed(19) then
		schedule.add("pause", "sak.on_load_complete()", 1000)
	end
	actor_bio()  
end

function on_load_complete()
	ODS('~CE0[~T/~U/~B]. #SUCCESS: ---------------------  saved game was complete loaded -------------------------------~C07')
	fix_armor()
	t_v(nil,true)
	level.set_load_title("#st_load_end")
	db.init_stage = 500
	device():pause(true)
end

function paused_game_began()
	game_began=true
end
function fix_armor()
	bind_stalker.hide_weapon()
	local act = db.actor
	local act_slot = nlc_vars.active_slot
	if act_slot == nil then
		act_slot = 5
	end
	local knife = act:item_in_slot(0)
	if knife then
		act:move_to_ruck(knife)
	end
	local fake_knife = nil
	for i=1,2 do -- цикл нужен на случай, если нож изначально отсутствует в слоте
		fake_knife = misc.spawn_to("wpn_knife",act)
		log2("[fix_armor]: fake_item %s spawned",fake_knife:name())
		misc.process_spawn()
		local cl_fake_knife = client_obj(fake_knife.id)
		if cl_fake_knife then
			act:move_to_ruck(cl_fake_knife)
			misc.release_obj(cl_fake_knife)
		end
		if not act:item_in_slot(0) and knife then
			nlc_container.try_to_slot(knife)
			break
		end
	end
	if act_slot ~= NONE_SID and act_slot ~= NONE_CL_SID and act:item_in_slot(act_slot) ~= nil then
		act:activate_slot(act_slot)
	else
		act:activate_slot(5)
	end
	bind_stalker.restore_weapon()
end
function gren_fix(id)
	db.actor:activate_slot(3)
	local item = client_obj(id)
	if item then
		db.actor:move_to_slot(item,false)
	end
end
function changes_art_class(obj_id,p_obj)
	local obj=sim:object(obj_id)
	if obj then
		local section=obj:section_name()
		local new_art
		if strpos(section,"_dyn",-6,true) and not strpos(section,"capsule",1,true) then
			local num=tonumber(string.sub(section,-2,-2))
			local pk = get_netpk(obj,1)
			local data = pk:get()
			local cond=data.condition+0.0004
			if cond>=1 then 
				cond=0.9999 
			end
			local cond1=math.floor(cond*100)
			if cond1<10 then 
				cond1="0"..cond 
			end
			if num==6 then 
				misc.release_obj(obj, 'sak.script:6166') 
				return
			end
			num=num-1
			if num<=0 then 
				num=6 
			end
			new_art=string.sub(section,1,-7).."_dyn"..num.."d"
			coord_params.set_obj_section(obj_id, new_art)
			if p_obj == 0 then
				arc_arts.on_remove(obj_id)
			end
		end
	end
end
function changed_art_class(obj_id)
	local line
	if db.actor:has_info("marsh_new_theme_done") then
			line=0.25
		else
			line=0.05
	end  
	if lua_random()>line then return end
	local obj=sim:object(obj_id)
	if obj then
		local section=obj:section_name()
		if section == "af_soul_dyn4d" then
			nlc_vars.marsh_new_theme_art = true
		end
		local new_art
		if strpos(section,"_dyn",-6,true) and not strpos(section,"capsule",1,true) then
			local num=tonumber(string.sub(section,-2,-2))
			local pk = get_netpk(obj,1)
			local data = pk:get()
			local cond=data.condition+0.0004
			if cond>=1 then cond=0.9999 end
			local cond1=math.floor(cond*100)
			if cond1<10 then cond1="0"..cond end
			if num==6 then misc.release_obj (obj, 'sak.script:6182') return  end
			num=num+1
			if num>=6 then num=5 end
			new_art=string.sub(section,1,-7).."_dyn"..num.."d"
			coord_params.set_obj_section(obj_id, new_art)
		end
	end
end
function gg_not_have_weapon()
	for i,k in pairs(sak_inventory.slots) do
		if (strpos(i, "wpn_",1,true) and (i~="wpn_knife") and (i~="wpn_binoc") and (i~="bolt")) or strpos(i, "_outfit",1,true) then
			return false
		end
	end
	for i,k in pairs(sak_inventory.rucksack) do
		if strpos(i, "wpn_",1,true) or strpos(i, "_outfit",1,true) then
			return false
		elseif strpos(i, "rucksack",1,true) then
		for a = 1,#k do
			local o_id=k[a]
			local ids,cnt = registry.inv_objects(o_id, false)
			for n = 1,cnt do
				local id = ids[n]
				local item = client_obj(id)
				if item then 
					local sect=item:section()
						if (strpos(sect, "wpn_",1,true) and not strpos(sect, "wpn_addon_",1,true) and (sect~="wpn_binoc") and (	sect~="wpn_knife")) or strpos(sect, "_outfit",1,true) then
							return false
						end
					end
				end
			end
		end
	end
	return true
end

function gg_not_have_activ_weapon()
	for i,k in pairs(sak_inventory.slots) do
		if (strpos(i, "wpn_",1,true) and (i~="wpn_knife") and (i~="wpn_binoc") and (i~="bolt")) then
			return false
		end
	end
	return true
end

function have_actor_any_wpn()
	for i,k in pairs(sak_inventory.slots) do
		if strpos(i, "wpn_",1,true) and (i~="wpn_binoc") and (i~="bolt") and not strpos(i, "wpn_addon_",1,true) and (i~="wpn_knife")then
			return true
		end
	end
	for i,k in pairs(sak_inventory.rucksack) do
		if strpos(i, "wpn_",1,true) and not strpos(i, "wpn_addon_",1,true) and (i~="wpn_binoc") and (i~="wpn_knife") then
				return true
			elseif strpos(i, "rucksack",1,true) then
			for a = 1,#k do
			local o_id=k[a]
			local ids,cnt = registry.inv_objects(o_id, false)
				for n = 1,cnt do
					local id = ids[n]
					local item = client_obj(id)
					if item then 
					local sect=item:section()
						if strpos(sect, "wpn_",1,true) and not strpos(sect, "wpn_addon_",1,true) and (sect~="wpn_binoc") and (sect~="wpn_knife") then
							return true
						end
					end
				end
			end
		end
	end
	return false
end
function not_have_actor_any_wpn()
	return not have_actor_any_wpn()
end
function psy_health_v_reduse()
	params.psy_health_v_add(-0.1)
end
function psy_health_v_norm()
	params.psy_health_v_add(1)
end
function torch_id_norm()
	torch_id=BAD_OBJ_ID
	local torch = db.actor:item_in_slot(9)
	if torch==nil then torch_id=nil return end
	torch_id=torch:id()
end
mode_switch=1
function modes_swith_on()
	if params.get_torch_on_off(torch_id)==1 then
		if mode_switch==1 then mode_switch=2 else mode_switch=1 end
		torch_brock(true,true)
	end
end
function torch_brock(switcher,sw)
	if torch_id and (params.get_torch_on_off(torch_id)==1 or switcher) then
		if lua_random()<0.16 and not sw then
			local r_t=(r_old*(lua_random(3,10))/10)
			params.set_torch_param(torch_id,r_t,r_t,r_t,mode_switch)
			local time_flash=lua_random(1,3)
			timers.start_timer("t_torch_flash",time_flash,"sak.torch_brock()")
			return
		end
		r_old=r_old+(mode_switch-1)*0.1
		local r_new,g_new=r_old,(r_old-0.07)
		if r_new>0.11 and not sw then
			r_new = r_new-(0.007*(mode_switch*2))
			g_new = g_new-(0.007*(mode_switch*2))
		end
		params.set_torch_param(torch_id,r_new,g_new,g_new,mode_switch)
		r_old=r_new-(mode_switch-1)*0.1
		nlc_vars.light_torch = r_old
	end
	if db.actor:has_info("pda_is_broken") and flag_sah==false then
		out_many_pda_broken()
	end
	timers.start_timer("t_torch_brock",31,"sak.torch_brock()")
end

function new_batt_torch()
	local self=level.main_input_receiver()
	local sound = xr_sound.get_safe_sound_object( "device\\alkseur\\use_battery" )

	if self then self:GetHolder():start_stop_menu(self,true) end
    sound:play_at_pos( db.actor, vector(), 0, sound_object.s2d )
	r_old=0.95
	nlc_vars.light_torch = r_old
	torch_brock(true,true)
	sak.actor_hide_weapon()
	level.add_cam_effector( "camera_effects\\item_use.anm", 9553, false, "" )
	schedule.add( "batt_tor","sak.end_batt()", 6000 )
end

function end_batt()
	sak.restore_weap()
end

function torch_npc_brock(id)
	if torch_id then 
	local rnd_r=0.65-(lua_random()/2)
	local r_new,g_new=rnd_r,(rnd_r-0.05)
	params.set_torch_param(id,r_new,g_new,g_new)
	end
end
function sleep_discharge_torch(hour)
	if torch_id and params.get_torch_on_off(torch_id)==1 then
		--ODS("[~T]. #DBG: вот ~C0A"..torch_id.."~C07")
		r_old=0.13
		local r_new,g_new=r_old,(r_old-0.07)
		params.set_torch_param(torch_id,r_new,g_new,g_new,mode_switch)
		nlc_vars.light_torch = r_old
	end
end

function start_fire()
	if db.actor:active_slot()==1 then
			local slot_1=db.actor:item_in_slot(1)
			wpn_params.start_fire(slot_1:id())
			local fire=lua_random(1000,5000)
			schedule.add ("wpn_fire","sak.stop_fire("..slot_1:id()..")", fire) 
		elseif db.actor:active_slot()==2 then 
			local slot_2=db.actor:item_in_slot(2)
			wpn_params.start_fire(slot_2:id())
			local fire=lua_random(1000,5000)
			schedule.add ("wpn_fire","sak.stop_fire("..slot_2:id()..")", fire) 
	end
end
function stop_fire(id)
	wpn_params.end_fire(id)
end

local bun_screen=1

function bun_comp_enter()
	--local rand=amk_vars.x18_iq_check",1)
	local rand=(amk_vars.r_treas_items or 1)
	local tex=rand..bun_screen.."2"
	texman.swap_bun_screen(tex)
	bun_screen=bun_screen+1
	if bun_screen > 9 then
		bun_screen=1 
	end
end
function bun_klava_sound()
	local act=db.actor
	local sound=sound_object("device\\keyboard_"..lua_random(1,3))
	sound:play_at_pos(act, act:position(), 0)
end
function cats_near()
	local cats=false
	local ids, cnt = registry.clsid_objects(CLID_CAT, CLID_CAT, true, nil, 7)
	for n=1,cnt do
		local id = ids[n]
		local obj=client_obj(id)
		if obj and obj:alive() then 
			local act_pos=db.actor:position()
			local pos=obj:position()
			local dist=pos:distance_to(act_pos)
			if dist<10 then
				cats=true
			break
			end
		end
	end
	return cats
end
function add_anom_spot()
	local actor=db.actor
	local dir=device().cam_dir
	local a=vector() a.y=math.atan2(dir.x,dir.z)
	local xdelta=6*math.sin(a.y)
	local zdelta=6*math.cos(a.y)
	local act_pos=actor:position()
	local lvid=actor:level_vertex_id()
	local gvid=actor:game_vertex_id()
	local robjd=amk.spawn_item("dots_item",v3f((act_pos.x+xdelta),(act_pos.y-1),(act_pos.z+zdelta)),gvid,lvid)
	amk.add_spot_on_map(robjd.id,"anomaly_zone_location","%c[255,255,0,0] аномалия")
end
function get_command(com)
	get_console():execute(com)
end
function get_sound()
	vergas_lib.s_play([[actor\gas_mask_light]],0.15)
end
function dbglog(fmt,...)
	local msg=string.format(fmt, ...)
	local msg_no_ws=string.gsub(msg, "%s", "___")
	get_command("dbg:" .. msg_no_ws)
end

function init_module()
	sak.have_item_namber = have_items_count
end

function sak.late_init()
	discharge_accum()
	AddRegularTask("sak.discharge_tasks", sak.discharge_tasks, nil, 0, 12000)
	AddRegularTask("sak.actor_bio",       sak.actor_bio,       nil, 0, 5000)
end

function set_obj_section()
	local obj_id=sak_inventory.rucksack["af_gravi_dyn5d"][1]
	local new_art="af_gravi_dyn2d"
	ODS("[~T]. #DBG: af_gravi вот ~C0A"..obj_id.."~C07")
	--db.actor:give_info_portion("voron_monster_part_1_info")
    coord_params.set_obj_section(obj_id, new_art)
end
--функция для спавна тайника Волка 
function add_vil_ranger_treasure()
	if not has_alife_info("petruha_info_treasure") then 
		send_tip("Ну ищи, щенок, если такой настырный. Может где-то рядом, а может и нет...","Из записки Волка",5,15,"g_g","sak","yellow")
		db.actor:give_info_portion("petruha_info_treasure") 
	end 
end
--тайник Мюллера 2
function add_muller_treasure2()
	local treases={5855,5854,5859,5861,5863}
	local sid=lua_random(1,#treases)
	local obj= g_sim:story_object(treases[sid])
	if obj then
		local rand = lua_random(4,6)
		for a=1,rand do
			misc.spawn_to("antirad", obj)
			misc.spawn_to("medkit_army", obj)
		end
	end
end

--slip_mayat
function info_klyk_remember()
	send_tip("Кто-то кого-то выносил из опасного места... там был Клык?!","Воспоминание",2,20,"g_g","rememb","yellow")
end

local tex_sw = 0
local tex_switcher = 0

function sak_key()
	local active_slot = db.actor:active_slot()
	if active_slot == 1 or active_slot == 2	then
			vergas_lib.s_play([[weapons\light_on]],1)
		--end
	end
	texman.swap_simple ("wpnv\\addons\\cobra\\collimator", tostring(tex_sw))
	texman.swap_simple ("wpnv\\addons\\elcan\\cetka", tostring(tex_sw))
	texman.swap_simple ("wpnv\\addons\\elcan\\setka", tostring(tex_sw))

	if tex_sw == 0 then
			tex_sw = 1
		elseif tex_sw == 1 then
			tex_sw = 2
		elseif tex_sw == 2 then
			tex_sw = 3
		elseif tex_sw == 3 then
			tex_sw = 0
	end
	texman.swap_simple ("wpnv\\addons\\pso1\\kross", tostring(tex_switcher))
	texman.swap_simple ("wpnv\\addons\\pso1\\cross", tostring(tex_switcher))
	texman.swap_simple ("wpnv\\addons\\eotech\\mark", tostring(tex_switcher))
	texman.swap_simple ("wpnv\\addons\\1p78\\crosshair", tostring(tex_switcher))
	texman.swap_simple ("wpnv\\addons\\1p78\\krosshair", tostring(tex_switcher))
	texman.swap_simple ("wpnv\\addons\\march_tactical\\cross", tostring(tex_switcher))
	texman.swap_simple ("wpnv\\addons\\march_tactical\\kross", tostring(tex_switcher))
	texman.swap_simple ("swmt\\upgrade\\eotech_xx\\mark", tostring(tex_switcher))																		  
	texman.swap_simple ( "swmt\\gauss_xx\\kross", tostring( tex_switcher ))
    texman.swap_simple ( "swmt\\gauss_xx\\cross", tostring( tex_switcher ))																	
   
	if tex_switcher == 0 then
			tex_switcher = 1
		elseif tex_switcher == 1 then
			tex_switcher = 0
	end
end
-- ecolog_apparat
function given_spots_on_map_marsh()
		for i=1,4 do
			local sobj = alife():object( "ecolog_apparat_0"..i )
			--ODS( string.format( "dsh: found %s", sobj:name() ) )
				if sobj then 
					amk.add_spot_on_map(sobj.id,"crlc_big_treasure3", "ecolog_apparat_spot")
				end
		end
end
function given_spots_on_map_aver()	
		for i=7,9 do
			local sobj = alife():object( "ecolog_apparat_0"..i )
			--ODS( string.format( "dsh: found %s", sobj:name() ) )
				if sobj then 
					amk.add_spot_on_map(sobj.id, "crlc_big_treasure3", "ecolog_apparat_spot")
				end
		end
end
function given_spots_on_map_rf()
		for i=5,6 do
			local sobj = alife():object( "ecolog_apparat_0"..i )
			--ODS( string.format( "dsh: found %s", sobj:name() ) )
				if sobj then 
					amk.add_spot_on_map(sobj.id, "crlc_big_treasure3", "ecolog_apparat_spot")
				end
		end
end
function remove_spot_from_logic( actor, obj, p )
	local spot_name = p[1]
	amk.remove_spot_from_map( obj:id(), spot_name )
end
-- отпускаем непися в свободное плавание
function make_any_npc_free(id)
	local sobj = nil
	if type(id)=="number" then
		sobj = g_sim:story_object(id)
	elseif type(id)=="string" then
		sobj = g_sim:object(id)
	end

	if sobj and sobj:alive() then
		local pk = get_netpk( sobj, 1 )
		ASSERT( ( pk and pk:isOk() ), "can't read netpacket of %s", sobj:name() )
		local data = pk:get()
		data.base_in_restrictors  = ""
		data.base_out_restrictors = ""
		data.custom_data = ""
		data.story_id = -lua_random(1,100)
		pk:set( data )
		smart_terrain.unregister_npc( sobj )
		sobj.smart_terrain_conditions = nil
		sobj:brain():update()
	end
end				   
-- new_ivancov
function ivancov_x10_time_start()
	timers.start_timer("ivancov_x10",0,0,28,"sak.time_ivancov_x10()")
end
function time_ivancov_x10()
	send_tip("Меченный, подходи в Бар, есть разговор.","Сообщение от Иванцова",1,15,"dolg","sak", "green")
	db.actor:give_info_portion("ivancov_x10_dialog_info")
end
function ivancov_x10harddisc_time_start()
	timers.start_timer("ivancov_x10harddisc",0,1,28,"sak.time_ivancov_x10harddisc_end()")
end
function time_ivancov_x10harddisc_end()
	send_tip("Меченный, подходи в Бар, надо поговорить","Сообщение от Иванцова",1,15,"dolg","sak", "green")
	db.actor:give_info_portion("ivancov_mil_dialog_start")
end
-- barman_return_x18_1_dialog
function spawn_flamethrower_bad()
	local spawn={
				{-137.0350189209,-0.00013071298599243,121.91954803467,66344,1413},
				{-188.79943847656,-0.01469749212265,145.61920166016,66349,1413},
				{-193.17945861816,-0.01310071349144,118.94592285156,66341,1413},
				{-171.70327758789,-0.013431876897812,84.791198730469,66341,1413},
				{-152.51071166992,-0.010616511106491,113.26029968262,38211,1320},
				{-162.4204864502,-0.024383813142776,122.77035522461,35105,1320},
				{-216.94375610352,1.4515274763107,123.47163391113,34641,1320}
				}
	local ps=lua_random(1,#spawn)
	local obj=create_corpse ("trup_stalker",
                           v3f(spawn[ps][1],spawn[ps][2],spawn[ps][3]),spawn[ps][5],spawn[ps][4],
                           1111) -- (1111)  
	misc.spawn_to("flamethrower_bad", obj)
end
-- проверяем переходы на Болота
function marsh_level_have()
	return has_alife_info("info_way178a") or has_alife_info("info_way183a") or has_alife_info("info_way166a")
end
function marsh_level_not_have()
	return not marsh_level_have()
end
-- проверяем переходы на ЗХ
function lost_village_level_have()
	return has_alife_info("info_way185a") or has_alife_info("info_way100a")
end
-- проверяем отсутствие переходов на Болота и ЗХ
function marsh_lv_level_not_have()
	return ( marsh_level_not_have() and not lost_village_level_have() )
end
-- РЛ кровы
function red_bloodsucker_dead()
	send_tip("Пора валить отсюда","Вернуться к Борзому",5,15,"g_g","sak","yellow")
end
-- при взятии записки marsh_tuzla_document 
function add_mar_ecolog_corpse_2()
	if not has_alife_info("marsh_tuzla_document_info") then 
		send_tip("Неужели это те, которых все ищут...","С кем же поговорить?",5,15,"g_g","sak","yellow")
		db.actor:give_info_portion("marsh_tuzla_document_info") 
	end
	level.add_pp_effector("red_teleport.ppe", 1525, false)  
	add_anomaly_hutor_spawn()  
end
-- спавним Карусель
function add_anomaly_hutor_spawn()
	local shape={shtype=0,radius=5.0,center={0,0.5,0}}
	amk_anoms.spawn_anomaly("amk_zone_mincer_weak",v3f(237.05,2.63,32.34),3503,285979, shape, "static")  
end

function lost_desertirs_out()
	misc.release_by_name("lost_military_01")
	misc.release_by_name("lost_military_02")
end
-- rezept_dummy
function add_yantar_corpses()
    local obj=create_corpse("yan_ecolog_respawn_2",
                             v3f(-2.36,4.53,-3.82),1525,38286,
                             9840)                             
    misc.spawn_to("yantar_docs", obj)
end
function add_red_forest_corpses()
	local obj=create_corpse("yan_ecolog_respawn_2",
                          v3f(-111.71,0.63,23.41),3240,10298,
                          9841)    
	misc.spawn_to("red_forest_docs",obj)
end
function add_radar_corpses()
	local obj=create_corpse("yan_ecolog_respawn_2",
                          v3f(375.52,-50.86,-182.53),2099,107098,
                          9842)    
	misc.spawn_to("rad_docs",obj)
end
function add_gen_corpses()
	local obj= g_sim:story_object(story_ids.gen_ecolog_body_1)
	if obj then
		misc.spawn_to("gen_docs", obj)
	end
end
function add_spots_x16()
	local objt= g_sim:story_object(story_ids.red_exit_to_x16_257) -- story_object(9257)
	if objt then
		level.map_add_object_spot_ser(objt.id, "level_changer_self", "to_x16")
	end 
end
------------NEW-----------------------------------------------------------------
function kanistra_fill()
	local actor = db.actor
	local act_pos = actor:position()
	local dir = device().cam_dir
	local a = vector() a.y = math.atan2(dir.x,dir.z)
	local xdelta = math.sin(a.y)
	local zdelta = math.cos(a.y)
	local lvid = actor:level_vertex_id()
	local gvid = actor:game_vertex_id()
  -------------- detect timer name for levels-----------------------------------
	local tmp_timer_name = ""  
	if level.name() == "l04_darkvalley" then
		tmp_timer_name = "1"
	elseif level.name() == "marsh" then
		tmp_timer_name = "2"
	elseif level.name() == "k01_darkscape" then
		tmp_timer_name = "3"
	end
  ---------- detect actor in box position --------------------------------------
	if 
	( 
		( level.name() == "l04_darkvalley"
		and amk.check_npc_in_box( actor, point_drop[19], point_drop[20] ) ~= false )
		and  actor:has_info( "bar_generator" )
	)
	
	or (
		( level.name() == "marsh"
		and amk.check_npc_in_box( actor, point_drop[21], point_drop[22] ) ~= false )
		and actor:has_info("mar_leader_job_done")
	)
	or (
		( level.name() == "k01_darkscape" 
		and amk.check_npc_in_box( actor, point_drop[43], point_drop[44]) ~= false )
		and actor:has_info("esc_generator")
	)
  
	then
		tmp_timer_name = "sak.kanistra_full(" .. tmp_timer_name .. ")"
		timers.start_timer("knstr_ful", 8, tmp_timer_name )
		level.disable_input()
		close_window()
		snd_toilet()
		return
	else
		misc.spawn_to( "kanistra", actor )
		close_window()
	end 
end 
-- метка на переход Радар - Припять
function add_spots_pripyat()
	local obj1 = g_sim:story_object(story_ids.exit_to_pripyat_01) -- story_id = 1007
	if obj1 then
		level.map_add_object_spot_ser(obj1.id, "level_changer_self", "to_pripyat")
	end
	local obj2 = g_sim:story_object(story_ids.exit_prip_to_radar_01) -- story_id = 833
	if obj2 then
		level.map_add_object_spot_ser(obj2.id, "level_changer_self", "to_radar")
	end  
	info_received()
end
-- yurik_dead
function gar_dram_novice_time_start()
	timers.start_timer("gar_dram_novice",0,23,55,"sak.gar_dram_novice_dead()")
end
function gar_dram_novice_dead()
	if not has_alife_info("gar_dm_novice_gave_vykup") then 
		if level.name()~="l02_garbage" then
		local obj= g_sim:story_object(story_ids.gar_dm_novice)
			if obj then
				local pk = get_netpk(obj)
				local data = pk:get()
				data.health     = 0
				data.upd.health = 0
				pk:set(data)
			end
		else
		local obj = level_object_by_sid(104)
			if obj and obj:alive() then
				obj:kill(obj)
			end
		end
	end
	db.actor:give_info_portion("gar_dm_bandits_2have")  
end
-- проверяем переходы в РЛ
function red_forest_level_have()
	return has_alife_info("info_way105a") or has_alife_info("info_way106a")
end
function ros_red_forest_lc_have()
	return has_alife_info("info_way104a")
end
function ros_red_forest_lc_not_have()
	return not ros_red_forest_lc_have()
end
-- mixture quest
function mixture_check()
	close_window()
	if not has_alife_info("drugs_receipt") or not has_alife_info("mixture_drink_ready") then
		return 
	end
	timers.stop_timer("mixture_too_late")
	db.actor:disable_info_portion("mixture_too_late_timer")
	local hunger = sak_dialog.gg_hangry() or false
	if not hunger and not has_alife_info("mixture_reward") then
		nlc_vars.mixture_use_count = 0
		send_tip("Надо же было на голодный желудок! Всё с начала начинать...","Чёрт!", 1, 10, "g_g", "sak", "red")
		return
	end
	local use_count = nlc_vars.mixture_use_count or 0
	use_count = use_count + 1
	nlc_vars.mixture_use_count = use_count
	if ( use_count < 5 ) and not has_alife_info("mixture_reward") then
		mixture_wait_msg(use_count)
		timers.start_timer("mixture_timer",0,23,55,"sak.mixture_ready_msg()")
		db.actor:disable_info_portion("mixture_drink_ready")
	elseif ( use_count == 5 ) and not has_alife_info("mixture_reward") then
		mixture_memory_msg()
	else
		mixture_danger_msg()
	end
end
function mixture_wait_msg(num)
	local use_count = num
	local text_count = ""
	if use_count == 1 then
		text_count = "Первый"
	elseif use_count == 2 then
		text_count = "Второй"
	elseif use_count == 3 then
		text_count = "Третий"
	elseif use_count == 4 then
		text_count = "Четвёртый"
	end
	local text = text_count.." приём микстуры по инструкции. Следующий - через сутки."
	send_tip(text,"Не забыть!", 1, 10, "g_g", "sak", "red")
end
function mixture_danger_msg()
	send_tip("Совсем мне хреново, точно не стоит продолжать пить эту дрянь...","Ёпт!", 1, 10, "g_g", "sak", "red")
	local snd_obj = xr_sound.get_safe_sound_object([[actor\pain_6]])
	snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
	local amp = 1
	if nlc_vars.mixture_use_count > 6 then
		amp = 2
	end
	local h=hit()
    h.draftsman=db.actor
    h:bone("bip01_spine")
    h.type=hit.telepatic
    h.power=0.07*amp
    h.impulse=0.6*amp
    db.actor:hit(h)
	sleep_manager.add_sleepiness(30)
	schedule.add("mixt_dang","sak.add_mixt_effect(1)",2000)
end
function mixture_memory_msg()
	send_tip("Что-то мне нехорошо, о чём и предупреждал Круглов. Пора завязывать с этой химией...или ещё нет?!","Мде...", 1, 10, "g_g", "sak", "red")
	timers.start_timer("mixture_eff",0,0,4,"sak.add_mixt_effect(3)")
	timers.start_timer("mixture_eff",0,0,7,"sak.add_mixt_effect(2)")
	timers.start_timer("mixture_reward",0,0,15,"sak.mixture_reward()")
end
function mixture_ready_msg()
	send_tip("Время пить микстуру.","Важно!", 1, 10, "g_g", "sak", "red")
	db.actor:give_info_portion("mixture_drink_ready")
	db.actor:give_info_portion("mixture_too_late_timer")
	timers.start_timer("mixture_too_late",0,5,59,"sak.mixture_too_late_msg()")
end
function mixture_too_late_msg()
	if has_alife_info("mixture_reward") or not has_alife_info("mixture_too_late_timer") then
		return
	end
	send_tip("Забыл микстуру выпить вовремя. Всё с начала начинать...","Чёрт!", 1, 10, "g_g", "sak", "red")
	nlc_vars.mixture_use_count = 0
end
function add_mixt_effect(eff)
	if eff == 1 then 
		local snd_obj = xr_sound.get_safe_sound_object([[actor\napryag_heart_faid]])
		snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
	elseif eff == 2 then
		level.remove_pp_effector(1001)
		level.remove_cam_effector(150)
		level.add_pp_effector("alcohol.ppe", 1000, true)
	elseif eff == 3 then
		level.add_pp_effector("surge_shock_old.ppe", 1001, true)
		level.add_cam_effector("camera_effects\\drunk.anm", 150, true, "")
		schedule.add("mixt_mem","sak.add_mixt_effect(1)",300)
	end
end
function mixture_reward()
	level.remove_pp_effector(1000)
	send_tip("Кажись, есть какой-то прок от этой чёртовой микстуры...","Воспоминание",0,20,"g_g","rememb","yellow")
	db.actor:give_info_portion("mixture_reward")
	local obj=amk.spawn_item("rukzak_inventory_box",sak.v3f(-185.33709716797,-22.750329971313,-450.47549438477),13,65183)
	fill_mixture_reward(obj.id)
end
function fill_mixture_reward(id)
	local obj = g_sim:object(id)
	if obj then
		g_sim:create("wpn_mp153",obj.position,obj.m_level_vertex_id,obj.m_game_vertex_id,obj.id)
	for i = 1,5 do
		g_sim:create("ammo_12x76_dart",obj.position,obj.m_level_vertex_id,obj.m_game_vertex_id,obj.id)
	end
		if obj.online then
			g_sim:set_switch_online(obj.id, false)
			g_sim:set_switch_offline(obj.id, true)
			amk.convert_npc[obj.id]=1
		end
	end
end
-- Kruglov flash quest
function spawn_flash()
	timers.start_timer("kruglov_flash_search",0,1,2,"sak.flash_search_end()")
	if has_alife_info("volkodav_killed_by_actor") and not has_alife_info("volkodav_dt_art_start") and not has_alife_info("volkodav_dt_shema_start") then
		local tbl = {"ros_inventory_box_0013", "ros_inventory_box_0014", "ros_inventory_box_0015",
		"ros_inventory_box_0016", "ros_inventory_box_0022", "ros_inventory_box_0025", "ros_inventory_box_0027"}
		local obj = g_sim:object(tbl[lua_random(#tbl)])
		if obj then
			g_sim:create("bar_ecolog_flash",obj.position,obj.m_level_vertex_id,obj.m_game_vertex_id,obj.id)
			g_sim:create("wpn_m16a4",obj.position,obj.m_level_vertex_id,obj.m_game_vertex_id,obj.id)
			for a=1,3 do
				local pda=g_sim:create("device_pda_npc",obj.position,obj.m_level_vertex_id,obj.m_game_vertex_id,obj.id)
				if pda then
					vergas_pda.add_tbl_pda(db.actor:id(),pda.id,3)
					pda_sort.set_pda_condition( obj.id, status_pda )
				end
			end
			if obj.online then
				g_sim:set_switch_online(obj.id, false)
				g_sim:set_switch_offline(obj.id, true)
				amk.convert_npc[obj.id]=1
			end
		end
	end
end
function stop_flash_search_timer()
	timers.stop_timer("flash_search_end")
end
function flash_search_end()
	send_tip("Пора бы навестить уже Круглова","Время?", 1, 10, "g_g", "sak", "green")
	db.actor:give_info_portion("timer_search_flash_end")
end
function barman_flash_timer_end()
	send_tip("Пора заглянуть к Бармену по поводу ПДА Круглова","Время?", 1, 10, "g_g", "sak", "green")
	db.actor:give_info_portion("timer_barman_flash_end")
end
function start_barman_flash_timer()
	timers.start_timer("barman_flash_timer",0,0,59,"sak.barman_flash_timer_end()")
end
function take_gift_by_flash()
	if not has_alife_info("info_way113a") then
		add_new_military()
		ivancov_cherep_start_timer()
		mike.add_spots_bar_mil()
	end
	treasure_manager.get_treasure_manager():give_treasure("mil_secret_kruglov")
end
function ivancov_cherep_start_timer()
	if has_alife_info("ivancov_val_business_done") then
		timers.start_timer("ivancov_cherep_start_timer",0,0,10,"sak.ivancov_cherep_start()")
	end
end									 
function ivancov_cherep_start()
	send_tip("Меченный, есть работёнка для тебя. Подходи, обсудим","Сообщение от Иванцова",5,15,"dolg","sak","green")
end
function barman_flash_precond()
	return ( ( not has_alife_info("volkodav_umer_dialog") ) or has_alife_info("kruglov_is_fly") or has_alife_info("sak_ros_ecolog_end") )
end
function barman_flash_precond2()
	return ( has_alife_info("volkodav_umer_dialog") and ( not has_alife_info("sak_ros_ecolog_end") ) and ( not has_alife_info("kruglov_is_fly") ) )
end
-- показать кейс для Думенко Сидору
function sidor_dumenko_case_timer()
	timers.start_timer("sidor_dumenko_case_timer",0,0,10,"sak.sidor_dumenko_case_timer_end()")
end
function sidor_dumenko_case_timer_end()
	db.actor:give_info_portion("sidor_dumenko_case_timer")
end
-- разное
function kill_offline_npc(sid)
	local obj = g_sim:story_object(sid)
	if obj and obj.alive and obj:alive() then
		local pk = get_netpk(obj)
		local data = pk:get()
		data.custom_data = "[dont_spawn_character_supplies]"
		data.health     = 0
		data.upd.health = 0
		pk:set(data)
	end
end
function lim_tp()
	local act = db.actor
	level.add_pp_effector("blink.ppe", 150, false)
	act:set_actor_position(vector():set(-52.008441,-10.776226,-176.615310), 2891, 2993)
	act:set_actor_direction(vector():set(-52.142536,-10.771631,-155.590972), 2894, 2993)
end
function lim_tp_msg()
	send_tip("Не пойму, был ли это сон или просто глюк... или ко мне начали возвращаться воспоминания?","И что это было?!", 1, 10, "g_g", "sak", "green")
end
function zapiska_petruha_msg()
	send_tip("Похоже, она принадлежала тому застреленному бедолаге-сталкеру. Уж не он ли - друг Петрухи? Надо показать ему записку","Найденная записка", 5, 10, "g_g", "sak", "yellow")
end
function sidor_scafandr_msg()
	send_tip("Вроде прояснилось насчёт общака бандитского, если всё это правда, конечно. Впрочем, за что купил, за то... продам","Поговорить с Сидоровичем", 20, 10, "g_g", "sak", "green")
end
function eagle_cond()
	local obj = g_sim:object("ros_stalker")
	local c_obj = client_obj(obj.id)
	if c_obj then
		local gun = c_obj:object("wpn_desert_eagle")
		if gun then
			params.post_cond_check(gun:id(),0.45)
		end
	end
end
function dibils_krazy_out()
	misc.release_by_name("marsh_stalker_1")
	misc.release_by_name("krazy_mil")
	db.actor:give_info_portion("dibils_krazy_out_info")
end
function vlad_first_sms()
	send_tip(game.translate_string("val_sos_pda"),"Добавлена метка на сигнал 'SOS'",0,10,"stalker","sak","red")
end
function vlad_oksana_out()
	timers.start_timer("vlad_oksana_out",lua_random(5,7),12,30,"sak.remove_vlad_oksana()")
end
function remove_vlad_oksana()
	if level.present() and level.name()~="l01_escape" then
		db.actor:give_info_portion("vlad_oksana_out")
	else
		timers.start_timer("vlad_oksana_out2",0,1,0,"sak.remove_vlad_oksana()")
	end
end
function esc_no_charge()
	if not has_alife_info("kanistra_esc_not_over") and not has_alife_info("esc_no_charge") then
		if lua_random(1,5) == 3 then
			db.actor:give_info_portion("esc_no_charge")
		end
	elseif not has_alife_info("kanistra_esc_not_over") and has_alife_info("esc_no_charge") then
		if lua_random(1,2) == 2 then
			db.actor:disable_info_portion("esc_no_charge")
		end
	end
end
function bar_no_charge()
	if not has_alife_info("kanistra_bar_not_over") and not has_alife_info("bar_no_charge") then
		if lua_random(1,4) == 2 then
			db.actor:give_info_portion("bar_no_charge")
		end
	elseif not has_alife_info("kanistra_esc_not_over") and has_alife_info("bar_no_charge") then
		if lua_random(1,2) == 1 then
			db.actor:disable_info_portion("bar_no_charge")
		end
	end
end
-- bonus rewards
function tm_courier_bonus_timer()
	timers.start_timer("tm_bonus_timer",0,0,lua_random(10,20),"sak.tm_courier_bonus_msg()")
end
function tm_courier_bonus_msg()
	send_tip("Меченный, подходи на Кордон. На твоё имя посылка пришла","Сообщение от Сидоровича",11,20,"trader","sak", "green")
end
function barmen_courier_bonus_timer()
	timers.start_timer("barmen_bonus_timer",0,0,lua_random(10,20),"sak.barmen_courier_bonus_msg()")
end
function barmen_courier_bonus_msg()
	send_tip("Меченный, подходи в Бар. На твоё имя посылка пришла","Сообщение от Бармена",11,20,"barman","sak", "green")
end
function lim_trader_courier_bonus_timer()
	timers.start_timer("lim_trader_bonus_timer",0,0,lua_random(10,20),"sak.lim_trader_courier_bonus_msg()")
end
function lim_trader_courier_bonus_msg()
	sak.send_tip("Меченный, подходи в Лиманск. На твоё имя посылка пришла","Сообщение от Михалыча",11,20,"trader","sak", "green")
end
-- moved from spawn_teleport.script
function marsh_teleport_1(actor, npc)
	level.add_pp_effector("teleport.ppe", 2006, false)	
	db.actor:set_actor_position(patrol("marsh_walk_1"):point(0))
	local dir = patrol("marsh_walk_1"):point(0):sub(patrol("marsh_walk_1"):point(0))
	db.actor:set_actor_direction(-dir:getH()) 
end
function marsh_teleport_2(actor, npc)	
	level.add_pp_effector("teleport.ppe", 2006, false)
	db.actor:set_actor_position(patrol("marsh_walk_2"):point(0))
	local dir = patrol("marsh_walk_2"):point(0):sub(patrol("marsh_walk_2"):point(0))
	db.actor:set_actor_direction(-dir:getH())	
end
-- borov surprise
function borov_check_info()
	if has_alife_info("borov_31_done") and has_alife_info("bandit_krisyk_done") and borov_check_seif()==true then
		timers.start_timer("borov_revenge",1,18,28,"sak.time_borov_revenge()")		
	end
end
function time_borov_revenge()
	if level.present() and level.name()~="l05_bar" then
		db.actor:give_info_portion("info_borov_revenge")
		local name,sname = amk_names_lists.get_strings()
		send_tip("Слыхали, в Баре, у Долга под самым носом, сталкерскую нычку обнесли. Всё подчистую вынесли. Хвосты вонючие - и те прибрали. Воронин лютует",name.." "..sname,0,15,"uniq","news","gray")
		local name2,sname2 = amk_names_lists.get_strings()
		send_tip("Три шкуры за хранение дерут, а гарантии нет. Без своих не обошлось, факт",name2.." "..sname2,15,15,"uniq","news","gray")
	else
		timers.start_timer("borov_revenge2",0,1,0,"sak.time_borov_revenge()")
	end
end
function borov_check_seif()
	local tbl = stored_table("dialog_timers", true)
	return tbl["time_start_voronin_seif"] ~= nil
end
function voronin_job_timer()
	timers.start_timer("voronin_job_timer",0,0,lua_random(30,50),"sak.voronin_job_msg()")
end
function voronin_job_msg()
	send_tip("Внимание! Срочно ищется расторопный сталкер для выполнения непыльной работёнки в Тёмной долине\\nДетали обговорим при личной встрече","Воронин",1,15,"dolg","sak","green")
	db.actor:give_info_portion("voronin_job_timer")
	sak_dialog.voronin_job_out()
end
function dt_mns_msg()
	send_tip("Теперь сказать Вовчику пару слов напоследок и можно топать в Бар","Кажется, довёл, дальше пусть сам",1,15,"g_g","sak","yellow")
end
-- наймы в ТЧ, вызов из котовод_рестрикторс
function aver_merc_items(id)
	local tbl = {}
	table.insert(tbl,id)
	g_sim:create("sak_resiver",vector():set(-367.5334,40.5504,377.1361),236624,2887)
	local yashik = g_sim:create("weapon_box",vector():set(-375.9109,43.8319,393.0579),222484,2887)
	if yashik then
		table.insert(tbl,yashik.id)
	end
	yashik = g_sim:create("weapon_box",vector():set(-375.8285,43.8051,391.8096),222481,2887)
	if yashik then
		table.insert(tbl,yashik.id)
	end
	local conservi = g_sim:create("physic_object",vector():set(-367.4661,40.5475,380.5623),236628,2887)
	if conservi then
		local pk = get_netpk(conservi,1)
		local data = pk:get()
		data.visual_name="new_item\\box_conserv"
		pk:set(data)
		table.insert(tbl,conservi.id)
	end
	nlc_vars.aver_merc_items = tbl
end	 
function spawn_aver_mercs()
	g_sim:create("aver_killer_spawn",vector():set(-359.7993,52.4532,397.4600),250264,2887)
	g_sim:create("aver_killer_spawn",vector():set(-359.1213,52.8787,380.9293),251534,2887)
	g_sim:create("aver_killer_spawn",vector():set(-360.4337,52.7552,398.8376),248981,2887)
end
function clear_aver_mercs()
	local tbl = stored_table("aver_merc_items", true)
	for _,v in pairs(tbl) do
		local obj = g_sim:object(v)
		if obj then
			misc.release_obj(obj)
		end
	end
	misc.release_by_name("aver_physic_object_0022")
	misc.release_by_name("aver_physic_object_0024")
	nlc_vars.aver_merc_items = nil
end
function x12_zaval_msg()
	send_tip("Всё, приехали... И о чём я только думал?! Придётся идти через Райцентр. Похоже, драки наверху не избежать","Завал, дальше хода нет",1,15,"g_g","sak","red")
end
function is_alive_upir()
	local obj = g_sim:object("gar_stalker_0007")
	if obj and obj.alive and obj:alive() then
		return true
	else
		return false
	end
end
-- отложенные СМС из диалогов; вызывать из последней фразы, желательно, с брейком
function add_msg(func_name)
	schedule.add("add_msg",func_name,10000)	
end
function gross_merc_timer()
	timers.start_timer("gross_merc_timer",0,0,15,"sak.gross_merc_ready()")
end
function gross_merc_ready()
	db.actor:give_info_portion("gross_merc_ready")
end